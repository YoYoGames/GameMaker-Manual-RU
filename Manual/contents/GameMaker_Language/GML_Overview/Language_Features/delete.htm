<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>удалить</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the delete function" />
  <meta name="rh-index-keywords" content="delete" />
  <meta name="search-keywords" content="delete" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>удалить</h1>
  <p>Оператор <span class="inline">delete</span> используется для <strong>отмены ссылки на</strong> <a href="../Structs.htm">структуру</a> и имеет следующий синтаксис:</p>
  <p class="code">delete &lt;variable&gt;;</p>
  <p>Это означает, что вы вызываете оператор delete вместе с переменной, содержащей struct, и он удалит конкретную <em>ссылку </em>на struct, хранящуюся в данной переменной (ссылка - это просто значение, указывающее на область памяти.
    в которой хранится структура и ее содержимое). Если эта ссылка была последней ссылкой на struct в вашей игре, то <a class="glossterm" data-glossterm="сборщик мусора" href="#">сборщик мусора</a> удалит struct из памяти в
    следующей <a class="glossterm" data-glossterm="итерация" href="#">итерации</a>, обычно в самом начале следующего шага.</p>
  <p class="note"><strong>ПРИМЕЧАНИЕ</strong>: <span class="inline">delete</span> можно использовать только вместе с переменными, но <i>не</i> с выражениями.</p>
  <p>По умолчанию структуры, на которые больше нет ссылок в коде, будут автоматически собираться в мусор на следующих шагах после их использования, но хорошей практикой является использование этого оператора для явной пометки их для сборщика мусора, чтобы он удалил их из памяти в
    самом начале следующего шага, освобождая память быстро и более эффективно.</p>
  <p>В следующем примере показано создание структуры - например, в событии Create Event экземпляра:</p>
  <p class="code">mystruct =<br/> {
    <br/>     a : 0,<br/>     b : 100,<br/>     c : &quot;Hello World&quot;<br/> }
  </p>
  <p>Затем эта структура будет использоваться в событиях экземпляра как обычно, а затем, наконец, будет помечена для сбора мусора в событии <a href="../../../The_Asset_Editors/Object_Properties/Object_Events.htm">Clean Up</a>, как показано ниже:</p>
  <p class="code">delete mystruct;</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../Language_Features.htm">Особенности языка</a></div>
        <div style="float:right">Далее: <a href="If_Else_and_Conditional_Operators.htm">if / else и условные операторы</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
delete
-->
  <!-- TAGS
delete
-->

</body></html>