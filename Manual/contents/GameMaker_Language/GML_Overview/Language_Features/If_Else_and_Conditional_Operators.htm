<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>if / else и условные операторы</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the If / Else and Conditional Operators" />
  <meta name="rh-index-keywords" content="?,if,else,ternary operator,then" />
  <meta name="search-keywords" content="if,else,then,?,ternary,conditional" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>if / else и условные операторы</h1>
  <p>Фундаментальной особенностью большинства языков программирования является возможность задать простой вопрос, который дает булев <span class="inline">true</span> или <span class="inline">false</span> ответ, и в <span class="notranslate">GML</span> это достигается с помощью ключевого слова <span class="inline">if</span>. Простое условие <span class="inline">if</span> берет <a class="glossterm" data-glossterm="выражение" href="#">выражение</a> и выполняет один или несколько<span class="glossextra">операторов</span>, если выражение разрешается как <span class="inline">true</span>, со следующей основной формой:</p>
  <p class="code">if (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p><br>
    Здесь вы говорите, что если выражение разрешается как <span class="inline">true</span>, то сделайте то-то. Обратите внимание, что часть условия &quot;then&quot; является <em>неявной</em>, но существует ключевое слово <span class="inline">then</span>, которое можно использовать (хотя оно почти всегда опускается), поэтому вы также можете создавать подобные условия:</p>
  <p class="code">if (&lt;expression&gt;) then<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p>Кроме <span class="inline">if</span> и <span class="inline">then</span>, вы можете использовать ключевое слово <span class="inline">else</span>, чтобы сделать что-то еще, если проверяемое выражение оценивается как <span class="inline">false</span>. Эта форма &quot;<span class="inline">if... then... else...</span>&quot; выглядит следующим образом:</p>
  <p class="code">if (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;;<br />
    }<br />
    else<br />
    {<br />
        &lt;statement&gt;;<br />
    }</p>
  <p>В этом случае выражение будет оценено, и если оно оценивается как <span class="inline">false</span>, то выполняется оператор после <span class="inline">else</span>, в противном случае выполняется начальный оператор (это <span class="inline">true</span>).</p>
  <p class="note"><span class="note">ПРИМЕЧАНИЕ</span> В языке <span class="notranslate">GameMaker</span> любое значение, которое меньше или равно 0, будет оцениваться как <span class="inline">false</span>, а любое значение, которое больше 0, будет оцениваться как <span class="inline">true</span>.</p>
  <p>Хорошей привычкой является всегда ставить скобки вокруг выражений и фигурные скобки {} вокруг утверждений в <span class="inline">if</span> (иначе будет выполнено только первое утверждение), и занимать новую строку в блоке для каждого утверждения, например:</p>
  <p class="code">// This will work<br />
    if &lt;expression&gt; &lt;statement&gt;;<br />
    <br />
    // Example:<br />
    if test == true variable = false else variable = true;
  </p>
  <p class="code">// This is better<br />
    if (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;<br />
    }<br />
    else<br />
    {<br />
        &lt;statement&gt;<br />
    }<br />
    <br />
    // Example<br />
    if (test == true)<br />
    {<br />
        variable = false;<br />
    }<br />
    else<br />
    {<br />
        variable = true;<br />
    }
  </p>
  <p>Обратите внимание, что хотя этот вариант немного более многословен, он означает, что в коде нет двусмысленности и что он всегда будет правильно компилироваться на всех платформах. Однако в исходном примере это может быть не так, как объясняется в разделе на странице " <a href="../Expressions_And_Operators.htm">Выражения и операторы</a> ".</p>
  <p class="note"><strong>ПРИМЕЧАНИЕ</strong>: При сравнении двух значений для проверки их равенства следует использовать оператор &quot;<span class="inline">==</span>&quot;, а для присваивания - только оператор &quot;<span class="inline">=</span>&quot;. В настоящее время <span class="notranslate">GameMaker</span> рассматривает их как взаимозаменяемые, но это может измениться в будущем, и ваш код будет чище и нагляднее при использовании правильных операторов для сравнения и присваивания.</p>
  <p>Чтобы привести пример использования <span class="inline">if</span>, рассмотрим следующий код, который будет перемещать экземпляр к позиции <span class="inline">x=200</span> в комнате, когда он помещен в событие Step:</p>
  <p class="code">if (x &lt; 200)<br />
    {<br />
        x += 4;<br />
    }<br />
    else<br />
    {<br />
        x = 200;<br />
    }</p>
  <p>Обратите внимание, что в <span class="inline">if</span> можно также выполнять <i>составные</i> проверки, то есть проверять различные значения или выражения в одном операторе. В этих проверках можно использовать различные <a href="../Expressions_And_Operators.htm">комбинированные операторы</a> (<span class="inline">&amp;&amp;</span> and, <span class="inline">||</span> or и <span class="inline">^^</span> xor). Когда вы это сделаете, <span data-keyref="GameMaker Name">GameMaker</span> будет оценивать каждое из них по очереди, и в зависимости от того, как они оценены, остальные могут быть пропущены. Например:</p>
  <p class="code">if (keyboard_check_pressed(vk_enter)) &amp;&amp; (instance_exists(obj_Player))<br />
    {<br />
        go = false;<br />
        alarm[0] = room_speed;<br />
    }</p>
  <p>Здесь мы проверяем с помощью оператора <span class="inline">&amp;&amp;</span> &quot;and&quot;, поэтому он проверяет, если <em>оба </em>условия в <span class="inline">if</span> оцениваются как <span class="inline">true</span>, а если первое из них <span class="inline">false</span>, то второе даже не проверяется. Это называется &quot;замыканием&quot; кода, поэтому при комбинировании выражений для проверки нужно следить за тем, чтобы самое &quot;дешевое&quot; по производительности выражение всегда было первым, чтобы избежать оценки более дорогих выражений, если первое оценивается в <span class="inline">false</span>. Аналогично, если условие может быть оценено как <span class="inline">true</span> или <span class="inline">false</span> во время компиляции, то все условие будет удалено из кода, например, у вас есть <a href="../Variables/Constants.htm">макрос</a> <span class="inline">DEBUG_ON </span>для отладки, и он может быть либо <span class="inline">true</span>, либо <span class="inline">false</span> - если он установлен в <span class="inline">false</span>, то следующий блок кода будет удален из игры при компиляции:</p>
  <p class="code">if DEBUG_ON == true<br />
    {<br />
        show_debug_message(&quot;Instances = &quot; + string(instance_count));<br />
    }</p>
  <p>Вы также можете выполнять <b>условные операции</b> (также известные как <b>тернарные</b> операции), которые по сути являются &quot;коротким&quot; способом выполнения базовых операций <span class="inline">if</span>. Он имеет следующий синтаксис:</p>
  <p class="code">variable = &lt;condition&gt; ? &lt;statement1 (if <i>true</i>)&gt; : &lt;statement2 (if <i>false</i>)&gt;</p>
  <p>Условный оператор &quot;<span class="inline">?</span>&quot; вернет одно из двух заданных значений в зависимости от того, оценивается ли выражение условия в <span class="inline">true</span> или <span class="inline">false</span>, например:</p>
  <p class="code">var temp_x = (x &lt; (room_width / 2)) ? 32 : (room_width - 32);</p>
  <p>Приведенный выше код проверит значение &quot;x&quot; на соответствие значению половины ширины комнаты, и если оно меньше, то установит значение &quot;<span class="inline">temp_x</span>&quot; равным 32, иначе &quot;<span class="inline">temp_x</span>&quot; будет равно ширине комнаты - 32. Вот еще несколько примеров использования:</p>
  <p class="code">draw_text(x, y, &quot;The fee is &quot; + (global.Member ? &quot;$2.00&quot; : &quot;$10.00&quot;));<br />
    path_start(((global.level &gt; 10) ? path_hard : path_easy;), 2, path_action_reverse, true);<br />
    (--hp &lt;= 0) ? instance_destroy() : score += 10;</p>
  <p>Стоит также отметить, что вы можете вложить условные операции, но в этом случае каждая операция должна быть заключена в скобки, например:</p>
  <p class="code">var c = a ? &quot;foo&quot; : (b ? &quot;bar&quot; : &quot;whee&quot;); // Correct<br />
    var c = a ? &quot;foo&quot; : b ? &quot;bar&quot; : &quot;whee&quot;;   // Will cause an error</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a data-xref="{title}" href="../GML_Overview.htm">Обзор GML</a></div>
        <div style="float:right">Следующее: <a data-xref="{title}" href="../Addressing_Variables_In_Other_Instances.htm">Обращение к переменным в других случаях</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
if
else
then
ternary operators
conditional operators
-->
  <!-- TAGS
if
else
then
-->
</body>
</html>