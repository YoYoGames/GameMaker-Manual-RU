<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>новый</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the new function" />
  <meta name="rh-index-keywords" content="new" />
  <meta name="search-keywords" content="new" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>новый</h1>
  <p>Оператор <span class="inline">new</span> можно использовать для создания структуры с помощью функции, которая вызывается с заданными аргументами. Затем функция может заполнить struct переменными из аргументов - подобно тому, как событие create экземпляра устанавливает начальные переменные для экземпляра - и затем оператор <span class="inline">new</span> возвращает struct. Перед использованием этого оператора важно отметить, что заданная функция <i>должна быть помечена как функция <span class="inline">constructor</span> </i>, иначе оператор <span class="inline">new</span> не создаст структуру (пример кода ниже показывает это, а более подробную информацию можно найти на странице <a href="../Structs.htm">Структуры</a>).</p>
  <p class="note"><span class="note">ПРИМЕЧАНИЕ</span> Вы можете проверить структуру, чтобы узнать, какая функция была использована для ее создания, с помощью функции времени выполнения <a href="../../GML_Reference/Variable_Functions/instanceof.htm"><span class="inline">instanceof()</span></a>.</p>
  <p>Этот оператор имеет следующий синтаксис:</p>
  <p class="code"><span>&lt;variable&gt; = </span>new &lt;function&gt; (&lt;argument&gt;, &lt;argument&gt;, ...);</p>
  <p>Когда вы используете оператор new вместе с функцией, он возвращает ссылку на struct, которая хранится в данной переменной, позволяя вам получить доступ к struct и любым переменным, которые были созданы в ней функцией.</p>
  <p>В следующем примере показана функция, которая была определена для использования в качестве конструктора:</p>
  <p class="code">function init_struct(_a, _b, _c) constructor<br />
    {<br />
        a = _a;<br />
        b = _b;<br />
        c = _c;<br />
    }</p>
  <p>Затем эту функцию можно использовать вместе с оператором <span class="inline">new</span> для создания структуры и заполнения ее переменными, установленными на значения аргументов, используемых в функции, как это сделано здесь:</p>
  <p class="code">mystruct = new init_struct(10, 100, &quot;Hello World&quot;);</p>
  <p>Важно отметить, что вызов new на любой функции, которая <em>не</em> была отмечена как конструктор, вызовет <a href="../../../Additional_Information/Errors/Runner_Errors.htm">исключение во время выполнения</a>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../Language_Features.htm">Особенности языка</a></div>
        <div style="float:right">Следующий: <a href="delete.htm"><span class="notranslate">delete</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
new
-->
  <!-- TAGS
new
-->
</body>
</html>