<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>в то время как</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the while function" />
  <meta name="rh-index-keywords" content="while" />
  <meta name="search-keywords" content="while" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>в то время как</h1>
  <p>На сайте <span class="notranslate">GameMaker Language</span> есть несколько способов выполнения <i>циклов</i>, один из самых важных - цикл <span class="inline">while</span>. Эта функция цикла имеет вид:</p>
  <p class="code">while (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p>Здесь у вас есть <a class="glossterm" data-glossterm="заявление" href="#">утверждение</a>, которое повторяется снова и снова на основе результатов оценки <a class="glossterm" data-glossterm="выражение" href="#">выражения</a>, т.е.: с циклом <span class="inline">while</span>, пока выражение оценивается как <span class="inline">true</span>, утверждение (которое также может быть блоком кода из нескольких утверждений с фигурными скобками <span class="inline">{}</span>) выполняется. Ниже приведен пример типичного использования &quot;while&quot;:</p>
  <p class="code">while (place_meeting(x, y, obj_Wall))<br />
    {<br />
        x -= 1;<br />
    }</p>
  <p>Приведенный выше код проверяет столкновение между вызывающим экземпляром и экземпляром &quot;стены&quot;, и он будет выполнять несколько <a class="glossterm" data-glossterm="итерация" href="#">итераций</a>, пока происходит столкновение - перемещение экземпляра влево на один пиксель - пока экземпляр больше не столкнется.</p>
  <p><strong>Когда следует использовать цикл <span class="inline">while</span>?</strong> Его следует использовать в любом случае, когда вы хотите повторить одно или несколько утверждений, но не знаете - или не заботитесь - сколько раз оно должно повториться, помня, что если начальная оценка <span class="inline">false</span>, то утверждения могут даже не выполняться.</p>
  <p>Обратите внимание, что <strong>с циклами <span class="inline">while</span> следует быть очень осторожным</strong>! Вы можете легко сделать <i>бесконечные</i> циклы, и в этом случае ваша игра зависнет и больше не будет реагировать ни на какой пользовательский ввод, и ее придется принудительно закрыть. Например:</p>
  <p class="code">while (!place_free(x, y))<br />
    {<br />
        x = random(room_width);<br />
        y = random(room_height);<br />
    }</p>
  <p>Теперь, приведенный выше код может работать нормально, но он также может вызвать бесконечный цикл, если экземпляр не сможет найти пустую позицию для перемещения, что приведет к зависанию игры. Если вы окажетесь в ситуации, когда такое возможно, то вам следует либо использовать другой вид неблокирующего цикла, либо использовать дополнительную проверку переменной в выражении (для проверки можно использовать несколько выражений вместе с<span class="glossextra">операторами</span> <a href="../Expressions_And_Operators.htm"><span class="inline">and</span> (&amp;<span class="inline">&amp;</span>)</a>, <a href="../Expressions_And_Operators.htm"><span class="inline">or</span> (<span class="inline">||</span>)</a> и <a href="../Expressions_And_Operators.htm"><span class="inline">xor</span> (<span class="inline">^^</span>)</a> ):</p>
  <p class="code">var _check = 0;<br />
    while ((!place_free(x, y)) &amp;&amp; (_check &lt; 100))<br />
    {<br />
        x = random(room_width);<br />
        y = random(room_height);<br />
        _check += 1;<br />
    }<br />
    if (_check &gt;= 100) <br />
    {<br />
        // code failed, so deal with it<br />
    }</p>
  <p>В качестве альтернативы можно использовать оператор <span class="inline"><a href="break.htm">break</a></span> для выхода из цикла, например, следующий код будет генерировать 100 случайных чисел, а затем продолжит, несмотря на то, что оценка <span class="inline">while</span> <em>всегда</em> будет <span class="inline">true</span>:</p>
  <p class="code">var i = 0;<br />
    while (true)<br />
    {<br />
        x[i] = random(room_width);<br />
        y[i] = random(room_height);<br />
        if ((i++) &gt;= 100)<br />
        {<br />
            break;<br />
        }<br />
    }</p>
  <p>Вы также можете использовать <a href="continue.htm"><span class="notranslate">continue</span></a> в цикле <span class="inline">while</span>. При его использовании текущая итерация цикла завершится, и цикл будет запущен заново на новой итерации, например:</p>
  <p class="code">var file = file_text_open_read(&quot;Game_Data.txt&quot;);<br />
    var _num = 0;<br />
    while (!file_text_eof(file))<br />
    {<br />
        var _s = file_text_readln(file);<br />
    <br />
        if (_s == &quot;&quot;)<br />
        {<br />
            continue;<br />
        }<br />
    <br />
        str[num++] = _s;<br />
    }<br />
    <br />
    file_text_close(file);
  </p>
  <p>Приведенный выше код открывает файл и читает из него строку в каждом цикле до тех пор, пока не будет достигнут конец содержимого файла. Если прочитанная строка является пустой строкой, то текущая итерация цикла завершается с помощью оператора <span class="inline">continue</span> и начинается новая итерация, в противном случае строка добавляется в <a href="../Arrays.htm">массив</a> и позиция массива увеличивается.</p>
  <p>Другие примеры функций цикла см. в разделах <a href="repeat.htm"><span class="inline">repeat</span></a>, <a href="do___until.htm"><span class="inline">do... until</span></a>, и <a href="for.htm"><span class="inline">for</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../Language_Features.htm">Особенности языка</a></div>
        <div style="float:right">Следующий: <a href="do___until.htm"><span class="notranslate">do / until</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
while
-->
  <!-- TAGS
while
-->
</body>
</html>