<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>для</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the for function" />
  <meta name="rh-index-keywords" content="for" />
  <meta name="search-keywords" content="for" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>для</h1>
  <p>Одним из наиболее часто используемых способов многократной итерации <a class="glossterm" data-glossterm="заявление" href="#">оператора</a> (или операторов) является использование цикла <span class="inline">for</span>, который имеет следующий вид:</p>
  <p class="code">for (&lt;assignment&gt;; &lt;expression&gt;; &lt;operation&gt;;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p>Это работает следующим образом - Сначала выполняется присваивание, которое присваивает значение переменной, затем оценивается <a class="glossterm" data-glossterm="выражение" href="#">выражение</a> и, если оно <span class="inline">true</span>, выполняются утверждения в фигурных скобках{}. Далее выполняется операция над присвоенной переменной, после чего выражение снова оценивается. Этот цикл будет продолжаться до тех пор, пока не будет установлено, что выражение равно <span class="inline">false</span>.</p>
  <p>В таком виде это может показаться сложным, но вы должны понимать это так:</p>
  <ol>
    <li>Первое присваивание инициализирует цикл for</li>
    <li>Выражение проверяет, следует ли завершить цикл</li>
    <li>Заявление выполняется</li>
    <li>Операция выполняется</li>
    <li>Вернитесь к шагу 2, выполните выражение еще раз и продолжите или выйдите из цикла</li>
  </ol>
  <p>Это чрезвычайно полезно для выполнения повторяющихся задач, которые в любом другом случае потребовали бы много строк кода, и обычно используется в качестве счетчика для оценки массивов, рисования, установки инкрементных значений и т.д.. Следующий пример кода иллюстрирует типичное использование этого типа оператора:</p>
  <p class="code">for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        draw_text(32, 32 + (i * 32), string(i) + &quot;. &quot;+ string(scr[i]));<br />
    }</p>
  <p>Приведенный выше код инициализирует цикл <span class="inline">for</span>, начинающийся с 0 и считающий до (включительно) 9, а затем использует значение цикла <span class="inline">i</span> для рисования на экране значений, хранящихся в массиве. Обратите внимание, как переменная цикла <span class="inline">for</span> <span class="inline">i</span> используется не только для прохода по массиву, но и для рисования числа, а также для указания <span data-keyref="GameMaker Name">GameMaker</span> места рисования значений в комнате. Такая гибкость является одной из основных причин, почему циклы <span class="inline">for</span> так важны в программировании.</p>
  <p><strong>Когда следует использовать цикл <span class="inline">for</span>?</strong> В любое время, когда вам нужно выполнить фиксированное количество итераций над одним или несколькими утверждениями, отслеживая при этом текущую <a class="glossterm" data-glossterm="итерация" href="#">итерацию</a> и используя значение этой итерации.</p>
  <p class="note"><b>ПРИМЕЧАНИЕ</b>: При работе с другими людьми вы увидите множество примеров использования переменных &quot;<span class="inline">i</span>&quot; и &quot;<span class="inline">j</span>&quot; для переменной счетчика циклов. Это <b>не</b> обязательные имена переменных, и вы можете использовать что угодно, например, &quot;<span class="inline">a</span>&quot; или &quot;<span class="inline">foo</span>&quot; или что-то еще. Использование &quot;<span class="inline">i</span>&quot; и &quot;<span class="inline">j</span>&quot; - это просто стандартная конвенция в программировании.</p>
  <p>Стоит отметить, что внутри цикла <span class="inline">for</span> можно использовать специальные операторы <span class="inline"><a href="break.htm">break</a></span> и <span class="inline"><a href="continue.htm">continue</a></span>. Использование <span class="inline">break</span> приведет к немедленному выходу из цикла и переходу к любому коду, который находится в событии или функции после того, как цикл должен был завершиться, например:</p>
  <p class="code">var _inst = noone;<br />
    for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        _inst = instance_find(obj_Enemy_Parent, i);<br />
        if (instance_exists(_inst))<br />
        {<br />
            if (_inst.object_index == obj_Enemy_Melee)<br />
            {<br />
                break;<br />
            }<br />
        }<br />
    }<br />
    target = _inst;</p>
  <p>Приведенный выше код перебирает 10 ближайших экземпляров заданного &quot;родительского&quot; объекта, и если экземпляр найден, то проверяется ID объекта, и если это экземпляр <span class="inline">obj_Enemy_Melee</span>, то цикл завершается с использованием <span class="inline">break</span>, а значение ID присваивается переменной (если экземпляр не найден, то в переменную будет добавлено ключевое слово <span class="inline"><a href="../Instance_Keywords.htm">noone</a></span> ).</p>
  <p>Примером использования <span class="inline">continue</span> в цикле <span class="inline">for</span> может быть:</p>
  <p class="code">var _val = 0;<br />
    for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        if (val_array[i] &lt;= 0)<br />
        {<br />
            continue;<br />
        }<br />
        _val += val_array[i];<br />
    }<br />
    draw_text(32, 32, &quot;Positive Values Total = &quot; + string(_val));</p>
  <p>Этот код проверяет значение, хранящееся в каждой позиции массива 1D длины 10, и если любое из них меньше или равно 0, то цикл <span class="inline">continue</span> завершается, то есть текущая итерация заканчивается, <span class="inline">i</span> увеличивается, и начинается следующая итерация цикла. Если значение больше 0, то оно добавляется к локальной переменной <span class="inline">_val</span>, а после завершения цикла итоговое значение выводится на экран.</p>
  <p>Другие примеры ключевых слов цикла см. в разделах <a href="repeat.htm"><span class="inline">repeat</span></a>, <a href="while.htm"><span class="inline">while</span></a>, и <a href="do___until.htm"><span class="inline">do / until</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../Language_Features.htm">Особенности языка</a></div>
        <div style="float:right">Следующий: <a href="switch.htm"><span class="notranslate">switch</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
for
-->
  <!-- TAGS
for
-->
</body>
</html>