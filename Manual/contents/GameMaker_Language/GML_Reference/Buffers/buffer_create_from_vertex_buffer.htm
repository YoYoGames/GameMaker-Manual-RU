<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_create_from_vertex_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_create_from_vertex_buffer" />
  <meta name="rh-index-keywords" content="buffer_create_from_vertex_buffer" />
  <meta name="search-keywords" content="buffer_create_from_vertex_buffer,buffer_fixed,buffer_grow,buffer_wrap,buffer_fast,buffer_vbuffer" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
<<<<<<< HEAD
  <h1>buffer_create_from_vertex_buffer</h1>
  <p>Вы используете эту функцию для выделения части памяти под буфер в вашей игре, заполненный данными из ранее созданного <a href="../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">буфера вершин</a>. Функция возвращает уникальный <i>идентификатор буфера</i>, который должен храниться в переменной и использоваться для всех последующих обращений к буферу. Функция принимает идентификатор вершинного буфера (возвращаемый функцией <a href="../Drawing/Primitives/vertex_create_buffer.htm"><span class="inline">vertex_create_buffer()</span></a>, например), а для определения типа буфера используются следующие константы:</p>
  <table>
    <tbody>
      <tr>
        <th>Постоянная</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_fixed</span></td>
        <td>Буфер фиксированного размера.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_grow</span></td>
        <td>Буфер, который будет динамически &quot;расти&quot; по мере добавления данных</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_wrap</span></td>
        <td>Буфер, в который будут &quot;заворачиваться&quot; данные. Когда добавляемые данные достигнут предела размера буфера, перезапись будет помещена обратно в начало буфера, и дальнейшая запись продолжится с этого момента.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_fast</span></td>
        <td>Специальный &quot;полосатый&quot; буфер, который очень быстро читается/записывается. Может использоваться только с <a href="buffer_write.htm">типами данных</a> <span class="inline">buffer_u8</span> и <i>должен</i> быть выровнен по 1 байту.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_vbuffer</span></td>
        <td>Этот тип буфера должен использоваться только в качестве буфера вершин.</td>
      </tr>
    </tbody>
  </table>
  <p>Помимо типа буфера, вам также необходимо задать <i>выравнивание байтов</i> для буфера. Это значение зависит от данных, которые вы хотите сохранить в буфере, и в большинстве случаев вполне подойдет значение 1. Однако помните, что для некоторых операций <i>необходимо</i> определенное выравнивание, а неправильное выравнивание может привести к ошибкам (подробнее о выравнивании см. в разделе " <a href="../../../Additional_Information/Guide_To_Using_Buffers.htm">Буферы"</a>). Ниже приведено общее руководство, показывающее, какие значения наиболее подходят для каждого типа данных (если есть сомнения, используйте выравнивание 1):</p>
  <ul class="colour">
    <li>Строки должны быть выровнены по 1 байту.</li>
    <li>Знаковые или беззнаковые 8-битные целые числа могут быть выровнены по любому значению, но обратите внимание, что для быстрого буфера (см. <a href="buffer_write.htm"><span class="inline">buffer_write()</span></a>) оно <i>должно</i> быть выровнено по 1.</li>
    <li>Знаковые или беззнаковые 16-битные целые числа должны быть выровнены по 2 байтам.</li>
    <li>Знаковые или беззнаковые 32-битные целые числа должны быть выровнены по 4 байтам</li>
    <li>Плавающие символы размером до 16 бит должны быть выровнены по 2 байтам. <i>(В настоящее время не поддерживается!)</i></li>
    <li>Плавающие символы размером до 32 бит должны быть выровнены по 4 байтам.</li>
    <li>Плавающие символы размером до 64 бит должны быть выровнены по 8 байтам.</li>
  </ul>
  <p class="note"><b>ПРИМЕЧАНИЕ</b>: Буферы вершин выравниваются по 1 байту, но вы можете создать буфер с любым выравниванием в зависимости от того, как вы хотите обрабатывать данные, поскольку данные вершин - это просто копия необработанной памяти в буфер.</p>
  <p class="note"><b>ПРИМЕЧАНИЕ</b>: Важно, чтобы вы удаляли любые динамически созданные ресурсы, подобные этому, из памяти, когда они вам больше не нужны, чтобы предотвратить утечку памяти, поэтому, когда вы закончите работу с созданным буфером, вы должны освободить его снова, используя <span style="font-size:1px;"><a href="buffer_delete.htm"><span class="inline">buffer_delete()</span></a></span>. Также обратите внимание, что буфер вершин, используемый для создания нового буфера, также не удаляется из памяти, и вы должны использовать функцию <span style="font-size:1px;"><a href="../Drawing/Primitives/vertex_delete_buffer.htm"><span class="inline">vertex_delete_buffer()</span></a></span> когда она больше не нужна.</p>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">buffer_create_from_vertex_buffer(vertex_buffer, type, alignment)</p>
=======
  <h1><span data-field="title" data-format="default">buffer_create_from_vertex_buffer</span></h1>
  <p>This function allocates a portion of memory as a buffer in your game filled with the data from a previously created <a href="../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">vertex buffer</a>.</p>
  <p>The function returns a reference to the buffer that should be stored in a variable and used for all further function calls to the buffer. The function takes a reference to the vertex buffer to use (as returned by the function <span class="inline3_func"><a data-xref="{title}" href="../Drawing/Primitives/vertex_create_buffer.htm">vertex_create_buffer</a></span>, for example) with the following constants being used to define the buffer type:</p>
  <div data-conref="../../../assets/snippets/Table_Buffer_Type_Constant.hts"> </div>
  <p>Apart from the buffer type, you will also have to set the <i>byte alignment</i> for the buffer. This value will vary depending on the data that you wish to store in the buffer, and in most cases a value of 1 is perfectly fine. However, be aware that for some operations a specific alignment is <i>essential</i>, and an incorrect alignment may cause errors (for further details on alignment see <a href="../../../Additional_Information/Guide_To_Using_Buffers.htm">Buffers</a>). The following is a general guide to show which values are most appropriate for each data type (when in doubt, use an alignment of 1):</p>
  <ul class="colour">
    <li>Strings should be aligned to 1 byte.</li>
    <li>Signed or unsigned 8bit integers can be aligned to any value, but note that for a fast buffer (see <span class="inline3_func"><a data-xref="{title}" href="buffer_write.htm">buffer_write</a></span>) it <i>must</i> be aligned to 1.</li>
    <li>Signed or unsigned 16bit integers should be aligned to 2 bytes.</li>
    <li>Signed or unsigned 32bit integers should be aligned to 4 bytes</li>
    <li>Floats of up to 16bits should be aligned to 2 bytes.</li>
    <li>Floats of up to 32bits should be aligned to 4 bytes.</li>
    <li>Floats of up to 64bits should be aligned to 8 bytes.</li>
  </ul>
  <p class="note"><b><span data-conref="../../../assets/snippets/Tag_note.hts"> </span></b> Vertex buffers are 1 byte aligned, but you can create the buffer with any alignment depending on how you want to treat the data, as the vertex data is simply a raw memory copy into the buffer.</p>
  <div data-conref="../../../assets/snippets/Note_Buffer_Delete_Dynamic.hts"> </div>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> The vertex buffer used to create the new buffer is not removed from memory either and you should use the function <span class="inline3_func"><a data-xref="{title}" href="../Drawing/Primitives/vertex_delete_buffer.htm">vertex_delete_buffer</a></span> when it is no longer required.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">buffer_create_from_vertex_buffer</span>(vertex_buffer, type, alignment)</p>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Тип</th>
        <th>Описание</th>
      </tr>
      <tr>
<<<<<<< HEAD
        <td><span class="notranslate">vertex_buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer_Vertex">Идентификатор буфера вершин</span></td>
        <td><span class="notranslate">The vertex buffer index to use.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Constant_Buffer_Type">Тип буфера Постоянная</span></td>
        <td><span class="notranslate">The type of buffer to create (see the constants list above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">alignment</span></td>
        <td><span data-keyref="Type_Real">Реально</span></td>
        <td><span class="notranslate">The byte alignment for the buffer</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code"><span data-keyref="Type_ID_Buffer">Buffer ID</span></p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">player_buffer = buffer_create_from_vertex_buffer(model_buffer, buffer_grow, 1);</p>
  <p>Приведенный выше код выделяет память под буфер, затем копирует в него данные из заданного буфера вершин, возвращая индекс нового буфера, который хранится в переменной &quot;player_buffer&quot;, для дальнейшего использования.</p>
  <p> </p>
  <p> </p>
  <p> </p>
=======
        <td>vertex_buffer</td>
        <td><span data-keyref="Type_ID_Buffer_Vertex"><a href="../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_create_buffer.htm" target="_blank">Vertex Buffer</a></span></td>
        <td>A reference to the vertex buffer to use.</td>
      </tr>
      <tr>
        <td>type</td>
        <td><span data-keyref="Type_Constant_Buffer_Type"><a href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm" target="_blank">Buffer Type Constant</a></span></td>
        <td>The type of buffer to create (see the constants list above).</td>
      </tr>
      <tr>
        <td>alignment</td>
        <td><span data-keyref="Type_Real"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The byte alignment for the buffer</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_ID_Buffer"><a href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm" target="_blank">Buffer</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">player_buffer = <span data-field="title" data-format="default">buffer_create_from_vertex_buffer</span>(model_buffer, buffer_grow, 1);</p>
  <p>The above code allocates memory to a buffer then copies the data from the given vertex buffer into it, returning the new buffer which is stored in the variable <span class="inline2">player_buffer</span>, for future use.</p>
  <p> </p>
  <p> </p>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Buffers.htm">Буферы</a></div>
        <div style="float:right">Следующий: <a href="buffer_create_from_vertex_buffer_ext.htm"><span class="notranslate">buffer_create_from_vertex_buffer_ext</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
buffer_create_from_vertex_buffer
buffer_fixed
buffer_grow
buffer_wrap
buffer_fast
buffer_vbuffer
-->
  <!-- TAGS
buffer_create_from_vertex_buffer
-->
</body>
</html>