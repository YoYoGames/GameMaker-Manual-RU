<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Вывоз мусора</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Garbage Collection functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Garbage Collection" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Вывоз мусора</h1>
  <p> <strong>Сборщик мусора</strong> <span data-keyref="GameMaker Name">GameMaker</span> существует потому, что методы могут передаваться в стек и оставаться без ссылок, также как и структуры и некоторые другие объекты, что, в свою очередь, приведет к утечке памяти, если их не &quot;очистить&quot; каким-либо образом. Именно здесь на помощь приходит сборщик мусора, который будет работать в фоновом режиме игры, собирая все, на что не было ссылок, и поддерживая оптимальное использование памяти. Когда мы говорим о том, что что-то отнесено, мы обычно имеем в виду любую структуру или функцию, которая не связана (не обязательно напрямую, но через цепочку других переменных) с <strong>глобальной </strong>переменной или <strong>переменной экземпляра объекта</strong>. Также обратите внимание, что функции, определенные в скриптах на сайте <span class="notranslate">IDE</span>, также не собираются, поскольку они неявно сделаны глобальными.</p>
  <p class="note"><b>ПРИМЕЧАНИЕ</b>: Обратите внимание, что такие вещи, как поверхности, структуры данных, буферы и другие динамические ресурсы <b>не</b> собираются в мусор и имеют свои собственные функции <span class="inline">destroy</span> для очистки связанной с ними памяти. Как правило, если все, что вы создаете во время выполнения, имеет функцию <span class="inline">destroy</span>, то это не будет собираться в мусор, и вам придется самостоятельно разбираться с этим в коде. Исключением являются последовательности, анимационные кривые и экземпляры, которые также требуют сборщика мусора, <b>но при этом должны вызывать функцию уничтожения</b>.</p>
  <p>Сборка мусора, которую использует <span data-keyref="GameMaker Name">GameMaker</span>, является &quot;генерационной&quot;. Это означает, что для уменьшения объема работы, которую необходимо выполнять каждый кадр, объекты делятся на &quot;поколения&quot;. Новые объекты создаются в поколении 0, и по мере старения они переходят в более старшие поколения. Общая идея заключается в том, что объекты, которые находятся здесь некоторое время, не нужно постоянно проверять на предмет удаления, а можно проверять реже (обратите внимание, что под &quot;объектами&quot; здесь подразумевается все, что может быть собрано в мусор, а <i>не</i> общие экземпляры объектов, определенные в Asset Browser). Обратите внимание, что хотя система проверки является поколенческой, фактические проверки выполняются &quot;инкрементально&quot;, то есть вместо того, чтобы очищать потенциально тысячи объектов из поколения за один кадр, что вызывает большой всплеск использования процессора и потенциально влияет на игровой процесс, каждое поколение будет проверяться и, если потребуется, очистка будет распределена на несколько кадров, так что сборщик мусора будет работать чаще, но выполнять меньше работы на каждом кадре (вы можете установить целевое время, которое сборщик мусора должен потратить на каждый кадр, используя функцию <span class="inline"><a href="gc_target_frame_time.htm">gc_target_frame_time()</a></span>).</p>
  <p>Как правило, вам никогда не придется взаимодействовать с системой сбора мусора <span data-keyref="GameMaker Name">GameMaker</span>, и обычно результаты ее работы не видны, но некоторые команды <span class="notranslate">GML</span> позволяют получить информацию о том, что делает сборщик, и в ограниченной степени повлиять на его поведение.</p>
  <p class="note"><b>ВАЖНО!</b> Обратите внимание, что на целевой платформе HTML5 сборкой мусора занимается движок JavaScript, поэтому ни одна из перечисленных ниже функций не повлияет на его работу, а функция <span class="inline">gc_get_stats()</span> вернет 0 для всех полей.</p>
  <ul class="colour">
    <li><a href="gc_enable.htm"><span class="notranslate">gc_enable</span></a></li>
    <li><a href="gc_is_enabled.htm"><span class="notranslate">gc_is_enabled</span></a></li>
    <li><a href="gc_collect.htm"><span class="notranslate">gc_collect</span></a></li>
    <li><a href="gc_target_frame_time.htm">gc_target_frame_time</a></li>
    <li><a href="gc_get_target_frame_time.htm">gc_get_target_frame_time</a></li>
    <li><a href="gc_get_stats.htm"><span class="notranslate">gc_get_stats</span></a></li>
  </ul>
  <p> </p>
  <p>Чтобы помочь решить, что и когда нужно собирать в мусор, есть несколько функций, которые можно использовать для создания и проверки <strong>слабых ссылок</strong> на структуры. Слабая ссылка - это ссылка, которая не защищает объект ссылки от сбора сборщиком мусора, и поэтому может использоваться для проверки того, жива ли еще структура (ссылка) или нет в игре. Для слабых ссылок доступны следующие функции:</p>
  <ul class="colour">
    <li><a href="weak_ref_create.htm"><span class="notranslate">weak_ref_create</span></a></li>
    <li><a href="weak_ref_alive.htm"><span class="notranslate">weak_ref_alive</span></a></li>
    <li><a href="weak_ref_any_alive.htm"><span class="notranslate">weak_ref_any_alive</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../GML_Reference.htm">Ссылка на GML</a></div>
        <div style="float:right">Следующее: <a href="../Variable_Functions/Variable_Functions.htm">Функции переменных</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
GML Reference
-->
  <!-- TAGS
gml_reference
-->
</body>
</html>