<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>array_copy_while</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="" />
  <meta name="topic-comment" content="" />
  <meta name="rh-index-keywords" content="array_copy_while" />
  <meta name="search-keywords" content="array_copy_while" />
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt" />
</head>
<body>
  <h1><span data-field="title" data-format="default">array_copy_while</span></h1>
  <p>This function creates a <strong>new</strong> array and adds elements of the input array to it <i>while</i> (or <i>as long as</i>) the predicate function returns <span class="inline2">true</span>.</p>
  <p>The function stops execution as soon as the predicate function returns <span class="inline2">false</span>. The first element for which the predicate function returns <span class="inline2">false</span> and any elements that come after it are <strong>not</strong> added to the new array.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> This function is identical to <span class="inline2"><a data-xref="{title}" href="array_filter.htm">array_filter</a></span> with the difference that this function stops execution after the first time the predicate function returns <span class="inline2">false</span>. <span class="inline2">array_filter</span> on the other hand continues to check elements, even after encountering an element for which the predicate function returns <span class="inline2">false</span>.</p>
  <div data-conref="../../../assets/snippets/Syntax_signature_element_index_returns_bool.hts"> </div>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Array"><a href="../../../../GameMaker_Language/GML_Overview/Arrays.htm" target="_blank">Array</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">array = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;STOP&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;STOP&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;];<br />
    array_up_to_stop = <span data-field="title" data-format="default">array_copy_while</span>(array, function(element, index)<br />
    {<br />
        return (element != &quot;STOP&quot;);<br />
    }, -1, -infinity);</p>
  <p>The above code first creates an array <span class="inline2">array</span> that stores strings containing the first 9 digits, with the string &quot;STOP&quot; in between.</p>
  <p>Then the function <span class="inline2"><span data-field="title" data-format="default">array_copy_while</span></span> is called on this array, with a predicate function that returns <span class="inline2">true</span> if the element is <strong>not equal</strong> to the string &quot;STOP&quot;.</p>
  <p>The offset parameter is set to -1 and the length to -<a href="../../GML_Overview/Data_Types.htm">infinity</a>. This will start iterating over the values backwards starting at the last array index.</p>
  <p>Finally the result is stored in the variable <span class="inline2">array_up_to_stop</span>, which should only contain <span class="inline2">&quot;9&quot;</span>, <span class="inline2">&quot;8&quot;</span> and <span class="inline2">&quot;7&quot;</span>, in that order, as the array was traversed in reverse.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="Variable_Functions.htm">Variable Functions</a></div>
        <div>Next: <a data-xref="{title}" href="array_create_ext.htm">array_create_ext</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
array_copy_while
-->
  <!-- TAGS
array_copy_while
-->
</body>
</html>