<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>string_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="" />
  <meta name="topic-comment" content="" />
  <meta name="rh-index-keywords" content="string_ext" />
  <meta name="search-keywords" content="string_ext" />
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt" />
</head>
<body>
  <h1><span data-field="title" data-format="default">string_ext</span></h1>
  <p>This function creates a new string, allowing you to insert placeholders in the main &quot;format string&quot;, and to specify an array containing the values to be inserted into those placeholders.</p>
  <p>The first argument is a <a data-xref="{text}" href="string.htm#h">Format String</a> and the second argument is an array containing values to be inserted into the format string.</p>
  <h2>Format String</h2>
  <p>For information on format strings, see: <span class="inline2"><a href="string.htm">string()</a></span></p>
  <p>This function works in a similar manner, but instead of the values being passed as separate arguments, they&#39;re passed as an array in the second argument.</p>
  <div data-conref="../../../assets/snippets/Note_See_Template_Strings.hts"> </div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">string_ext</span>(value_or_format, values);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>value_or_format</td>
        <td><span data-keyref="Type_Any"><a href="../../GML_Overview/Data_Types.htm#variable" target="_blank">Any</a></span> (if value) or <span data-keyref="Type_String"><a href="../../GML_Overview/Data_Types.htm" target="_blank">String</a></span> (if format)</td>
        <td>The value to be turned into a string.</td>
      </tr>
      <tr>
        <td>values</td>
        <td><span data-keyref="Type_Array"><a href="../../GML_Overview/Arrays.htm" target="_blank">Array</a></span></td>
        <td>An array of values to be inserted at the placeholder positions.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_String"><a href="../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">numbers = [59, 23, 656, 8, 54];<br />
    array_sort(numbers, true);<br />
    <br />
    var _str = string_ext(&quot;The three lowest numbers are: {0}, {1} and {2}&quot;, numbers);
  </p>
  <p>The above code first defines an array with some numbers, and sorts them in an ascending order. It then uses that array in a <span class="inline2">string_ext()</span> to call to insert its first three numbers into a format string.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="Strings.htm">Strings</a></div>
        <div>Next: <a data-xref="{title}" href="ansi_char.htm">ansi_char</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
string_ext
-->
  <!-- TAGS
string_ext
-->
</body>
</html>