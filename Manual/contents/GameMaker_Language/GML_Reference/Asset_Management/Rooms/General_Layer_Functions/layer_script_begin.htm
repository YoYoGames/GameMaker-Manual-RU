<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>layer_script_begin</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function layer_script_begin" />
  <meta name="rh-index-keywords" content="layer_script_begin" />
  <meta name="search-keywords" content="layer_script_begin" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>layer_script_begin</h1>
  <p>С помощью этой функции вы можете назначить слою <a href="../../../../GML_Overview/Script_Functions.htm">функцию сценария</a>, которая будет вызываться перед отрисовкой слоя. При добавлении функции к слою она будет выполняться в начале <i>каждого из различных событий рисования</i>, поэтому вы можете захотеть проверить в назначенной функции, какое событие является текущим событием рендеринга, и адаптировать код в соответствии с этим. Это можно сделать, проверив <a href="../../Objects/Object_Events/event_type.htm"><span class="inline">event_type</span></a> и/или <a href="../../Objects/Object_Events/event_number.htm"><span class="inline">event_number</span></a> (см. расширенный пример ниже). Обратите внимание, что функция <i>не</i> предназначена для вызова в любых событиях рисования или событиях шага, а должна вызываться только в начале комнаты в <strong>коде создания комнаты</strong> или в <strong>событии Create Event / </strong> <strong>Room Start Event</strong> экземпляра.</p>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">layer_script_begin(layer_id, script);</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Тип</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td><span class="notranslate">layer_id</span></td>
        <td><span data-keyref="Type_String">Строка</span> или <span data-keyref="Type_ID_Layer">идентификатор слоя</span></td>
        <td><span class="notranslate">The unique ID value of the layer to target (or the layer name as a string)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">script</span></td>
        <td><span data-keyref="Type_Function_Script">Функция сценария</span></td>
        <td><span class="notranslate">The script function index to assign to the layer</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Расширенный пример:</h4>
  <p>В этом расширенном примере мы сначала покажем, как устроена простая скрипт-функция для установки некоторых унифицированных данных шейдера, чтобы при отрисовке данного слоя эта функция была запущена и шейдер работал правильно. В примере стоит обратить внимание на то, как мы проверяем, какое событие вызывается, чтобы остальная часть функции выполнялась только при определенном событии, которое мы требуем, чтобы она работала - в данном случае только при главном событии рисования:</p>
  <p class="code">/// @function layer_shader_start();<br />
    function layer_shader_start()<br />
    {<br />
        if (event_type == ev_draw) <br />
        {<br />
            if event_number == 0<br />
            {<br />
                colour_to_find = shader_get_uniform(sShaderDemo5, &quot;f_Colour1&quot;);<br />
                colour_to_set = shader_get_uniform(sShaderDemo5, &quot;f_Colour2&quot;);<br />
                shader_set(s_ColourChanger);<br />
                shader_set_uniform_f(colour_to_find, 1,1,1 );<br />
                shader_set_uniform_f(colour_to_set, 1,0,0 );<br />
            }<br />
        }<br />
    }</p>
  <p>Затем у нас будет сопутствующая функция для сброса шейдера после завершения рисования:</p>
  <p class="code">/// @function layer_shader_end();<br />
    function layer_shader_end()<br />
    {<br />
        if (event_type == ev_draw) <br />
        {<br />
            if event_number == 0<br />
            {<br />
                shader_reset();<br />
            }<br />
        }<br />
    }</p>
  <p>Теперь, когда мы определили наши скриптовые функции для установки шейдера, мы должны назначить их определенному слою, чтобы слой знал, что их нужно вызывать. Это можно сделать в коде создания комнаты, или в событии создания, или в событии начала комнаты какого-либо объекта контроллера (их не нужно устанавливать каждый шаг, а лучше один раз при начале комнаты или при первоначальном создании слоя):</p>
  <p class="code">var lay_id = layer_get_id(&quot;Instances&quot;);<br />
    layer_script_begin(lay_id, layer_shader_start);<br />
    layer_script_end(lay_id, layer_shader_end);</p>
  <p>Этот последний блок кода назначает скрипты слою.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="General_Layer_Functions.htm">Общие функции слоя</a></div>
        <div style="float:right">Следующий: <a href="layer_script_end.htm"><span class="notranslate">layer_script_end</span></a></div>
      </div>
      <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
layer_script_begin
--><!-- TAGS
layer_script_begin
--></body>
</html>