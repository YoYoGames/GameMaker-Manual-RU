<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Последовательность событий, моментов и широковещательных сообщений</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Sequence Events, Moments and Broadcast Messages" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Sequence Events,Sequence Momements,Sequence Messages,broadcast messages,event_create,event_destroy,event_clean_up,event_step,event_step_begin,event_step_end,event_async_system,event_broadcast_message" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>События, моменты и широковещательные сообщения</h1>
  <p>Помимо всех свойств, перечисленных <a href="Sequences.htm">здесь</a> для структуры последовательности, у вас также есть возможность добавить в последовательность специальные свойства &quot;действия&quot;. Существует три различных типа этих свойств &quot;действия&quot;, которые могут быть добавлены к объекту последовательности - <b>События</b>. <b>Моменты</b> и <b>Широковещательные сообщения</b> - и каждое из них более подробно описано в следующих разделах.</p>
  <h2>Последовательность событий</h2>
  <p>К объектам последовательности могут быть добавлены <b>события</b>, которые аналогичны событиям, используемым объектами активов. События, которые вы назначаете объекту последовательности, будут происходить в определенном порядке, либо один раз в определенный момент жизненного цикла последовательности, либо каждый кадр, когда последовательность выполняется. В этом разделе мы обсудим, как эти события обрабатываются с помощью кода, но их также можно добавить с помощью <a href="../../../../The_Asset_Editors/Sequences.htm">редактора последовательностей</a>. Обратите внимание, что порядок перечисленных здесь событий не зависит от направления движения <a class="glossterm" data-glossterm="playhead" href="#">головки воспроизведения</a>, и даже если последовательность воспроизводится в обратном направлении, события все равно будут выполняться в указанном ниже порядке.</p>
  <p>Доступными событиями являются:<b></b></p>
  <ul class="colour">
    <li><b>Create</b>: срабатывает при создании экземпляра последовательности на слое.</li>
    <li><b>Destroy</b>: срабатывает, когда экземпляр последовательности на слое уничтожается.</li>
    <li><b>Очистка</b>: запускается, когда экземпляр последовательности собирается в мусор.</li>
    <li><b>Шаг</b>: срабатывает непосредственно перед обычным событием шага объекта. <b>Важно!</b> Если последовательность поставлена на паузу, то это событие не будет вызвано до следующего шага после начала воспроизведения последовательности.</li>
    <li><b>Begin Step</b>: срабатывает непосредственно перед событием начала шага объекта. <b>Важно!</b> Если последовательность поставлена на паузу, то это событие не будет вызвано до следующего шага после начала воспроизведения последовательности.</li>
    <li><b>End Step</b>: срабатывает непосредственно перед событием окончания шага объекта. <b>Важно!</b> Если последовательность поставлена на паузу, то это событие не будет вызвано до следующего шага после начала воспроизведения последовательности.</li>
    <li><b>Async System</b>: срабатывает так же, как и любой объект Обработчики <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">событий асинхронной системы</a>. <em><b>Важно!</b></em>Если последовательность приостановлена, то это событие не будет вызвано.</li>
    <li><b>Широковещательное сообщение</b>: срабатывает во время обновления последовательности при появлении ключевого кадра широковещательного сообщения.</li>
  </ul>
  <p>Все события должны быть связаны с функциями, которые определены в сценарии, поэтому для установки события <a href="../../../GML_Overview/Method_Variables.htm">переменной метода</a> должно быть присвоено свойство с правильным именем, которое указывает последовательности, какое событие должно вызвать функцию. Синтаксис для этого следующий:</p>
  <p class="code">&lt;sequence_struct&gt;.&lt;event_property&gt; = method(&lt;sequence_struct&gt;, &lt;function_name&gt;);</p>
  <p>Последовательная структура свойств для различных событий выглядит следующим образом:<span class="inline"></span></p>
  <ul class="colour">
    <li><span class="inline">event_create</span><span class="inline"></span></li>
    <li><span class="inline">event_destroy</span><span class="inline"></span></li>
    <li><span class="inline">event_clean_up</span><span class="inline"></span></li>
    <li><span class="inline">event_step</span><span class="inline"></span></li>
    <li><span class="inline">event_step_begin</span><span class="inline"></span></li>
    <li><span class="inline">event_step_end</span></li>
    <li><span class="inline">event_async_system</span><span class="inline"></span></li>
    <li><span class="inline">event_broadcast_message</span></li>
  </ul>
  <p>Чтобы привести пример использования, допустим, мы хотим, чтобы последовательность меняла направление при обнаружении щелчка левой кнопки мыши. Сначала нам нужно создать скрипт с функцией, которую мы хотим вызвать, примерно так:</p>
  <p class="code">/// @function seq_reverse();<br />
    <br />
    function seq_reverse()<br />
    {<br />
        if (mouse_check_button_pressed(mb_left))<br />
        {<br />
            if (self.headDirection == seqdir_right)<br />
            {<br />
                self.headDirection = seqdir_left;<br />
            }<br />
            else self.headDirection = seqdir_right;<br />
        }<br />
    }
  </p>
  <p>В этой функции все, что мы делаем, это слушаем нажатие кнопки мыши и затем меняем направление воспроизведения последовательности, к которой привязан метод. Вы заметите, что в настоящее время вы не можете передавать какие-либо параметры функциям, связанным с этими свойствами, и во всех случаях переменная <a href="../../../GML_Overview/Instance_Keywords.htm"><span class="inline">self</span></a> переменной в области видимости функции присваивается экземпляр последовательности.</p>
  <p class="note"><b>ПРИМЕЧАНИЕ</b>: Стоит отметить, что в приведенном выше сценарии идентификатор <span class="inline">self</span> может быть опущен и используется только для того, чтобы явно показать область видимости переменной метода, используемой в данном примере.</p>
  <p>Чтобы присвоить это последовательности, сделайте следующее:</p>
  <p class="code">var _seq = sequence_get(Sequence1);<br />
    _seq.event_step = method(_seq, seq_reverse);</p>
  <p>Теперь мы назначили <i>объекту</i> последовательности событие step с функцией для обнаружения нажатия кнопки мыши и последующего изменения направления головки воспроизведения <i>экземпляра</i> последовательности после ее создания в комнате.</p>
  <h2><label for="2">Моменты</label></h2>
  <p> <b>Момент</b> последовательности - это уникальное действие кода, которое запускается на одном или нескольких определенных кадрах по мере воспроизведения последовательности. Эти моменты кода - как и события (о которых говорилось выше) - просто предопределенные <a href="../../../GML_Overview/Method_Variables.htm">переменные метода</a>, которые срабатывают на данном кадре. Например, если вы хотите, чтобы последовательность создавала экземпляр &quot;пули&quot; на определенном кадре анимации, сначала вам нужно создать функцию, которая будет использоваться для этого действия, примерно так:</p>
  <p class="code">/// @function seq_shoot();<br />
    <br />
    seq_shoot = function()<br />
    {<br />
        instance_create_layer(sequence.xorigin, sequence.yorigin, &quot;Instances&quot;, obj_Bullet);<br />
    }
  </p>
  <p>Затем вы добавите его в кадр в свойстве <span class="inline">momentKeyframes</span> структуры последовательности. По сути, это &quot;специальная&quot; дорожка, которая используется только для этой цели и поэтому может принимать только данные ключевых кадров, связанные с действиями момента, которые вы хотите выполнить в последовательности. Эта дорожка создается точно так же, как и любая другая, путем создания структур ключевых кадров и заполнения их данными ключевых кадров, где канал 0 - единственный канал, который вы можете использовать, а тип дорожки - <span class="inline">seqtracktype_moment</span>. Ниже приведен пример создания этой дорожки с использованием функции, которую мы определили выше, для запуска в заданные моменты (кадры):</p>
  <p class="code">var _seq = sequence_get(my_Seq);<br />
    var _k = array_create(3);<br />
    _k[0] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[0].frame = 60;<br />
    _k[1] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[1].frame = 120;<br />
    _k[2] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[2].frame = 180;<br />
    var _d = array_create(1);<br />
    _d[0] = sequence_keyframedata_new(seqtracktype_moment);<br />
    _d[0].channel = 0;<br />
    _d[0].event = method(_d[0], seq_shoot);<br />
    _k[0].channels = _d;<br />
    _k[1].channels = _d;<br />
    _k[2].channels = _d;<br />
    _seq.momentKeyframes = _k;</p>
  <p>Приведенный выше код просто установит кадры 60, 120 и 180 трека &quot;момент&quot; для вызова метода <span class="inline">seq_shoot</span>. Вы заметите, что в настоящее время вы не можете передавать никаких параметров функциям, которые используются для каждого момента, и во всех случаях переменная <span class="inline">self</span> в области видимости функции назначается как экземпляр последовательности (обычно вам не нужно использовать <span class="inline">self</span>, но в некоторых особых случаях это может быть полезно).</p>
  <h2><label for="3">Широковещательные сообщения</label></h2>
  <p>Последовательности могут генерировать <b>широковещательные сообщения</b>- простые строки, которые добавляются к определенным кадрам на временной шкале анимации, и когда эта точка временной шкалы будет достигнута, строка будет передана всем экземплярам объектов, которые ее слушают. Эти сообщения можно добавить на сайте <span class="notranslate">IDE</span> с помощью <a href="../../../../The_Asset_Editors/Sequences.htm">редактора последовательностей</a>, но их также можно создавать и редактировать с помощью кода.</p>
  <p>Чтобы создать широковещательные сообщения в последовательности с помощью <span class="notranslate">GML</span>, необходимо добавить их в кадр в свойстве <span class="inline">messageEventKeyframes</span> структуры последовательности. По сути, это &quot;специальный&quot; трек, который используется только для этой цели и поэтому может принимать только данные ключевых кадров, связанные с широковещательными сообщениями, которые вы хотите, чтобы были у последовательности. Эта дорожка создается точно так же, как и любая другая, путем создания структур ключевых кадров и заполнения их данными ключевых кадров, где канал 0 - единственный канал, который вы можете использовать, а тип дорожки - <span class="inline">seqtracktype_message</span>. Ниже приведен пример того, как это может быть создано:</p>
  <p class="code">var _seq = sequence_get(my_Seq);<br />
    var _k = array_create(2);<br />
    _k[0] = sequence_keyframe_new(seqtracktype_message);<br />
    _k[0].frame = 60;<br />
    _k[1] = sequence_keyframe_new(seqtracktype_message);<br />
    _k[1].frame = 120;<br />
    var _m1 = array_create(2);<br />
    _m1[0] = &quot;Hello&quot;;<br />
    _m1[1] = &quot;World&quot;;<br />
    var _m2 = array_create(1);<br />
    _m2[0] = &quot;This is a Broadcast Message&quot;;<br />
    var _d1 = array_create(1);<br />
    _d1[0] = sequence_keyframedata_new(seqtracktype_message);<br />
    _d1[0].channel = 0;<br />
    _d1[0].events = _m1;<br />
    var _d2 = array_create(1);<br />
    _d2[0] = sequence_keyframedata_new(seqtracktype_message);<br />
    _d2[0].channel = 0;<br />
    _d2[0].events = _m2;<br />
    _k[0].channels = _d1;<br />
    _k[1].channels = _d2;<br />
    _seq.messageEventKeyframes = _k;</p>
  <p>Вы заметите, что текст сообщения передается в канал данных ключевых кадров в виде массива. Это сделано потому, что вы можете передавать несколько сообщений на один и тот же кадр, а разные экземпляры объектов будут прослушивать их и реагировать по-разному в зависимости от того, какое сообщение они ожидают.</p>
  <p>Как только последовательность выпустила широковещательное сообщение, вы можете разобрать его с помощью события <i>Other</i> &gt; <i>Broadcast Message</i> в экземплярах объектов, которое подробно описано <a href="../../../../The_Asset_Editors/Sequence_Properties/Broadcast_Messages.htm">здесь</a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Sequences.htm">Последовательности</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
Sequence Events
Sequence Moments
Sequence Broadcast Messages
broadcast Messages
event_create
event_destroy
event_clean_up
event_step
event_step_begin
event_step_end
event_async_system
event_broadcast_message
-->
  <!-- TAGS
sequence_events_moments_broadcasts
-->
</body>
</html>