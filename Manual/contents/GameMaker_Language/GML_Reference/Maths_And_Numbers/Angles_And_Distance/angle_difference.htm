<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>угловая разница</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <script src="../../../../assets/scripts/canvas_helpers.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for angle_difference" />
  <meta name="rh-index-keywords" content="angle_difference" />
  <meta name="search-keywords" content="angle_difference" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>угловая разница</h1>
  <p>Эта функция возвращает наименьшую разницу между двумя указанными углами, где разница рассчитывается от исходного угла к конечному. Возвращаемое значение будет находиться в диапазоне от -180 до 180 градусов (где положительный угол - против часовой стрелки, а отрицательный - по часовой стрелке).</p>
  <p>Связь между углами &quot;источника&quot; и &quot;назначения&quot; такова, что разница, которую вы получаете, вызывая <span class="inline2">angle_difference(dest, src)</span>, при добавлении обратно к значению <span class="inline2">src</span>, дает угол <span class="inline2">назначения</span> (хотя точные числовые значения могут отличаться). Вы можете использовать аналогичную технику для постепенного перемещения исходного угла к углу назначения на каждом шаге, добавляя, скажем, 10% от возвращенной разности обратно к <span class="inline2">src</span>, чтобы немного сдвинуть его в сторону <span class="inline2">dest</span> (это продемонстрировано в примере ниже).</p>
  <p> </p>
  <h4><b>Синтаксис:</b></h4>
  <p class="code">angle_difference(dest, src)</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th><th>Тип</th>
        <th>Описание</th>
     </tr>
      <tr>
        <td><span class="notranslate">dest</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The destination or target angle</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">src</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The source angle</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">var _dir = point_direction(x, y, mouse_x, mouse_y);<br />
    var _diff = angle_difference(_dir, image_angle);<br />
    image_angle += _diff * 0.1;</p>
  <p>Приведенный выше код получит направление от экземпляра к курсору мыши, затем получит разницу между этим углом и текущим углом. <a href="../../Asset_Management/Sprites/Sprite_Instance_Variables/image_angle.htm"><span class="inline">image_angle</span></a>и использует это значение для постепенного поворота экземпляра по направлению к мыши.</p>
  <p><img class="invisible" src="../../../../assets/Images/InteractiveExamples/DirectionalSprite.png" /></p>
  <p><canvas class="gml_reference_example" height="128" id="angle_difference_example" width="128"> </canvas></p>
  <p class="canvas_subtitle">Интерактивный пример</p>
  <script>
    //<![CDATA[
    let elm = document.getElementById("angle_difference_example");
    let ewidth = elm.clientWidth,
      eheight = elm.clientHeight;
    let context = elm.getContext("2d");
    let imagePath = "../../../../assets/Images/InteractiveExamples/DirectionalSprite.png";
    let img = new Image();
    img.src = imagePath;
    img.onload = () => {
      drawImageCenteredRotated(img, context, ewidth / 2, eheight / 2, angle);
    }
    var angle = 0;
    var targetAngle = 0;
    createMouseMoveEvent(elm, (mx, my) => {
      let diffX = mx - ewidth / 2;
      let diffY = my - eheight / 2;
      targetAngle = radToDeg(Math.atan2(diffY, diffX));
    });
    canvasLoop(() => {
      let diff = angle_difference(targetAngle, angle);
      angle += diff * 0.1;
      context.clearRect(0, 0, ewidth, eheight);
      drawImageCenteredRotated(img, context, ewidth / 2, eheight / 2, angle);
    });
    //]]>
  </script>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Angles_And_Distance.htm">Углы и расстояние</a></div>
        <div style="float:right">Следующий: <a href="lengthdir_x.htm"><span class="notranslate">lengthdir_x</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
angle_difference
-->
  <!-- TAGS
angle_difference
-->
</body>
</html>