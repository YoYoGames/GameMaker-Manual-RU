<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_particle_get_data_particle</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_particle_get_data_particle" />
  <meta name="rh-index-keywords" content="physics_particle_get_data_particle,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="search-keywords" content="physics_particle_get_data_particle,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
<<<<<<< HEAD
  <h1>physics_particle_get_data_particle</h1>
  <p>Эта функция возвращает различную информацию об одной частице в физической симуляции, используя заданные флаги. Индекс частицы (ее ID) - это тот, который был возвращен функцией <a href="physics_particle_create.htm"><span class="inline">physics_particle_create()</span></a>, а используемый буфер должен быть создан ранее с помощью функции <a href="../../Buffers/buffer_create.htm"><span class="inline">buffer_create()</span></a>. Он должен быть типа &quot;grow&quot;, с размером, приблизительно равным размеру ожидаемых возвращаемых данных. Сами флаги устанавливаются с помощью констант, приведенных ниже, и вы можете использовать побитовую комбинацию <i>или</i> &quot;|&quot; для создания одного значения флага, чтобы получить желаемую информацию.</p>
=======
  <h1><span data-field="title" data-format="default">physics_particle_get_data_particle</span></h1>
  <p>This function returns various pieces of information about a single particle in the physics simulation using the given flags checked.</p>
  <p>The particle index (its ID) is that which was returned by the function <span class="inline3_func"><a data-xref="{title}" href="physics_particle_create.htm">physics_particle_create</a></span>, and the buffer used must have been created previously using the function <span class="inline3_func"><a data-xref="{title}" href="../../Buffers/buffer_create.htm">buffer_create</a></span>. It should be of the &quot;grow&quot; type, with the size being approximately that of the expected return data. The flags themselves are set using the constants given below, and you would use the bitwise <i>or</i> &quot;|&quot; to create a single flag value to get the desired information.</p>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  <table>
    <tbody>
      <tr>
        <th>Постоянная</th>
        <th>Описание</th>
        <th>Тип данных</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_typeflags</span></td>
        <td>Значение флагов для частицы.</td>
        <td><span class="notranslate">buffer_u32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_position</span></td>
        <td>Позиция x и y частицы.</td>
        <td><span class="notranslate">2 x buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_velocity</span></td>
        <td>Горизонтальная и вертикальная скорость.</td>
        <td><span class="notranslate">2 x buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_colour</span></td>
        <td>Цвет и альфа-значение (шестнадцатеричное).</td>
        <td><span class="notranslate">buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_category</span></td>
        <td>Категория частицы (определенная при создании частицы).</td>
        <td><span class="notranslate">buffer_u32</span></td>
      </tr>
    </tbody>
  </table>
<<<<<<< HEAD
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">physics_particle_get_data_particle(ind, buffer, flags)</p>
=======
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">physics_particle_get_data_particle</span>(ind, buffer, flags)</p>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Тип</th>
        <th>Описание</th>
      </tr>
      <tr>
<<<<<<< HEAD
        <td><span class="notranslate">ind</span></td>
        <td><span data-keyref="Type_ID_Phy_Particle">Физика Идентификатор частицы</span></td>
        <td><span class="notranslate">The index (ID) of the particle to get the data from.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer">Идентификатор буфера</span></td>
        <td><span class="notranslate">The (previously created) buffer to use to store the data.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">flags</span></td>
        <td><span data-keyref="Type_Constant_Phy_Particle_Data_Flag">Физические данные частицы Флаг Константа</span>(ы)</td>
        <td><span class="notranslate">The flags to use to extract data about specific particle types.</span></td>
=======
        <td>ind</td>
        <td><span data-keyref="Type_ID_Phy_Particle"><a href="../../../../../GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_create.htm" target="_blank">Physics Particle ID</a></span></td>
        <td>The index (ID) of the particle to get the data from.</td>
      </tr>
      <tr>
        <td>buffer</td>
        <td><span data-keyref="Type_ID_Buffer"><a href="../../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm" target="_blank">Buffer</a></span></td>
        <td>The (previously created) buffer to store the data.</td>
      </tr>
      <tr>
        <td>flags</td>
        <td><span data-keyref="Type_Constant_Phy_Particle_Data_Flag"><a href="../../../../../GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_get_data.htm" target="_blank">Physics Particle Data Flag Constant</a></span>(s)</td>
        <td>The flags to use to extract data about specific particle types.</td>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">var part = physics_particle_create(flags, x, y, x_vel, y_vel, c_white, 1, 1)<br />
    var flags = phy_particle_data_flag_position | phy_particle_data_flag_velocity;<br />
    var buffer = buffer_create(16, buffer_grow, 4);<br />
    physics_particle_get_data_particle(part, buffer, flags);<br />
    px = buffer_read(buffer, buffer_f32);<br />
    py = buffer_read(buffer, buffer_f32);<br />
    pvelx = buffer_read(buffer, buffer_f32);<br />
    pvely = buffer_read(buffer, buffer_f32);<br />
    buffer_delete(buffer);</p>
<<<<<<< HEAD
  <p>Приведенный выше код получает положение и скорость частицы, индексируемой переменной &quot;part&quot;, и сохраняет данные в ряде переменных.</p>
  <p> </p>
  <p> </p>
  <p> </p>
=======
  <p>The above code gets the position and velocity of the particle indexed by the variable <span class="inline2">part</span> and stores the data in a number of variables.</p>
  <p> </p>
  <p> </p>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Soft_Body_Particles.htm">Частицы мягкого тела</a></div>
        <div style="float:right">Следующий: <a href="physics_particle_group_get_data.htm"><span class="notranslate">physics_particle_group_get_data</span></a></div>
      </div>
    </div>
<<<<<<< HEAD
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
=======
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  </div>
  <!-- KEYWORDS
physics_particle_get_data_particle
phy_particle_data_flag_typeflags
phy_particle_data_flag_position
phy_particle_data_flag_velocity
phy_particle_data_flag_colour
phy_particle_data_flag_category
-->
  <!-- TAGS
physics_particle_get_data_particle
-->
</body>
</html>