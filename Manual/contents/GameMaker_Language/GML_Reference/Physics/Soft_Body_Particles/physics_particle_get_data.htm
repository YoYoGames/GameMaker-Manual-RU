<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_particle_get_data</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_particle_get_data" />
  <meta name="rh-index-keywords" content="physics_particle_get_data,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="search-keywords" content="physics_particle_get_data,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
<<<<<<< HEAD
  <h1>physics_particle_get_data</h1>
  <p>Эта функция возвращает различную информацию о каждой частице в физической симуляции, используя заданные флаги. Используемый буфер должен быть создан ранее с помощью функции <a href="../../Buffers/buffer_create.htm"><span class="inline">buffer_create()</span></a>и должен быть типа &quot;grow&quot;, с размером, приблизительно равным размеру ожидаемых возвращаемых данных. Флаги устанавливаются с помощью любой из приведенных ниже констант, а для получения нужной информации можно использовать <a href="../../../../Additional_Information/Bitwise_Operators.htm">побитовую комбина</a> цию <a href="../../../../Additional_Information/Bitwise_Operators.htm"> <i>или</i></a> &quot;|&quot; для создания одного значения флага.</p>
=======
  <h1><span data-field="title" data-format="default">physics_particle_get_data</span></h1>
  <p>This function returns various pieces of information about each particle in the physics simulation using the given flags checked.</p>
  <p>The buffer used must have been created previously using the function <span class="inline3_func"><a data-xref="{title}" href="../../Buffers/buffer_create.htm">buffer_create</a></span>, and should be of the &quot;grow&quot; type, with the size being approximately that of the expected return data. The flags are set using any of the constants given below, and you would use the <a href="../../../../Additional_Information/Bitwise_Operators.htm">bitwise <i>or</i></a>  <span class="inline2">|</span> to create a single flag value to get the desired information.</p>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
<<<<<<< HEAD
        <th colspan="3"><span data-keyref="Type_Constant_Phy_Particle_Data_Flag"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_get_data.htm">Константа флага данных частиц физики</a></span></th>
=======
        <th colspan="3"><span data-keyref="Type_Constant_Phy_Particle_Data_Flag"><a href="../../../../../GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_get_data.htm" target="_blank">Physics Particle Data Flag Constant</a></span></th>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
      </tr>
      <tr>
        <th>Постоянная</th>
        <th>Описание</th>
        <th>Тип данных</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_typeflags</span></td>
        <td>Значение флагов для частицы.</td>
        <td><span class="notranslate">buffer_u32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_position</span></td>
        <td>Позиция x и y частицы.</td>
        <td><span class="notranslate">2 x buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_velocity</span></td>
        <td>Горизонтальная и вертикальная скорость.</td>
        <td><span class="notranslate">2 x buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_colour</span></td>
        <td>Цвет и альфа-значение (шестнадцатеричное).</td>
        <td><span class="notranslate">buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_category</span></td>
        <td>Категория частицы (определена при создании частицы или группы, к которой она принадлежит).</td>
        <td><span class="notranslate">buffer_u32</span></td>
      </tr>
    </tbody>
  </table>
<<<<<<< HEAD
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">physics_particle_get_data(buffer, flags)</p>
=======
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">physics_particle_get_data</span>(buffer, flags)</p>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Тип</th>
        <th>Описание</th>
      </tr>
      <tr>
<<<<<<< HEAD
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer"><a data-rhwidget="HyperlinkPopover" href="../../../../../LINKGOESHERE">Идентификатор буфера</a></span></td>
        <td><span class="notranslate">The (previously created) buffer to use to store the data.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">flags</span></td>
        <td><span data-keyref="Type_Constant_Phy_Particle_Data_Flag"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_get_data.htm">Физические данные частицы Флаг Константа</a></span>(s)</td>
        <td><span class="notranslate">The flags to use to extract data about specific particle types.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code"><span data-keyref="Type_Void"><a data-rhwidget="HyperlinkPopover" href="../../../../../LINKGOESHERE">N/A</a></span></p>
  <p> </p>
  <h4>Пример:</h4>
=======
        <td>buffer</td>
        <td><span data-keyref="Type_ID_Buffer"><a href="../../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm" target="_blank">Buffer</a></span></td>
        <td>The (previously created) buffer to store the data.</td>
      </tr>
      <tr>
        <td>flags</td>
        <td><span data-keyref="Type_Constant_Phy_Particle_Data_Flag"><a href="../../../../../GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_get_data.htm" target="_blank">Physics Particle Data Flag Constant</a></span>(s)</td>
        <td>The flags to use to extract data about specific particle types.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  <p class="code">var count = physics_particle_count();<br />
    var flags = phy_particle_data_flag_position | phy_particle_data_flag_colour;<br />
    if (count &gt; 0)<br />
    {<br />
        var buffer = buffer_create(count * 12, buffer_grow, 4);<br />
        physics_particle_get_data(buffer, flags);<br />
        for (var n = 0; n &lt; count; n++;)<br />
        {<br />
            var xx = buffer_read(buffer, buffer_f32);<br />
            var yy = buffer_read(buffer, buffer_f32);<br />
            var argb = buffer_read(buffer, buffer_u32);<br />
            var alpha = (argb &gt;&gt; 24) &amp; 255;<br />
            draw_sprite_ext(sprBlob, 0, xx, yy, 1, 1, 0, c_green, alpha);<br />
        }<br />
        buffer_delete(buffer);<br />
    }</p>
<<<<<<< HEAD
  <p>Приведенный выше код получает количество частиц и создает переменную с флагами данных для проверки, затем проверяет, есть ли частицы в комнате. Если они есть, создается буфер, который затем заполняется данными о частицах, которые проверяются и используются для рисования <span class="notranslate">sprite</span> в позиции частицы.</p>
  <p> </p>
  <p> </p>
  <p> </p>
=======
  <p>The above code gets the number of particles and creates a variable with the data flags to check, then checks to see if there are any particles in the room. If there are, a buffer is created and then filled with the particle data, which is checked and used to draw a sprite at the particle position.</p>
  <p> </p>
  <p> </p>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Soft_Body_Particles.htm">Частицы мягкого тела</a></div>
        <div style="float:right">Следующий: <a href="physics_particle_get_data_particle.htm"><span class="notranslate">physics_particle_get_data_particle</span></a></div>
      </div>
    </div>
<<<<<<< HEAD
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
=======
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
>>>>>>> e8f331b1b74476a144e051c0d836bf120b342735
  </div>
  <!-- KEYWORDS
physics_particle_get_data
phy_particle_data_flag_typeflags
phy_particle_data_flag_position
phy_particle_data_flag_velocity
phy_particle_data_flag_colour
phy_particle_data_flag_category
-->
  <!-- TAGS
physics_particle_get_data
-->
</body>
</html>