<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_post_string</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_post_string" />
  <meta name="rh-index-keywords" content="http_post_string" />
  <meta name="search-keywords" content="http_post_string" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_post_string</h1>
  <p>В вычислительной технике <b>пост-запрос</b> используется, когда клиенту необходимо отправить данные на сервер как часть запроса на получение, например, при загрузке файла или отправке заполненной формы, и то же самое справедливо для этой функции в <span data-keyref="GameMaker Name">GameMaker</span>. В отличие от метода запроса <span class="inline"><a href="http_get.htm">http_get()</a></span>, при котором на сервер отправляется только URL, <span class="inline">http_post_string()</span> также включает строку, которая отправляется на сервер и может привести к созданию нового ресурса или обновлению существующего ресурса, или к тому и другому. Следует отметить, что параметры HTTP-запроса (биты, которые иногда &quot;прикрепляются&quot; к концу URL при отправке формы на веб-странице) также вполне приемлемы при использовании этой функции.</p>
  <p class="note"><b><span class="note">ВНИМАНИЕ</span> </b>Вы должны знать, что из-за XSS-защиты в браузерах запросы и попытки загрузить ресурсы из других доменов блокируются и могут возвращать пустые результаты. Более подробную информацию см. в разделе " <a href="HTTP.htm">Междоменные проблемы</a> ".</p>
  <p>Это событие создаст &quot;обратный вызов&quot;, который будет подхвачен любым <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">HTTP Events</a>, и в этом случае будет создана <a href="../../Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> (более известная как &quot;словарь&quot;), которая является эксклюзивной для этого события и хранится в специальной переменной <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Эта DS карта будет содержать различные значения в зависимости от того, есть ли возвращаемые данные или нет. Например, если вы запросили файл, событие будет срабатывать несколько раз по мере получения каждого пакета данных, чтобы вы могли, например, показать индикатор выполнения. Общая структура карты DS будет выглядеть следующим образом:</p>
  <ul class="colour">
    <li><b>id: </b>ID, который был возвращен командой. Если вы отправляете серию запросов <span class="inline">http_</span>, вам нужно знать, на какой из них вы получаете ответ, и поэтому вы будете использовать это значение для сравнения со значением, которое вы сохранили при первоначальной отправке запроса, чтобы найти нужный запрос.</li>
    <li><b>статус: </b>Возвращает значение меньше 0 для ошибки, 0 для завершения и 1 для получения пакетов (подробнее см. ниже).</li>
    <li><b>результат: </b>Полученные данные (только строка).</li>
    <li><b>url: </b>Полный URL-адрес, который вы запросили.</li>
    <li><b>http_status: </b>Необработанный код статуса http (если доступен). Возвращается стандартный код статуса для большинства браузеров, например: 304 для &quot;Not Modified&quot; или 204 для &quot;No Content&quot; и т.д..</li>
  </ul>
  <p>Если в вашу игру возвращается несколько пакетов, ключ обратного вызова &quot;status&quot; вернет 1, в этом случае карта DS будет иметь следующие дополнительные ключи:</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;: </b>Это размер файла, который, по словам веб-сервера, вы должны ожидать получить (может быть -1, если сервер не возвращает эти данные).</li>
    <li><b>&quot;sizeDownloaded&quot;: </b>Размер данных, которые уже были загружены.</li>
  </ul>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">http_post_string(url, string);</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th><th>Тип</th>
        <th>Описание</th>
     </tr>
      <tr>
        <td><span class="notranslate">url</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The web address of the server that you wish to get information from</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The string you wish to send to the specified URL</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Расширенный пример:</h4>
  <p>Функция <span class="inline">http_post_string()</span> может быть вызвана из любого события, и поскольку она асинхронна, обратный вызов может быть почти мгновенным или занять несколько секунд. Вызов функции прост и выглядит следующим образом:</p>
  <p class="code">var str = &quot;name=&quot; + global.player_name + &quot;&amp;score=&quot; + string(global.player_score);<br />
    post = http_post_string(&quot;http://www.angusgames.com/game?game_id=&quot; + string(global.game_id), str);</p>
  <p>Приведенный выше код отправляет запрос на получение по указанному URL с заданными параметрами, а также отправляет дополнительные данные (имя игрока и счет в URL-кодированном виде), хранящиеся в переменной str. Это вызовет все определенные асинхронные <b>Http-события</b>, если будет получен обратный вызов, и вы можете сверить возвращаемый &quot;id&quot; с тем, что хранится в переменной <span class="inline">post</span>, чтобы убедиться, что вы запустили правильный код, если вы использовали различные функции <span class="inline">http_post_string()</span>. Следующий пример кода показывает, как это можно сделать:</p>
  <p class="code">var r_str = &quot;null&quot;;<br />
    if (ds_map_find_value(async_load, &quot;id&quot;) == post) <br />
    {<br />
        if (ds_map_find_value(async_load, &quot;status&quot;) == 0)<br />
        {<br />
            _r_str = ds_map_find_value(async_load, &quot;result&quot;);<br />
        }<br />
    }</p>
  <p>Приведенный выше код сначала проверит id созданной карты DS, затем проверит статус обратного вызова. Если значение равно 0 (что означает успех), результат обратного вызова будет сохранен в переменной для дальнейшего использования, в противном случае переменная будет содержать значение по умолчанию (в данном случае &quot;null&quot;).</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">Следующий: <a href="http_get_request_crossorigin.htm"><span class="notranslate">http_get_request_crossorigin</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
http_post_string
-->
  <!-- TAGS
http_post_string
-->
</body>
</html>