<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_blendmode_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_set_blendmode_ext" />
  <meta name="rh-index-keywords" content="gpu_set_blendmode_ext,bm_zero,bm_one,bm_src_colour,bm_inv_src_colour,bm_src_alpha,bm_inv_src_alpha,bm_dest_alpha,bm_inv_dest_alpha,bm_dest_colour,bm_inv_dest_colour,bm_src_alpha_sat,bm_src_color,bm_inv_src_color,bm_dest_color,bm_inv_dest_colour" />
  <meta name="search-keywords" content="gpu_set_blendmode_ext,bm_zero,bm_one,bm_src_colour,bm_inv_src_colour,bm_src_alpha,bm_inv_src_alpha,bm_dest_alpha,bm_inv_dest_alpha,bm_dest_colour,bm_inv_dest_colour,bm_src_alpha_sat,bm_src_color,bm_inv_src_color,bm_dest_color,bm_inv_dest_colour" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_set_blendmode_ext</h1>
  <p>Когда <span data-keyref="GameMaker Name">GameMaker</span> рисует пиксель, есть исходный цвет (цвет пикселя, который мы собираемся нарисовать) и цвет назначения (цвет, который уже есть в пикселе, к которому мы рисуем), поэтому при определении нового цвета пикселя исходный и конечный цвета рассчитываются в соответствии с выбранным режимом наложения. Каждый компонент цветов хранится как значение с плавающей точкой между 0 и 1, а новый цвет вычисляется путем умножения каждого компонента исходного цвета на некоторый коэффициент и умножения каждого компонента цвета назначения на другой коэффициент, а затем суммирования результатов по компонентам.</p>
  <p>Эта функция позволяет установить различные компоненты, которые должны быть сложены вместе для создания пользовательского режима наложения. Источник и место назначения имеют красный, зеленый, синий и альфа компоненты, и на следующей диаграмме RGBA источника считаются (Rs, Gs, Bs, As), а место назначения - (Rd, Gd, Bd, Ad). Одиннадцать констант, доступных для использования, могут быть как источником, так и получателем (или обоими) при использовании в этой функции.</p>
  <table>
    <tbody>
      <tr>
        <th>Постоянная</th>
        <th>Коэффициент смешивания (красный, зеленый, синий, альфа)</th>
      </tr>
      <tr>
        <td><span class="notranslate">bm_zero</span></td>
        <td>(0, 0, 0, 0)</td>
      </tr>
      <tr>
        <td><span class="notranslate">bm_one</span></td>
        <td>(1, 1, 1, 1)</td>
      </tr>
      <tr>
        <td><span class="notranslate">bm_src_colour</span></td>
        <td>(Rs, Gs, Bs, As)</td>
      </tr>
      <tr>
        <td><span class="notranslate">bm_inv_src_colour</span></td>
        <td>(1-Rs, 1-Gs, 1-Bs, 1-As)</td>
      </tr>
      <tr>
        <td><span class="notranslate">bm_src_alpha</span></td>
        <td>(As, As, As, As, As)</td>
      </tr>
      <tr>
        <td><span class="notranslate">bm_inv_src_alpha</span></td>
        <td>(1-Ас, 1-Ас, 1-Ас, 1-Ас, 1-Ас)</td>
      </tr>
      <tr>
        <td><span class="notranslate">bm_dest_alpha</span></td>
        <td>(Ad, Ad, Ad, Ad, Ad)</td>
      </tr>
      <tr>
        <td><span class="notranslate">bm_inv_dest_alpha</span></td>
        <td>(1-Ad, 1-Ad, 1-Ad, 1-Ad, 1-Ad)</td>
      </tr>
      <tr>
        <td><span class="notranslate">bm_dest_colour</span></td>
        <td>(Rd, Gd, Bd, Ad)</td>
      </tr>
      <tr>
        <td><span class="notranslate">bm_inv_dest_colour</span></td>
        <td>(1-Rd, 1-Gd, 1-Bd, 1-Ad)</td>
      </tr>
      <tr>
        <td><span class="notranslate">bm_src_alpha_sat</span></td>
        <td>(f, f, f, 1), где f = min(As, 1-Ad)</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><b>ВАЖНО!</b> HTML5 без включенного WebGL <b>не</b> сможет корректно отображать следующие режимы:</p>
  <ul class="colour" style="padding-left: 120px">
    <li><span class="inline">bm_src_colour</span></li>
    <li><span class="inline">bm_inv_src_colour</span></li>
    <li><span class="inline">bm_dest_colour</span></li>
    <li><span class="inline">bm_inv_dest_colour</span></li>
    <li><span class="inline">bm_src_alpha_sat</span></li>
  </ul>
  <p> </p>
  <p>Обратите внимание, что вы можете передать этой функции либо два отдельных аргумента, либо массив аргументов (как возвращает функция <a href="gpu_get_blendmode_ext.htm"><span class="inline">gpu_get_blendmode_ext()</span></a> например). В случае предоставления массива он должен содержать следующие два элемента:</p>
  <ul class="colour">
    <li>[0] = Режим наложения источника (по умолчанию <span class="inline">bm_src_alpha</span>)</li>
    <li>[1] = Режим наложения по месту назначения (по умолчанию <span class="inline">bm_inv_src_alpha</span>)</li>
  </ul>
  <p>Чтобы максимально использовать режимы наложения и понять, как они работают и как влияют на конечное изображение, выводимое на экран, мы рекомендуем вам ознакомиться со следующим руководством:</p>
  <ul class="colour">
    <li><a href="../../../../Additional_Information/Guide_To_Using_Blendmodes.htm">Руководство по использованию блендмодов</a></li>
  </ul>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">gpu_set_blendmode(src, dest);</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Тип</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td><span class="notranslate">src</span></td>
        <td><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor">Коэффициент режима наложения Постоянная</span></td>
        <td><span class="notranslate">Source blend mode factor (see constants above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">dest</span></td>
        <td><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor">Коэффициент режима наложения Постоянная</span></td>
        <td><span class="notranslate">Destination blend mode factor (see constants above)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">gpu_set_blendmode_ext(bm_src_alpha, bm_one);<br />
    draw_circle_colour(100, 100, 50, c_white, c_black, 0);<br />
    gpu_set_blendmode(bm_normal);</p>
  <p>Это превратит черный цвет в прозрачность, создавая эффект "свечения" за счет того, что белый цвет сильно выражен снаружи и постепенно ослабевает от центра круга. Режим наложения сбрасывается после рисования круга, чтобы аддитивное смешивание не применялось ко всему остальному после него.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="GPU_Control.htm">Управление графическим процессором</a></div>
        <div style="float:right">Следующий: <a href="gpu_set_blendmode_ext_sepalpha.htm"><span class="notranslate">gpu_set_blendmode_ext_sepalpha</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_blendmode_ext
bm_zero
bm_one
bm_src_colour
bm_inv_src_colour
bm_src_alpha
bm_inv_src_alpha
bm_dest_alpha
bm_inv_dest_alpha
bm_dest_colour
bm_inv_dest_colour
bm_src_alpha_sat
-->
  <!-- TAGS
gpu_set_blendmode_ext
-->
</body>
</html>