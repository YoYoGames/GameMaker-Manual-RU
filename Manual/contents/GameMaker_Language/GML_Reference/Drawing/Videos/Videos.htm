<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Воспроизведение видео</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Overview of video drawing functions" />
  <meta name="template" content="../../../../assets/masterpages/Manual_Page.htt" />
  <meta name="rh-index-keywords" content="videos" />
  <meta name="search-keywords" content="videos" />
  <meta name="condition-tags" content="" />
</head>
<body>
  <h1 id="h1">Воспроизведение видео</h1>
  <h2>Как воспроизводить видео?</h2>
  <p>Выполните следующие шаги, чтобы загрузить видео во время выполнения и воспроизвести его:</p>
  <ul class="colour">
    <li>Добавьте видеофайл в каталог <a data-xref="{text}" href="../../../../Settings/Included_Files.htm#h">Included Files</a><span class="inline2">(/datafiles</span> ) вашего проекта.</li>
    <li>Загрузите видео с помощью <span class="inline"><a href="video_open.htm">video_open()</a></span>.
      <ul>
        <li>В качестве альтернативы загрузите видео из URL-адреса.</li>
      </ul>
    </li>
    <li>Нарисуйте ее в событии Draw, используя <span class="inline"><a href="video_draw.htm">video_draw()</a></span>.
      <ul>
        <li>Эта функция рисует видео на внутренней поверхности, которую она возвращает как часть своего возвращаемого массива.</li>
        <li>Вы должны нарисовать эту поверхность вручную с помощью <span class="inline"><a href="../Surfaces/draw_surface.htm">draw_surface()</a></span>, чтобы видео появилось.
          <ul>
            <li>Для рисования <a data-xref="{title}" href="YUV_Videos.htm">YUV-видео</a> потребуются дополнительные шаги.</li>
          </ul>
        </li>
      </ul>
    </li>
    <li>Когда видео закончится, удалите его из памяти, вызвав <span class="inline"><a href="video_close.htm">video_close()</a></span>.
      <ul>
        <li>Используйте <a href="#h">обратные вызовы Async Callbacks</a> для запуска кода, когда видео заканчивается.</li>
      </ul>
    </li>
  </ul>
  <h2>Видеокодеки и лицензирование</h2>
  <p><span data-keyref="GameMaker Name">GameMaker</span> не поставляется с какими-либо кодеками и использует кодеки, присутствующие на платформе, на которой работает игра. Это означает, что ваше видео должно быть закодировано в формате, который может быть декодирован на целевой платформе (платформах).</p>
  <p>Использование определенных форматов может потребовать от вас лицензионных платежей в зависимости от лицензии соответствующего кодека и доходов вашей игры, и в этом случае разработчик будет нести юридическую ответственность за любые платежи, которые должны быть выплачены владельцам кодеков. Кодеки также лицензируются по-разному на каждой платформе, поэтому необходимо соблюдать осторожность в отношении игр, распространяемых на нескольких платформах.</p>
  <p>Обратите внимание, что видеоформаты (такие как <span class="inline2">.mp4</span>, <span class="inline2">.avi</span>, <span class="inline2">.mkv</span> и т.д.) - это просто контейнеры, в которые упакованы <strong>видео-</strong> и <strong>аудиопотоки</strong>, оба из которых могут быть закодированы отдельно и могут требовать отдельных лицензий.</p>
  <p>Для распространения на консольных платформах уточните у своего представителя, какие форматы вам разрешено использовать без необходимости платить дополнительные лицензионные сборы.</p>
  <h2>Форматы</h2>
  <p>Форматы видео, которые вы сможете загружать и воспроизводить в своей игре, будут зависеть от вашей целевой платформы и кодеков, которые поддерживаются на этой платформе.</p>
  <h2>Функции</h2>
  <p>Вы можете загружать, воспроизводить и манипулировать видеофайлами во время выполнения программы, используя следующие функции:</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="video_open.htm">video_open</a></li>
    <li><a data-xref="{title}" href="video_close.htm">видео_закрытие</a></li>
    <li><a data-xref="{title}" href="video_draw.htm">видео-рисунок</a></li>
    <li><a data-xref="{title}" href="video_set_volume.htm">video_set_volume</a></li>
    <li><a href="video_pause.htm">видео_пауза</a></li>
    <li><a href="video_resume.htm">видео_резюме</a></li>
    <li><a href="video_enable_loop.htm">video_enable_loop</a></li>
    <li><a href="video_seek_to.htm">видео_иск_к</a></li>
  </ul>
  <p> </p>
  <p>Следующие функции используются для получения информации о текущем загруженном видео:</p>
  <ul class="colour">
    <li><a href="video_is_looping.htm">video_is_looping</a></li>
    <li><a href="video_get_volume.htm">video_get_volume</a></li>
    <li><a href="video_get_duration.htm">video_get_duration </a></li>
    <li><a href="video_get_position.htm">video_get_position</a></li>
    <li><a href="video_get_status.htm">video_get_status</a></li>
    <li><a href="video_get_format.htm">video_get_format </a></li>
  </ul>
  <h2 id="h">Асинхронные обратные вызовы</h2>
  <p>Событие <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Social.htm">Async Social</a> срабатывает на указанных ниже этапах, при этом ключ <span class="inline2">&quot;type&quot;</span> в его карте <span class="inline2">async_load</span> устанавливается на заданное значение:</p>
  <ul class="colour">
    <li><span class="inline2">&quot;video_start&quot;</span>: Когда видео начинает воспроизводиться, то есть когда его <a href="video_get_status.htm">статус</a> меняется с <span class="inline2">video_status_preparing</span> на <span class="inline2">video_status_playing</span>.</li>
    <li><span class="inline2">&quot;video_end&quot;</span>: Когда видео заканчивается. Это не срабатывает, если видео <a href="video_enable_loop.htm">установлено на цикл</a>.</li>
  </ul>
  <p>Вот пример события Async Social, прослушивающего обратные вызовы видео:</p>
  <p class="code">var _type = async_load[? &quot;type&quot;];<br />
    <br />
    if (_type == &quot;video_start&quot;)<br />
    {<br />
        obj_video.display_video = true;<br />
    }<br />
    else if (_type == &quot;video_end&quot;)<br />
    {<br />
        obj_video.display_video = false;<br />
        video_close();<br />
    }
  </p>
  <p>Приведенный выше код считывает тип из карты <span class="inline2">async_load</span>. Когда видео запускается, он устанавливает переменную в объекте в <span class="inline2">true</span>, чтобы можно было отобразить видео.</p>
  <p>Когда видео заканчивается, он устанавливает ту же переменную в <span class="inline2">false</span>, а затем вызывает <span class="inline"><a href="video_close.htm">video_close()</a></span>, чтобы удалить видео из памяти.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Назад: <a data-xref="{title}" href="../Drawing.htm">Рисунок</a></div>
        <div>Следующий: <a data-xref="{title}" href="../Colour_And_Alpha/Colour_And_Alpha.htm">Цвет и альфа</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
	Videos
-->
  <!-- TAGS
-->
</body>
</html>