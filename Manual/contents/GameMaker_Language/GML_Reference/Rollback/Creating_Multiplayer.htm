<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Создание многопользовательской игры</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Follow this tutorial to make your first multiplayer game" />
  <meta name="template" content="../../../assets/masterpages/Manual_Page.htt" />
  <meta name="condition-tags" content="Export:Beta" />
</head>
<body>
  <h1>Создание многопользовательской игры</h1>
  <p class="note">На этой странице вы подробно рассмотрите шаги по созданию вашей первой многопользовательской игры.<br>
    <br>
    Информацию о системе отката читайте в разделе <a data-xref="{title}" href="Rollback_System.htm">Система отката</a>.<br>
    <br>
    Для получения подробной информации обо всех функциях Rollback читайте раздел <a data-xref="{title}" href="Rollback_Functions/Rollback_Functions.htm">Функции Rollback</a>.
  </p>
  <h2>Создание проекта</h2>
  <p>Начните новый проект и создайте <span class="notranslate">sprite</span> для объекта игрока. Вы можете импортировать изображение или просто создать заполненный квадрат.</p>
  <p>Создайте два объекта:</p>
  <ul class="colour">
    <li><strong>obj_game</strong>: Это будет управлять вашей многопользовательской игрой.</li>
    <li><strong>obj_player</strong>: Это будет ваш реальный объект игрока. Каждый подключенный игрок будет иметь свой собственный экземпляр этого объекта, которым он сможет управлять.<br>
      <br>
      Назначьте своего игрока <span class="notranslate">sprite</span> объекту игрока.
    </li>
  </ul>
  <p><img class="center_shadow" height="220" src="../../../assets/Images/Scripting_Reference/GML/Reference/Rollback/rollback_assets.png" width="196" /></p>
  <p>Поместите <strong>obj_game</strong> в комнату. <strong>Не</strong> размещайте <strong>obj_player</strong>, так как он будет создан автоматически.</p>
  <h2>Начало игры</h2>
  <p>Добавьте событие Create к <strong>obj_game</strong> и напишите в нем следующий код:</p>
  <p class="note"><span class="note">ПРИМЕЧАНИЕ</span> Если вы используете <span class="notranslate">GML</span> Visual, используйте соответствующие <a href="../../../Drag_And_Drop/Drag_And_Drop_Reference/Rollback/Rollback_Actions.htm">действия отката</a>.</p>
  <p class="code">rollback_define_player(obj_player);<br />
    <br />
    var _joined = rollback_join_game();<br />
    <br />
    if (!_joined)<br />
    {<br />
        rollback_create_game(2);<br />
    }
  </p>
  <p>Сначала он определяет объект игрока, который будет использоваться, и пытается присоединиться к игре, используя <a href="Rollback_Functions/rollback_join_game.htm"><span class="inline">rollback_join_game()</span></a>. Эта функция возвращает <span class="inline">true</span>, если система нашла игру, к которой можно присоединиться (это означает, что вы находитесь на правильном URL).</p>
  <p>Если к игре не удалось присоединиться, возвращается значение <span class="inline">false</span>. Когда возвращаемое значение равно <span class="inline">false</span>, мы вызываем команду <a href="Rollback_Functions/rollback_create_game.htm"><span class="inline">rollback_create_game()</span></a> для размещения нашей собственной игры. Там мы указываем, что в игре должно быть максимум 2 игрока.</p>
  <p class="note"><span class="note">ПРИМЕЧАНИЕ</span> В настоящее время вы можете создавать игры только для 4 игроков.</p>
  <p>Приведенный выше код создаст два экземпляра <strong>obj_player</strong> в левом верхнем углу комнаты, но они еще не будут управляемыми.</p>
  <p><img class="center_shadow" height="335" src="../../../assets/Images/Scripting_Reference/GML/Reference/Rollback/rollback_player_spawned.png" width="447" /></p>
  <h2>Движущиеся игроки</h2>
  <p>Ввод управляется системой Rollback и автоматически синхронизируется между игроками.</p>
  <p>В объекте игрока вызовите <span class="inline"><a href="Rollback_Functions/rollback_get_input.htm">rollback_get_input()</a></span>, чтобы получить структуру, содержащую все входы по умолчанию, которые выглядят следующим образом:</p>
  <p class="note"><span class="inline"><strong>left</strong>, <strong>right</strong>, <strong>up</strong>, <strong>down</strong>, <strong>Z</strong>, <strong>X</strong>, <strong>C</strong>, <strong>space</strong></span><br>
    <br>
    <em>Они указывают, удерживается ли ключ.</em> <span class="inline">*<strong>_pressed</strong></span> <em>и </em><span class="inline">*<strong>_released</strong></span> <em>также предусмотрены варианты.</em>
  </p>
  <p>Чтобы определить собственные входы, см. раздел <a data-xref="{title}" href="Defining_Inputs.htm">Определение входов</a>.</p>
  <p>Теперь настройте плеер со следующим кодом в его событиях Create и Step:</p>
  <p class="code">// Create Event<br />
    move_speed = 5;<br />
    <br />
    // Step Event<br />
    var _input = rollback_get_input();<br />
    <br />
    if (_input.left) x -= move_speed;<br />
    if (_input.right) x += move_speed;<br />
    if (_input.up) y -= move_speed;<br />
    if (_input.down) y += move_speed;
  </p>
  <p>Это устанавливает переменную со скоростью игрока, а в событии Step получает входной struct.</p>
  <p>Нажатие каждой клавиши со стрелкой перемещает экземпляр по соответствующей оси, например, нажатие влево уменьшает X, нажатие вверх уменьшает Y, и так далее.</p>
  <h2>Расположение игроков</h2>
  <p>Перед тестированием давайте убедимся, что игроки создаются в определенных местах, а не появляются в левом верхнем углу комнаты.</p>
  <p>В событии Create объекта игрока напишите следующее:</p>
  <p class="code">if (player_id == 0)<br />
    {<br />
        x = 300;<br />
    }<br />
    else if (player_id == 1)<br />
    {<br />
        x = room_width - 300;<br />
    }<br />
    <br />
    y = room_height / 2;
  </p>
  <p><span class="inline"><a data-xref="{title}" href="Rollback_Variables/player_id.htm">player_id</a></span> это встроенная переменная экземпляра, которая хранит идентификатор экземпляра игрока.</p>
  <p>Поскольку в нашей игре два игрока, первый игрок будет иметь идентификатор <strong>0</strong>, а второй игрок - идентификатор <strong>1</strong>.</p>
  <p>Исходя из этого, мы изменяем начальную позицию X игрока. Положение Y одинаково для обоих вариантов.</p>
  <p>Теперь запустите игру, и вы увидите обоих игроков, где вы можете управлять первым:</p>
  <p><video class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Rollback/rollback_two_players_synctest.mp4" width="856" height="420" controls="" align="center"></video></p>
  <p>Второй игрок движется нестабильно сам по себе, что является особенностью системы Rollback. Она автоматически выдает случайные значения каждый кадр для всех определенных входов, являясь базовой формой проверки вашей игры.</p>
  <p>Вы можете отключить автоматическое случайное движение, вызвав <a href="Rollback_Functions/rollback_use_random_input.htm"><span class="inline">rollback_use_random_input(false)</span></a>или <a href="Defining_Inputs.htm#h1">настроить свой собственный &quot;шуточный&quot; вход</a> для другого игрока.</p>
  <h2>Онлайн соединение</h2>
  <p>Ваш базовый многопользовательский пример завершен, и он готов к выходу в Интернет.</p>
  <p>По умолчанию система запускается в режиме <strong>Sync Test</strong>, в котором вы тестируете свою игру в автономном режиме. Чтобы включить онлайн функциональность, второй аргумент <span class="inline"><a href="Rollback_Functions/rollback_create_game.htm">rollback_create_game()</a></span> должен быть установлен на <span class="inline">false</span> (что отключает Sync Test).</p>
  <p>Также необходимо задать регион по умолчанию, который является третьим аргументом. См: <a data-xref="{text}" href="Rollback_Functions/rollback_create_game.htm#h">Получение имен регионов</a></p>
  <p class="code">// obj_game: Create event<br />
    rollback_define_player(obj_player);<br />
    <br />
    var _joined = rollback_join_game();<br />
    <br />
    if (!_joined)<br />
    {<br />
        rollback_create_game(2, false, &quot;Europe&quot;); // &lt;- disable Sync Test, set default region<br />
    }
  </p>
  <p>В браузере Opera GX войдите в <a href="https://gx.games">GX.games</a>.</p>
  <p>Запустите игру через цель <strong>Opera GX</strong>. Когда система Rollback запускается, она создает новую &quot;комнату&quot;: не актив комнаты <span class="notranslate">GameMaker</span>, а <strong>виртуальную комнату</strong>, в которой игроки будут играть вместе.</p>
  <h2>Приглашение игроков</h2>
  <p>Когда ваша игра начнется, вы не сразу увидите инстансы игроков. Вместо этого система будет ждать, пока все игроки присоединятся, прежде чем начать игру.</p>
  <p class="note"><span class="tip">СОВЕТ</span> Вы можете начать игру до того, как к ней присоединятся игроки, позвонив по телефону <a href="Rollback_Functions/rollback_start_game.htm"><span class="inline">rollback_start_game()</span></a>. Если вы позвоните <a href="Rollback_Functions/rollback_use_manual_start.htm"><span class="inline">rollback_use_manual_start()</span></a> то игра будет ждать, пока вы начнете ее вручную, даже после того, как все игроки присоединятся.</p>
  <p>Пока вы ждете, под вашей игрой появится кнопка &quot;<strong>Copy Share Url</strong>&quot;. Прокрутите страницу вниз, если вы не видите эту кнопку.</p>
  <p><img>Это скопирует ссылку на вашу игру, которую вы можете вставить в другое окно браузера, чтобы присоединиться в качестве второго игрока.</p>
  <p>Вам необходимо, чтобы оба окна браузера были видны одновременно, иначе игрок, чье окно скрыто, выйдет по тайм-ауту, и ваша игра завершится.</p>
  <p>После того как оба игровых экземпляра подключатся и синхронизируются, вы сможете управлять каждым игроком через окно браузера:</p>
  <p><img>Вы можете открыть оба окна рядом, перетаскивая и изменяя их размер.</p>
  <p>Во время тестирования вы будете видеть отладочные сообщения в левом верхнем углу вашей игры, давая вам информацию о состоянии вашей игры. Вы можете отключить это, вызвав команду <span class="inline"><a href="Rollback_Functions/rollback_display_events.htm">rollback_display_events(false)</a></span>.</p>
  <h2 id="h">Покидая комнату</h2>
  <p>Вызвать <a href="Rollback_Functions/rollback_leave_game.htm"><span class="inline">rollback_leave_game()</span></a> чтобы заставить игрока покинуть комнату. Подробную информацию о его использовании читайте на <a href="Rollback_Functions/rollback_leave_game.htm">странице функции</a>.</p>
  <h2>Логика игры</h2>
  <p>Система отката будет автоматически создавать экземпляры игроков, когда все игроки присоединятся, при условии, что вы используете <a href="Rollback_Functions/rollback_define_player.htm"><span class="inline">rollback_define_player()</span></a>.</p>
  <p>Однако он все еще позволяет вам запускать любой другой код до начала игры, что означает, что вы должны позаботиться о запуске основной логики игры только после того, как все игроки присоединятся.</p>
  <p>Например, если вы порождаете вражеские экземпляры с помощью тревоги, запускайте эту тревогу только после срабатывания события <a data-xref="{text}" href="Rollback_Events.htm#h">Rollback Start</a>.</p>
  <h2>Основные события</h2>
  <p>Основные события в вашей игре, такие как победа игрока и окончание уровня, должны происходить, когда все игроки синхронизированы. В противном случае неправильное предсказание может ошибочно привести к победе игрока, что покажется странным, когда он в итоге откатится назад.</p>
  <p>Смотрите пример на <span class="inline"><a href="Rollback_Functions/rollback_sync_on_frame.htm">rollback_sync_on_frame()</a></span>, как правильно это сделать.</p>
  <h2>Дальнейшее чтение</h2>
  <p>Ваша первая многопользовательская игра завершена!</p>
  <p>Прочитайте следующие страницы, чтобы узнать все о системе Rollback:</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="Rollback_System.htm">Система отката</a></li>
    <li><a data-xref="{title}" href="Defining_Inputs.htm">Определение входов</a></li>
    <li><a data-xref="{title}" href="Rollback_Constraints.htm">Ограничения отката</a></li>
    <li><a data-xref="{title}" href="Rollback_Events.htm">События отката</a></li>
    <li><a data-xref="{title}" href="Rollback_Preferences.htm">Предпочтения игрока</a></li>
  </ul>
  <p>Вы можете добавить чат в свою игру, используя <a href="Rollback_Functions/rollback_chat.htm"><span class="inline">rollback_chat()</span></a>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Назад: <a data-xref="{title}" href="Rollback_Multiplayer.htm">Rollback Multiplayer</a></div>
        <div>Следующий: <a data-xref="{title}" href="Rollback_System.htm">Система отката</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
</body>
</html>