<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>sha1_string_unicode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for sha1_string_unicode" />
  <meta name="rh-index-keywords" content="sha1_string_unicode" />
  <meta name="search-keywords" content="sha1_string_unicode" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>sha1_string_unicode</h1>
  <p>В криптографии SHA-1 - это криптографическая хэш-функция, разработанная <i>Агентством национальной безопасности</i> США и используемая в нескольких широко распространенных приложениях и протоколах, таких как популярный <b>Git</b>, где она используется для проверки изменений файлов.
    Эта функция принимает на вход строку в формате unicode и возвращает 160-битный дайджест сообщения в формате ASCII, например:</p>
  <p class="code">sha1 input string = &quot;The quick brown fox jumps over the lazy dog&quot;<br/> sha1 output hash = &quot;2fd4e1c6 7a2d28fc ed849ee1 bb76e739 1b93eb12&quot;</p>
  <p>Таким образом, вы можете генерировать безопасный ключ, который можно хранить и использовать для проверки целостности информации, отправляемой на внешний сервер (или получаемой с него) (например).</p>
  <p class="note"><b>ПРИМЕЧАНИЕ</b>: Существует два формата кодировки sha1 - UTF-8 и unicode. Оба формата предусмотрены для облегчения взаимодействия с различными настройками сервера, но чаще всего используется unicode.</p>
  <p class="note"><strong>ПРИМЕЧАНИЕ</strong>: SHA-1 не является полностью безопасным и может быть взломан. См. <a href="https://en.wikipedia.org/wiki/SHA-1">эту страницу</a> для получения дополнительной информации.</p>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">sha1_string_unicode(string)</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th><th>Тип</th>
        <th>Описание</th>
     </tr>
      <tr>
        <td><span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The string to hash.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code"><span data-keyref="Type_String"></span></p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">var hash, str;<br/> str = base64_encode(game_data);<br/> hash = sha1_string_unicode(str);<br/> http_get(&quot;http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?hash=&quot; + hash); http_get(&quot;http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?data=&quot;
    + str);</p>
  <p>Приведенный выше код кодирует строку в base64, а затем генерирует хэш sha1. Наконец, хэш и закодированная строка отправляются на сервер.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Encoding_And_Hashing.htm">Кодирование файлов</a></div>
        <div style="float:right">Следующий: <a href="sha1_file.htm"><span class="notranslate">sha1_file</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
sha1_string_unicode
-->
  <!-- TAGS
sha1_string_unicode
-->
</body>
</html>