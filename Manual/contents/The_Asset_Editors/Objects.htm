<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Объекты</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <script src="../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how the object editor works" />
  <meta name="rh-index-keywords" content="Object Editor" />
  <meta name="search-keywords" content="objects,object editor" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Редактор объектов</h1>
  <p><img>Объекты - это ресурсы, которые мы используем для управления аспектами игры и для выполнения определенных действий. Чаще всего они связаны с <span class="notranslate">sprite</span>, чтобы вы видели их в игровых комнатах, но иногда они используются в качестве &quot;закулисного&quot; контроллера для выполнения действий, связанных с пользователем, или для синхронизации и т.д.. Им может быть задано поведение, и они могут реагировать на определенные события, а также друг на друга, и большинство вещей, которые вы видите в игре, основаны на объектах и их взаимодействии. Мы говорим &quot;на основе&quot;, потому что на самом деле вы не размещаете объекты непосредственно в игровых комнатах, а размещаете <strong>экземпляры</strong> этих объектов, которые, по сути, являются копиями (или клонами, если хотите) ресурса объекта. Это очень важно помнить, поскольку экземпляры и объекты - это <em>не</em> одно и то же, и каждый из них имеет свой собственный набор функций, которые могут влиять на них.</p>
  <p>Чтобы пояснить это, представьте себе игру, созданную в <span data-keyref="GameMaker Name">GameMaker</span>. Все персонажи, монстры, шары, стены и т.д... - это объекты, которые вы создаете в <a href="../Introduction/The_Asset_Browser.htm">Asset Browser</a>. Затем вы перетаскиваете <em>объект </em>в комнату в <a href="Rooms.htm">редакторе комнат</a>, чтобы создать <em>экземпляр </em>, скопированный из шаблона базового объекта. Затем экземпляр в комнате можно изменить в самом редакторе или с помощью кода, чтобы изменить его масштаб, цвет или другие детали &quot;базового&quot; объекта. Поэтому, когда мы говорим о том, что что-то влияет на <strong>экземпляр</strong> или изменяет его, мы имеем в виду, что это влияет на <em>одну конкретную копию объекта в комнате</em>. Только этот единственный экземпляр подвергается воздействию, а все остальные - нет. Но когда мы говорим о влиянии на <strong>объект</strong> или <strong>его</strong> изменении, мы имеем в виду, что изменяем объект в браузере активов, и все, что мы делаем с ним, будет отражено во всех экземплярах, созданных с этого момента. Таким образом, объект - это шаблон для экземпляра, а экземпляр - это то, что мы размещаем в комнате, чтобы создать нашу игру.</p>
  <p>Чтобы создать объект в вашей игре, вы можете щелкнуть правой кнопкой мыши <img> в браузере активов и выбрать опцию <em>Create Object</em>. Откроется окно, изображенное в верхней части этой страницы, со следующими разделами:</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Подробности</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">Здесь вы можете дать своему объекту имя. Это имя не должно содержать пробелов и неразрешенных символов (разрешены только буквенно-цифровые символы и подстрочный символ &quot;_&quot;) и должно быть коротким, но запоминающимся, чтобы вы могли легко идентифицировать ресурсы
      впоследствии, когда у вас их может быть много. Например, многие люди используют префикс или суффикс для определения различий между ресурсами, например, &quot;<span class="inline">obj_Ship</span>&quot; или &quot;<span class="inline">Ship_obj</span>&quot;.</p>
    <p class="dropspot">Далее вы можете выбрать <span class="notranslate">sprite</span> для объекта, если вы хотите, чтобы он его имел. Щелкните левой кнопкой мыши <img> на поле <span class="notranslate">sprite</span>, и появится <strong>проводник объектов</strong> со списком всех доступных <span class="notranslate">sprites</span> из браузера объектов:</p>
    <p class="dropspot"><img>Затем вы можете выбрать тот, который хотите использовать для объекта. Когда объекту назначен <span class="notranslate">sprite</span>, вы можете нажать кнопку <em>Редактировать спрайт</em> <img>, чтобы изменить <a href="Sprites.htm">свойства спрайта</a>, или - если у вас нет <span class="notranslate">sprite</span> для объекта, но вы хотите его создать - вы можете нажать кнопку Добавить спрайт , чтобы создать новый актив и назначить его.
      кнопку <em>Add Sprite</em> <img>, чтобы создать новый актив <span class="notranslate">sprite</span> и назначить его. Вы также можете отредактировать изображение актива <span class="notranslate">sprite</span>, которое было
      щелкнув на кнопке <em>Edit Image</em> <img>, чтобы открыть <a href="Image_Editor.htm">редактор изображений</a>.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Маска столкновения</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">Под областью назначения <span class="notranslate">sprite</span> находится кнопка для выбора определенной <strong>маски столкновений</strong>. По умолчанию объект будет генерировать свойства столкновений на основе назначенного ему <span class="notranslate">sprite</span>, но бывают случаи, когда вы можете захотеть.
      столкновения должны быть основаны на другой форме из другого <span class="notranslate">sprite</span>. Например, в игре с видом сверху вниз у главного объекта <span class="notranslate">sprite</span> есть прямоугольная маска столкновений, но для более плавного столкновения лучше использовать круглую маску. В таких случаях
      вы можете нажать кнопку Маска столкновений и выбрать другой ресурс <span class="notranslate">sprite</span>, так что теперь экземпляры объекта будут <em>рисовать </em>назначенный <span class="notranslate">sprite</span>, но основывать <em>столкновения </em>на маске <span class="notranslate">sprite</span>. Более подробную информацию о масках столкновений можно найти
      масках столкновений на странице, посвященной <a href="Sprites.htm">редактору спрайтов</a>.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Свойства</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">Здесь вам предлагаются следующие параметры для вашего объекта:<strong></strong></p>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>Visible</strong>: Visible указывает, видны ли экземпляры этого объекта при запуске комнаты. Обычно большинство экземпляров видимы, но иногда полезно иметь невидимые экземпляры - например, их можно использовать в качестве путевых точек для управления движущимся монстром или для отслеживания значений и выполнения определенных действий по времени. Невидимые объекты все равно реагируют на события, и если им назначен <span class="notranslate">sprite</span> или маска, они также будут реагировать на столкновения с другими объектами... их просто не видно, и они <em>не </em>выполняют свое <strong>событие рисования</strong>. По умолчанию флаг видимости установлен.<strong></strong></li>
      <li class="dropspot"><strong>Solid</strong>: Когда вы отмечаете экземпляр как solid, вы сообщаете <span data-keyref="GameMaker Name">GameMaker</span>, что он должен попытаться разрешить любые столкновения до того, как сработает <strong>событие Collision Event</strong>. Это очень базовая функциональность, и в действительности все, что она делает, это перемещает экземпляр обратно в позицию, в которой он находился за мгновение до обнаружения столкновения, перед выполнением любого кода или <span class="notranslate">GML</span> Visual, который находится в самом событии столкновения, и как таковая имеет ограниченное применение.</li>
      <li class="dropspot"><strong>Постоянный</strong>: Постоянный объект - это объект, который не исчезает при изменении комнаты, а &quot;сохраняется&quot; и переносится в новую комнату. Он исчезнет только тогда, когда вы явно уничтожите его, либо с помощью действия destroy, либо в коде. Это означает, что если вы поместите постоянный объект в одну комнату, он будет доступен во всех последующих комнатах и продолжит выполнять любые действия, назначенные на события в свойствах объекта, <em>за исключением </em> <strong>события Create</strong>, которое срабатывает только <em>один раз </em>при первоначальном создании, а не при переходе в новую комнату. Это удобно, когда, например, главный герой переходит из комнаты в комнату, и вы хотите сохранить переменные внутри экземпляра неизменными, однако следует очень внимательно следить за правильностью создания и уничтожения постоянных объектов, поскольку в проект легко могут по ошибке закрасться ошибки.</li>
    </ul>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#" style="margin-left:88px">Стойкость и комнатные слои</a>  </p>
    <div class="droptext" data-targetname="drop-down7">
      <p class="dropspot" style="margin-left: 132px">Когда вы создаете экземпляр с включенной персистентностью в комнате, ему будет назначен слой или глубина (в зависимости от того, какую функцию вы использовали для создания экземпляра объекта). При смене комнаты, если в следующей комнате нет слоя с тем же именем или глубиной, что и назначенный, то<strong> для экземпляра будет создан новый слой, сохраняющийся между комнатами</strong>. Если при создании экземпляра вы присвоили слою имя, то новый слой также будет называться так же, как и исходный, а если вы присвоили экземпляру глубину, то новый слой будет называться &quot;<span class="inline">_layer_XXX</span>&quot;, где &quot;<span class="inline">XXX</span>&quot; - шестнадцатеричное значение, используемое для присвоения слою уникального имени. Эти слои будут удалены из комнаты при завершении работы <strong>комнаты</strong>.<br>
        <br>
        Еще один момент, связанный со слоями и постоянными экземплярами: если при создании экземпляра вы назначили ему слой с именем, а в следующих комнатах есть другой слой с тем же именем, то сохраняемый экземпляр будет назначен слою с тем же именем, независимо от глубины слоя.<br>
        <br>
        Наконец, если сохраняемый экземпляр перемещается в комнату со слоем на той <em>же</em> глубине, на которой он был создан, он <em>не </em>будет назначен этому слою, а вместо него будет создан новый слой на той же глубине (в соответствии с соглашением об именовании, описанным выше).
      </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#" style="margin-left: 88px">Постоянство и события</a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p class="dropspot" style="margin-left: 132px">Как уже упоминалось, постоянный объект запускает <strong>событие Create</strong> только <em>один раз</em>, но в соответствующее время у него также будут срабатывать события <strong>Game Start</strong>, <strong>Game End</strong>, <strong>Room Start</strong> и <strong>Room End</strong>. Однако если вы перезапустите игру (например, с помощью функции <span class="inline">game_restart()</span> ), <em>все постоянные объекты будут удалены и будут существовать только тогда, когда будут созданы игрой</em>.<br>
        <br>
        Также обратите внимание, что если вы <strong>деактивируете </strong>постоянный объект, он больше не будет переходить из одной комнаты в другую, если не будет повторно активирован до срабатывания события <strong>Room End</strong>. Повторная активация <em>требует полного шага игры</em>, поэтому использование события <strong>Room End</strong> для этого не работает, так как не дает игре полного шага для повторной активации объекта, поэтому необходимо помнить об этом при использовании деактивации вместе с постоянными объектами и планировать код соответствующим образом.
      </p>
    </div>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>Использует физику</strong>: Когда вы устанавливаете флажок Uses Physics, вы сообщаете <span data-keyref="GameMaker Name">GameMaker</span>, что этот объект должен быть частью физического мира (как установлено в<a href="Rooms.htm">редакторе комнат</a> <strong></strong><a href="Rooms.htm"></a>). Отметив этот флажок, вы также откроете следующее окно, в котором можно определить физические свойства всех экземпляров этого объекта. Более подробную информацию об этом можно найти в разделе <a href="Object_Properties/Physics_Objects.htm">Физические объекты</a>.</li>
      <li class="dropspot"><strong>Managed</strong>: Должен ли этот объект быть управляемым при использовании <a href="../GameMaker_Language/GML_Reference/Rollback/Rollback_Multiplayer.htm">Rollback Multiplayer.</a> Состояние управляемого объекта может быть <i>откатано</i>, и на нем могут быть запущены предсказания. См. раздел " <a data-xref="{text}" href="../GameMaker_Language/GML_Reference/Rollback/Rollback_System.htm#h2">Управляемые объекты</a>".</li>
    </ul>
  </div>
  <p> </p>
  <p>Последнюю часть редактора объектов занимают различные <strong>Опции</strong> объектов, каждая из которых рассматривается на отдельной странице, ссылка на которую приведена ниже:</p>
  <ul class="colour">
    <li><a href="Object_Properties/Object_Events.htm">События объекта</a></li>
    <li><a href="Object_Properties/Parent_Objects.htm">Родительские объекты</a></li>
    <li><a href="Object_Properties/Physics_Objects.htm">Физические объекты</a></li>
    <li><a href="Object_Properties/Object_Variables.htm">Объектные переменные</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="The_Asset_Editors.htm">Редакторы активов</a></div>
        <div style="float:right">Следующий: <a href="Paths.htm">Пути</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
Object Editor
Objects
-->
  <!-- TAGS
object_editor
-->
</body>
</html>