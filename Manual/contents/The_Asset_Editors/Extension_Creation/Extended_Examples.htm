<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Примеры источников</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Page containing extended examples for extensions" />
  <meta name="rh-index-keywords" content="Source Extension Examples" />
  <meta name="search-keywords" content="source android ios extensions native" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Примеры источников</h1>
  <p>Эта страница содержит примеры и информацию об исходном коде расширений для <span class="notranslate">Android</span> и <span class="notranslate">iOS</span>, чтобы помочь вам создать собственные нативные расширения для этих платформ.</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Android (базовый пример)</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p>Наш пример расширения для <span class="notranslate">Android</span> будет содержать функции, выполняющие следующие действия:</p>
    <ul class="dropspotlist">
      <li>Возвращает два числа, сложенные вместе</li>
      <li>Возвращает строку, состоящую из входной строки и значения</li>
      <li>Возвращает строку, состоящую из двух входных строк</li>
      <li>Запуск события <a href="../Object_Properties/Async_Events/Social.htm">Async - Social</a> и заполнение значений в его карте <span class="inline">async_load</span>.</li>
    </ul>
    <p>Это расширение будет использовать файл <span class="inline">.java</span>, содержимое которого приведено ниже (нажмите, чтобы открыть):</p>
    <p class="note"><a data-height="800" data-rhwidget="HyperlinkPopover" data-width="1000" href="Source_Files/GenericTest.htm">GenericTest.java</a></p>
    <p>Чтобы добавить такой файл в ваше расширение, вам нужно зайти в его <a href="Android_Extensions.htm">свойства Android</a> и сначала ввести имя класса (в данном примере &quot;GenericTest&quot;), затем нажать на &quot;Add Source&quot; и выбрать файл <span class="inline">.java</span>. Это добавит выбранный файл в каталог вашего проекта - вы можете щелкнуть правой кнопкой мыши на вашем расширении, выбрать &quot;Открыть в проводнике&quot; и увидеть там исходные файлы.</p>
    <p>Теперь вы можете добавить новый файл-заполнитель в ваше расширение и создать внутри него функции со следующими свойствами:</p>
    <ul class="dropspotlist">
      <li><em>функция / внешнее имя:</em><span><span> </span></span><span class="inline">AddTwoNumbers</span><br>
        <em>помощь:</em><span><span> </span></span><span class="inline">AddTwoNumbers(value1, value2)</span><br>
        <em>аргументы:</em><span><span> </span></span><span class="inline">double, </span><span class="inline">double</span><br>
        <em>тип возврата:</em><span><span> </span></span><span class="inline">double</span>
      </li>
      <li><em>функция / внешнее имя:</em><span> </span><span class="inline">HowManyObjects</span><br>
        <em>помощь:</em><span><span> </span></span><span class="inline">HowManyObjects(value1, value2, string)</span><br>
        <em>аргументы:</em><span><span> </span></span><span class="inline">double, </span><span class="inline">double, </span><span class="inline">string</span><br>
        <em>тип возврата:</em><span><span> </span></span><span class="inline">string</span>
      </li>
      <li><em>функция / внешнее имя:</em><span><span> </span></span><span class="inline">BuildAString</span><br>
        <em>помощь:</em><span><span> </span></span><span class="inline">BuildAString(string1, string2)</span><br>
        <em>аргументы:</em><span><span> </span></span><span class="inline">string, </span><span class="inline">string</span><br>
        <em>тип возврата:</em><span><span> </span></span><span class="inline">string</span>
      </li>
      <li><em>функция / внешнее имя:</em><span><span> </span></span><span class="inline">ReturnAsync</span><br>
        <em>помощь:</em><span><span> </span></span><span class="inline">ReturnAsync(value1, value2)</span><br>
        <em>аргументы:</em><span><span> </span></span><span class="inline">double,</span><span> </span><span class="inline">double</span><br>
        <em>тип возврата:</em><span><span> </span></span><span class="inline">double</span>
      </li>
    </ul>
    <p>Вот пример функции <span class="inline">AddTwoNumbers()</span>:</p>
    <p><img>Теперь вы можете вызывать эти функции из кода вашей игры и использовать их как любую другую встроенную функцию:</p>
    <p class="code">var result1 = string(AddTwoNumbers(irandom(100), 50));<br />
      var result2 = BuildAString(&quot;Hello&quot;, &quot;World&quot;);<br />
      var result3 = HowManyObjects(irandom(1000), irandom(1000), &quot;Targets&quot;);<br />
      ReturnAsync(irandom(1000), irandom(1000));</p>
    <p>Функция <span class="inline">ReturnAsync()</span> вызовет событие <a href="../Object_Properties/Async_Events/Social.htm">Async - Social</a>, поэтому вам нужно будет добавить это событие в ваш объект и прочитать данные из его карты <span class="inline">async_load</span> (которая заполняется исходным кодом расширения, приведенным выше).</p>
    <p class="code">var type = async_load[? &quot;type&quot;];<br />
      <br />
      if (type == &quot;finished&quot;)<br />
      {<br />
          var result4 = &quot;value1: &quot; + string(async_load[? &quot;argument0&quot;]) + &quot;, &quot;;<br />
          result4 += &quot;value2: &quot; + string(async_load[? &quot;argument1&quot;]);<br />
      }
    </p>
    <p> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">iOS (базовый пример)</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p>Пример, приведенный для <span class="notranslate">iOS</span>, такой же, как и пример <span class="notranslate">Android</span>, приведенный выше; отличаются только исходные файлы, которые мы рассмотрим в этом разделе.</p>
    <p>Расширения iOS используют файлы <span class="inline">.h</span> и <span class="inline">.mm</span>, содержимое которых приведено ниже (нажмите, чтобы открыть):</p>
    <p class="note"><a data-height="800" data-rhwidget="HyperlinkPopover" data-width="1000" href="Source_Files/GenericTest-iOS.htm">GenericTest <span class="notranslate">iOS</span> Исходные файлы</a></p>
    <p>Чтобы добавить эти файлы в ваше расширение, сначала нужно зайти в его <a href="iOS_Extensions.htm">свойства iOS</a> и ввести имя класса (в данном примере &quot;GenericTest&quot;). Затем вы можете использовать либо опцию &quot;Enter framework path&quot; (если файлы присутствуют на вашей машине <span class="notranslate">macOS</span>, используемой для сборки), либо опцию &quot;Add Source&quot; (если они находятся на вашей машине разработки); независимо от того, какой вариант вы используете, вам нужно будет указать их на каталог, содержащий ваши файлы <span class="inline">.h</span> и <span class="inline">.mm</span>.</p>
    <p>Вы можете добавить эти исходные файлы в то же расширение, которое было создано в предыдущем разделе для <span class="notranslate">Android</span>, что означает, что любые функции, уже определенные в этом расширении, теперь будут работать и на <span class="notranslate">iOS</span> (учитывая, что <em>внешние имена</em> всех функций на <span class="notranslate">Android</span> и <span class="notranslate">iOS</span> одинаковы). Если вы создаете новое расширение, вы можете просто создать функции таким же образом, как описано ранее.</p>
    <p> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">Android (обратные вызовы)</a></p>
  <div class="droptext" data-targetname="drop-down5">
    <p>Вы можете использовать следующие функции обратного вызова в своих файлах расширения <span class="inline">.java</span>:</p>
    <p class="code">public void onStart()<br />public void onRestart()<br />public void onStop()<br />public void onDestroy()<br />public void onPause()<br />public void onResume()<br />public void onActivityResult(int requestCode, int resultCode, Intent data)<br />public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults)<br />public void onNewIntent(android.content.Intent newIntent)<br />public void onWindowFocusChanged(boolean hasFocus)<br />public void onConfigurationChanged(Configuration newConfig)<br /></p>
    <p><br /></p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">iOS (обратные вызовы)</a></p>
  <div class="droptext" data-targetname="drop-down7">
    <p>Вы можете использовать следующие функции обратного вызова в своих файлах расширения <span class="inline">.mm</span>:</p>
    <p class="code">-(void) Init<br />
      -(void) onLaunch:(NSDictionary*)launchOptions<br />
      -(void) onResume<br />
      -(void) onPause<br />
      -(void) applicationDidEnterBackground:(UIApplication *)application<br />
      -(void) applicationWillEnterForeground:(UIApplication *)application<br />
      -(void) onStop<br />
      -(void) applicationProtectedDataDidBecomeAvailable:(UIApplication *)application<br />
      -(void) applicationProtectedDataWillBecomeUnavailable:(UIApplication *)application<br />
      -(void) applicationDidReceiveMemoryWarning:(UIApplication *)application<br />
      -(void) applicationSignificantTimeChange:(UIApplication *)application<br />
      -(void) application:(UIApplication *)application willEncodeRestorableStateWithCoder:(NSCoder *)coder<br />
      -(void) application:(UIApplication *)application didDecodeRestorableStateWithCoder:(NSCoder *)coder<br />
      -(void) application:(UIApplication *)application didUpdateUserActivity:(NSUserActivity *)userActivity<br />
      -(void) application:(UIApplication *)application didFailToContinueUserActivityWithType:(NSString *)userActivityType error:(NSError *)error<br />
      -(void) application:(UIApplication *)application handleWatchKitExtensionRequest:(NSDictionary *)userInfo reply:(void (^)(NSDictionary *replyInfo))reply<br />
      -(void) applicationShouldRequestHealthAuthorization:(UIApplication *)application<br />
      -(void) openURL:(NSURL *)url sourceApplication:(NSString *) sourceApplication annotation:(id)annotation<br />
      -(void) application:(UIApplication *)application userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)cloudKitShareMetadata</p>
    <p> </p>
  </div>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../Extensions.htm">Редактор расширений</a></div>
        <div style="float:right">Следующее: <a href="Creating_An_Extension.htm">Создание расширения</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
Android Extensions
iOS Extensions
Source
Native
java
mm
h
-->
  <!-- TAGS
source_extensions
-->
</body>
</html>