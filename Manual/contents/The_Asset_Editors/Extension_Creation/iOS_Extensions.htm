<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Расширения для iOS / tvOS</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how iOS extensions work" />
  <meta name="rh-index-keywords" content="Extensions - Creating iOS / tvOS Extensions" />
  <meta name="search-keywords" content="iOS Extensions,iOS, tvOS Extensions, tvOS" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Расширения для iOS / <span class="notranslate">tvOS</span> </h1>
  <p>Чтобы создать расширение для <span class="notranslate">iOS</span> или tvOS, необходимо сделать это в двух частях. Первая часть заключается в добавлении самого расширения вместе с необходимыми файлами, а вторая - в создании функций и макросов/констант, которые требуются расширению.</p>
  <p>Функции и константы добавляются с помощью <strong>файлов-заместителей </strong>, чтобы сгруппировать их вместе, поэтому вы добавляете файл-заместитель, а затем определяете функции и макросы, как описано в <a href="Creating_An_Extension.htm">данном</a> разделе. Чтобы добавить остальные файлы, необходимо сначала установить флажок <em>iOS </em>и/или <em>tvOS </em>в разделе " <strong>Дополнительные возможности"</strong> редактора, чтобы открыть соответствующее окно <strong>свойств расширения</strong> (на рисунке ниже показано окно свойств <span class="notranslate">iOS</span>, но окно <span class="notranslate">tvOS</span> точно такое же):</p>
  <p class="dropspot"><img alt="iOS Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS.png" /></p>
  <p>Здесь вы можете указать следующие данные:</p>
  <ul class="colour">
    <li class="dropspot"><strong>Флаги компилятора / флаги компоновщика</strong>: Некоторые фреймворки и сторонние SDK требуют для работы добавления дополнительных флагов компоновщика и флагов компилятора, которые можно указать здесь (подробности см. в документации, прилагаемой к SDK или фреймворку).</li>
    <li class="dropspot"><strong>Имя класса</strong>: Ваше расширение может иметь несколько классов, причем каждый класс будет иметь свои собственные функции и константы, поэтому вы должны дать ему имя, отражающее его назначение.</li>
    <li class="dropspot"><strong>App Delegate Class Name</strong>: Имя вашего пользовательского класса делегата приложения. Установка этого параметра позволяет расширению переопределять/расширять основные функции приложения. Чтобы использовать эту функцию, вам нужно сделать следующее:
      <ol>
        <li>Убедитесь, что исходные файлы делегата имеют то же имя, что и класс делегата (например, <span class="inline">@interface MyCustomAppDelegate</span> должен быть определен в &quot; <span class="inline">MyCustomAppDelegate.h</span>&quot;).</li>
        <li>Добавьте переменную окружения <span class="inline">${YYExtAppDelegateIncludes}</span> в верхнюю часть заголовочного файла делегата вашего приложения. Она будет заменена во время компиляции соответствующими включаемыми файлами для родительского класса делегата.</li>
        <li>Используйте переменную окружения <span class="inline">${YYExtAppDelegateBaseClass}</span> в качестве базового класса для вашего пользовательского делегата приложения. Она будет заменена во время компиляции на правильный базовый класс делегата.<br>
          <br>
          Чтобы ваше расширение работало с другими расширениями, использующими пользовательские делегаты приложений, вы должны вызывать любые методы базового класса из переопределенных методов вашего дочернего класса. Перед вызовом метода суперкласса необходимо убедиться, что он реализован в иерархии классов, чтобы избежать ошибок, например:
        </li>
      </ol>
     <p class="code">- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br />
        {<br />
            // Check if any superclasses implement this method and call it<br />
            if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br />
              return [super application:application willFinishLaunchingWithOptions:launchOptions];<br />
            else<br />
                return TRUE;<br />
        }</p>
    </li>
    <li class="dropspot"><strong>Системные фреймворки</strong>: Здесь вы можете добавить любые <span class="notranslate">iOS</span> системные <a class="glossterm" data-glossterm="структура" href="#">фреймворки</a>в ваше расширение. Они добавляются нажатием кнопки <img>, которая добавит фреймворк, который затем можно отредактировать, дважды щелкнув на нем <img>. Вы можете узнать больше о доступных системных фреймворках <a href="https://developer.apple.com/documentation/">здесь</a>. Чтобы удалить системный фреймворк, просто выберите его и нажмите кнопку <img>.<br>
      <br>
      <img>Вы можете установить флажок для фреймворка, чтобы отметить его как &quot;<strong>Weak Reference</strong>&quot;. Это добавит его в раздел &quot;<strong>Build Phases -&gt; Link Binary with Libraries</strong>&quot; на сайте <span class="notranslate">Xcode</span> как &quot;<strong>Optional</strong>&quot; фреймворк, в отличие от &quot;<strong>Required</strong>&quot; фреймворка (который используется по умолчанию).
    </li>
    <li class="dropspot"><strong>Сторонние фреймворки + комплекты</strong>: Этот раздел предназначен для добавления сторонних фреймворков и пакетов SDK. Как и в случае с системными фреймворками, для их добавления нажмите кнопку <img>, а для редактирования дважды щелкните <img>, а выделив их и нажав <img>, удалите их (см. документацию, прилагаемую к выбранному вами SDK, для получения информации о названии фреймворка).<br>
      <br>
      Здесь вы можете выбрать: <strong>не встраивать</strong> фреймворк, <strong>встраивать и подписывать</strong> его или <strong>встраивать его без подписи</strong>:<br>
      <img>Это отражает ту же опцию для фреймворка, добавленного в разделе &quot;<strong>Фреймворки, библиотеки и встроенное содержимое</strong>&quot; на <span class="notranslate">Xcode</span>.
    </li>
    <li class="dropspot"><strong>Введите путь к фреймворку на Mac</strong>: Если вы хотите добавить фреймворк в расширение, файлы которого присутствуют на Mac, используемом для сборки вашего проекта, вы можете ввести путь к этому фреймворку (на машине сборки) в это поле, а затем нажать кнопку <img>, чтобы добавить его.<br>
      <br>
      Путь должен указывать на файл <span class="inline">.framework</span>, который будет сжат как <span class="inline">.zip</span> и помещен в папку <span class="inline">iOSSourceFromMac</span> в каталоге расширения; вы можете легко открыть его в любое время, щелкнув правой кнопкой мыши <img> на расширении и выбрав <em>Open in Explorer</em>.
    </li>
    <li class="dropspot"><strong>Добавить источник</strong>: Вы можете использовать этот пункт для добавления исходных файлов, необходимых для работы вашего расширения. Добавленные файлы будут храниться в папке <span class="inline">iOSSource</span> в каталоге вашего расширения.</li>
    <li class="dropspot"><b>Инъекция кода</b>: Здесь вы можете добавить любой код, который будет внедрен (добавлен) в ваше приложение <span class="notranslate">iOS</span>, когда ваша игра будет собрана для тестирования или финального релиза. Убедитесь, что вы тщательно проверили этот параметр (и ваши разрешения) перед отправкой игр в магазин, так как неправильные настройки приведут к тому, что ваша игра не будет отправлена.</li>
  </ul>
  <h2>Инъекция кода</h2>
  <p>Code Injection можно использовать для расширений iOS/tvOS таким же образом, как описано на странице <span class="notranslate">Android</span> Extensions: см. <a data-xref="{text}" href="Android_Extensions.htm#h">Code Injection</a>.</p>
  <p>Следующие теги доступны для платформ <span class="notranslate">iOS</span> и <span class="notranslate">tvOS</span>:</p>
  <p class="code">YYIosPlist<br />
    YYIosEntitlements<br />
    YYIosCocoaPods<br />
    YYIosCocoaPodsDependencies<br />
    YYIosBuildRules<br />
    YYIosBuildSettingsInjection<br />
    YYIosScriptPhase<br />
    YYIosCFBundleURLSchemesArray<br />
    YYIosLSApplicationQueriesSchemesArray<br />
    <br />
    YYTvosPlist<br />
    YYTvosEntitlements<br />
    YYTvosCocoaPods<br />
    YYTvosCocoaPodsDependencies<br />
    YYTvosBuildRules<br />
    YYTvosBuildSettingsInjection<br />
    YYTvosScriptPhase<br />
    YYTvosCFBundleURLSchemesArray<br />
    YYTvosLSApplicationQueriesSchemesArray
  </p>
  <p>Место выполнения, куда внедряется код, зависит от типа тега:</p>
  <table>
    <colgroup>
      <col style="width: 174px;" />
      <col style="width: 760px;" />
    </colgroup>
    <tbody>
      <tr>
        <th style="">Тип тега</th>
        <th style="">Путь инъекции</th>
      </tr>
      <tr>
        <td style=""><b>Выплаты</b></td>
        <td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\<br>
         <span>${YYXCodeProjName}.entitlements</span>
        </td>
      </tr>
      <tr>
        <td style=""><b>info.plist</b></td>
        <td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\<br>
          Вспомогательные файлы\${YYXCodeProjName}-Info<span>.plist</span></td>
      </tr>
      <tr>
        <td style=""><strong>infoPlist.strings</strong></td>
        <td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\<br>
          en.lproj\InfoPlist.strings</td>
      </tr>
      <tr>
        <td style=""><strong>project.pbxproj</strong></td>
        <td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}.xcodeproj\<br>
          project.pbxproj</td>
      </tr>
      <tr>
        <td style=""><strong>xcscheme</strong></td>
        <td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}.xcodeproj\<br>
          xcshareddata\xcschemes\${YYXCodeProjName}.xcscheme</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><strong></strong><span class="note">ПРИМЕЧАНИЕ</span> Эти пути указаны только для VM. Для YYC инжектированный код будет находиться в каталоге <span class="inline">{RUNTIME}\yyc\</span>, где пути могут быть эквивалентны или не эквивалентны путям для VM.</p>
  <p>Обратите внимание, что <a href="../../Settings/Game_Options/iOS.htm">для iOS</a> и <a href="../../Settings/Game_Options/tvOS.htm">tvOS</a> существует опция Game Option для добавления файла <span class="inline">Podfile.lock</span> в <span data-keyref="GameMaker Name">GameMaker</span>, который необходим, если вы добавляете <span class="notranslate">CocoaPods</span> Dependencies в этом разделе.</p>
  <h2>Дополнительная информация</h2>
  <p>Если в ваше расширение были добавлены какие-либо системные или сторонние фреймворки, они теперь будут перечислены в окне <strong>свойств расширения </strong>, и для каждого из них будет установлен флажок. Если вы отметите флажок, вы включите слабую связь, что будет полезно, если вам понадобится &quot;переопределить&quot; какой-либо символ из включенной библиотеки своим собственным значением, но следует отметить, что это замедлит процесс связывания.</p>
  <p>Информацию о создании собственных расширений для <span class="notranslate">iOS</span> смотрите в разделе <a href="Extended_Examples.htm">Примеры исходных</a> текстов; а информацию об использовании <span class="notranslate">CocoaPods</span> в расширениях смотрите в следующем руководстве:</p>
  <ul class="colour">
    <li><a href="https://help.yoyogames.com/hc/en-us/articles/360008958858">iOS и tvOS: использование какао-подборок</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../Extensions.htm">Редактор расширений</a></div>
        <div style="float:right">Следующий: <a href="Extended_Examples.htm">Примеры источников</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
iOS Extensions
tvOS Extensions
-->
  <!-- TAGS
extensions_ios
-->
</body>
</html>