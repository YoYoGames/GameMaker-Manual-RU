<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Исходные файлы GenericTest iOS</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <meta name="topic-comment" content="The GenericTest.h and GenericTest.mm source files" />
  <meta name="template" content="../../../assets/masterpages/Manual_Page.htt" />
</head>
<body>
  <h1>GenericTest <span class="notranslate">iOS</span> Исходные файлы</h1>
  <p class="code_heading">GenericTest.h</p>
  <p class="code">@interface GenericTest : NSObject<br />
    {<br />
    }<br />
    <br />
    - (double) AddTwoNumbers:(double)arg0 Arg2:(double)arg1;<br />
    - (NSString *) BuildAString:(char *)arg0 Arg2:(char *)arg1;<br />
    - (NSString *) HowManyObjects:(double)arg0 Arg2:(double)arg1 Arg3:(char *)arg2;<br />
    - (void)ReturnAsync:(double)arg0 Arg2:(double)arg1;<br />
    <br />
    @end
  </p>
  <p class="code_heading">GenericTest.mm</p>
  <p class="code">#import &quot;GenericTest.h&quot;<br />
    #include<br />
    #include<br />
    <br />
    @implementation GenericTest<br />
    <br />
    const int EVENT_OTHER_SOCIAL = 70;<br />
    extern int CreateDsMap( int _num, ... );<br />
    extern void CreateAsynEventWithDSMap(int dsmapindex, int event_index);<br />
    <br />
    - (void)ReturnAsync:(double)arg0 Arg2:(double)arg1<br />
    {<br />
        <br />
        int dsMapIndex = CreateDsMap(3,<br />
                        &quot;type&quot;, 0.0, &quot;finished&quot;,<br />
                        &quot;argument0&quot;, arg0, (void*)NULL,<br />
                        &quot;argument1&quot;, arg1, (void*)NULL<br />
                        );<br />
        CreateAsynEventWithDSMap(dsMapIndex, EVENT_OTHER_SOCIAL);<br />
    }<br />
    <br />
    - (double) AddTwoNumbers:(double)arg0 Arg2:(double)arg1<br />
    {<br />
        double value = arg0 + arg1;<br />
         NSLog(@&quot;yoyo: %f + %f = %f&quot;, arg0, arg1, value); <br />
    <br />
         return value;<br />
    }<br />
    <br />
    - (NSString *) BuildAString:(char *)arg0 Arg2:(char *)arg1<br />
    {<br />
        NSString *value = [NSString stringWithFormat:@&quot;%s%s&quot;,arg0,arg1];//[arg0 stringByAppendingString:arg1];<br />
             NSLog(@&quot;yoyo: %s + &quot; &quot; + %s = %@&quot;, arg0, arg1, value); <br />
    <br />
             return value;<br />
    }<br />
    <br />
    - (NSString *) HowManyObjects:(double)arg0 Arg2:(double)arg1 Arg3:(char *)arg2<br />
    {<br />
        double value = arg0 + arg1;<br />
        NSLog(@&quot;yoyo: %f + %f = %f&quot;, arg0, arg1, value); <br />
        NSString *arg2ns = [NSString stringWithFormat:@&quot;%s&quot;,arg2];<br />
    <br />
        NSString *myString = [NSString stringWithFormat:@&quot;%f %@&quot;, value,arg2ns];<br />
            <br />
        <br />
        NSLog(@&quot;yoyo: %@&quot;, myString); <br />
    <br />
        return myString;<br />
    }<br />
    <br />
    @end
  </p>
</body>
</html>