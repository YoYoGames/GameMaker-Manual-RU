<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Сборка через командную строку</title>
    <meta name="generator" content="Adobe RoboHelp 2020" />
    <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
    <script src="../assets/scripts/main_script.js"></script>
    <meta name="rh-authors" content="Gurpreet S. Matharoo" />
    <meta name="topic-comment" content="Page that explains how your project can be compiled and tested through a CLI
" />
    <meta name="rh-index-keywords" content="Building via Command Line" />
    <meta name="search-keywords" content="build, command line, cli, ci, igor, continuous integration" />
  </head>
  <body><!--<div class="body-scroll" style="top: 150px;">-->
    <h1 id="h">Сборка через командную строку</h1>
    <p class="note"><span class="note"><strong>ПРИМЕЧАНИЕ</strong></span> Сборка исполняемых пакетов через командную строку доступна только для определенных лицензий, поэтому посмотрите на <a href="https://help.yoyogames.com/hc/en-us/articles/115002637011" title="Which Licence Is Right For Me?">этой странице</a>, чтобы узнать, поддерживает ли это ваша лицензия. Для всех остальных лицензий вы можете запускать и отлаживать свой проект через командную строку без каких-либо ограничений.</p>
    <p>В дополнение к сборке проекта через <span class="notranslate">IDE</span>, <span data-keyref="GameMaker Name"><span data-keyref="GameMaker Name">GameMaker</span></span> позволяет создавать проекты через интерфейс командной строки, используя множество опций и команд, описанных ниже. Вы можете использовать это для сборки проекта, его тестирования и развертывания на нескольких платформах с помощью одного пакетного файла, а также для настройки непрерывной интеграции с помощью сервера автоматизации, такого как <a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a>.</p>
    <p>Это делается путем запуска исполняемого файла <span class="inline">Igor.exe</span>, находящегося в вашей папке времени выполнения, и передачи опций и команд, перечисленных на этой странице. На компьютере <span class="notranslate">Windows</span> он будет находиться в папке <span class="inline">C:\ProgramData\GameMaker\Cache\runtimes\runtime-[version]\bin</span>, а на Mac - в папке <span class="inline">/Users/Shared/GameMaker/Cache/runtimes/runtime-[version]/bin</span>.</p>
    <p> </p>
    <h1>Игорь CI Билдинг</h1>
    <h2>Настройка</h2>
    <p>Чтобы настроить сборку CI на машине, вам нужно сделать следующее:</p>
    <ul class="colour">
      <li>Установите <span data-keyref="GameMaker Name">GameMaker</span> и необходимые программы выполнения</li>
      <li>Сборка проектов через <span class="notranslate">IDE</span> для требуемых целей, чтобы убедиться, что они работают нормально</li>
      <li>Тестовая сборка из командной строки (см. примеры ниже)</li>
      <li>Создайте пакетный файл, который будет выполнять сборку, требуемую в рамках задачи (проверьте это из командной строки)</li>
      <li>Настройте среду CI (это зависит от того, как вы собираетесь собирать свои игры); мы предлагаем использовать <a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a></li>
      <li>Настройте задачу CI и убедитесь, что все необходимые условия настроены (например, синхронизация контроля исходных текстов с вашим проектом).</li>
      <li>Подключите пакетный файл к задаче CI и проведите тестирование в среде Jenkins</li>
    </ul>
    <h2>Примечания</h2>
    <ul class="colour">
      <li>Некоторые платформы могут иметь проблемы с длиной путей к файлам, в этом случае вам потребуется <span class="inline"><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/subst" title="subst documentation">subst</a></span> виртуальных дисков на вашем ПК (как это делает <span class="notranslate">IDE</span> ), прежде чем передавать их в команды.</li>
      <li>Некоторые платформы (в частности, <span class="notranslate">Android</span>) автоматически <span class="inline">subst</span> диск во время сборки, поэтому в случае ошибки вам может потребоваться вручную очистить его.</li>
    </ul>
    <h2>Опции</h2>
    <p>Ниже перечислены опции, которые можно использовать при запуске исполняемого файла <strong>Igor </strong>:</p>
    <table>
      <colgroup>
        <col style="width: 316px;" />
        <col />
      </colgroup>
      <tbody>
        <tr>
          <th style="">Вариант</th>
          <th style="">Описание</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Папка пользователя, используемая для получения информации о лицензии
            <br>
            <br>
            На сайте <span class="notranslate">Windows</span> это будет: <span class="inline"><span>%appdata%\GameMaker\&lt;user_name&gt;_&lt;number&gt;</span>
            <br>
            На <span class="notranslate">macOS</span> это будет: <span class="inline"><span>~/.config/GameMaker/&lt;user_name&gt;_&lt;number&gt;</span> </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">Корневая папка программы выполнения</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/project=[project_YYP_file]</span></td>
          <td style="">Полный путь к файлу проекта <span class="inline">.yyp</span>.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/cache=[cache_dir_path]</span></td>
          <td style="">Используемый каталог кэша (по умолчанию <span class="inline">\cache</span> в текущем каталоге).</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/temp=[temp_dir_path]</span></td>
          <td style="">Временный каталог, который будет использоваться (по умолчанию <span class="inline">c:\temp</span>).</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/of=[output_folder_filename]</span></td>
          <td style="">Выходной каталог, куда будет извлечена сборка; не указывайте только каталог, так как последующая запись всегда удаляется (например: указание <span class="inline">d:\game\output</span> поместит файлы игры в <span class="inline">d:\game</span>).
            <br>
            <br>
            Если этот параметр не указан, в той же директории, где находится файл <span class="inline">.bat</span> (или откуда запущена команда), будет создан каталог с именем <span class="inline">output</span>, содержащий извлеченные файлы сборки. </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/tf=[target_file]</span></td>
          <td style="">Фактическое имя файла создаваемого ZIP-файла или программы установки NSIS</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/config=[configName]</span></td>
          <td style="">Имя используемой конфигурации (по умолчанию <span class="inline">Default</span>).</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/runtime=YYC|VM</span></td>
          <td style="">Тип вывода (либо YYC, либо VM), по умолчанию VM</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/j=[NumCPUs]</span></td>
          <td style="">Количество процессоров, используемых в процессе сборки</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name_from_IDE]</span></td>
          <td style="">Имя целевого устройства, установленное в IDE</td>
        </tr>
      </tbody>
    </table>
    <h2>Примеры</h2>
    <p>Ниже приведены примеры команд сборки для всех платформ:</p>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#">Opera GX</a></p>
    <div class="droptext" data-targetname="drop-down12">
      <p>Очистка проекта Opera GX:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Clean</p>
      <p>Запуск Opera GX:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Run</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Windows</a></p>
    <div class="droptext" data-targetname="drop-down">
      <p>Уборка <span class="notranslate">Windows</span> проект:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>Построение VM для <span class="notranslate">Windows</span> -- <span class="inline">Run</span>, <span class="inline">PackageZip </span>и <span class="inline">PackageNsis</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageNsis</p>
      <p>Создание YYC для Windows - <span class="inline">Run</span>, <span class="inline">PackageZip </span>и <span class="inline">PackageNsis</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /platform=YYC -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageNsis</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">macOS</a></p>
    <div class="droptext" data-targetname="drop-down1">
      <p>Уборка <span class="notranslate">macOS</span> проект:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Mac Clean</p>
      <p>Создание виртуальной машины для <span class="notranslate">macOS</span> на компьютере Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Mac Package</p>
      <p><strong>Обратите внимание</strong>, что на Mac для запуска Игоря необходимо использовать mono, поэтому перед всеми командами нужно писать <span class="inline"><strong>mono</strong></span>, например: <span class="inline">mono Igor.exe [options]</span></p>
      <p>Создание виртуальной машины для <span class="notranslate">macOS</span> на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Mac Package</p>
      <p>Создание YYC для <span class="notranslate">macOS</span> на компьютере Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Mac Package</p>
      <p>Построение YYC для <span class="notranslate">macOS</span> во время работы на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Mac Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Linux / Ubuntu</a></p>
    <div class="droptext" data-targetname="drop-down2">
      <p>Уборка <span class="notranslate">Linux</span> проект:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Linux Clean</p>
      <p>Создание виртуальной машины для <span class="notranslate">Linux</span> на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Linux Package</p>
      <p>Построение YYC для <span class="notranslate">Linux</span> во время работы на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Linux Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">HTML5</a></p>
    <div class="droptext" data-targetname="drop-down3">
      <p>Чистка проекта HTML5:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- HTML5 Clean</p>
      <p>Создание папки HTML5 (обязательно укажите целевую папку с помощью <span class="inline">/tf)</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_folder] -- HTML5 folder</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">iOS</a></p>
    <div class="droptext" data-targetname="drop-down4">
      <p>Создание виртуальной машины для <span class="notranslate">iOS</span> на компьютере Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- ios Package</p>
      <p>Создание виртуальной машины для <span class="notranslate">iOS</span> на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ios Package</p>
      <p>Создание YYC для <span class="notranslate">iOS</span> на компьютере Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- ios Package</p>
      <p>Построение YYC для <span class="notranslate">iOS</span> во время работы на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ios Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">Android</a></p>
    <div class="droptext" data-targetname="drop-down5">
      <p>Уборка <span class="notranslate">Android</span> проект:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>Создание <span class="notranslate">Android</span> APK с помощью VM:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Android Package</p>
      <p>Создание <span class="notranslate">Android</span> APK с помощью YYC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Android Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">tvOS</a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p>Уборка <span class="notranslate">tvOS</span> проект:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- tvos Clean</p>
      <p>Создание виртуальной машины для <span class="notranslate">tvOS</span> на компьютере Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- tvos Package</p>
      <p>Создание виртуальной машины для <span class="notranslate">tvOS</span> на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- tvos Package</p>
      <p>Создание YYC для <span class="notranslate">tvOS</span> на компьютере Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- tvos Package</p>
      <p>Построение YYC для <span class="notranslate">tvOS</span> во время работы на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- tvos Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">PS4</a></p>
    <div class="droptext" data-targetname="drop-down7">
      <p>Проект "Очистка PS4":</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps4 Clean</p>
      <p>Сборка VM для PS4 на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps4 Package</p>
      <p>Создание YYC для PS4 во время работы на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps4 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#">PS5</a></p>
    <div class="droptext" data-targetname="drop-down10">
      <p>Чистка проекта PS5:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps5 Clean</p>
      <p>Создание виртуальной машины для PS5 на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps5 Package</p>
      <p>Создание YYC для PS5 во время работы на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps5 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">Xbox One</a></p>
    <div class="droptext" data-targetname="drop-down8">
      <p>Чистка проекта Xbox One:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOne Clean</p>
      <p>Создание VM для Xbox One на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOne Package</p>
      <p>Создание YYC для Xbox One во время работы на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOne Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#">Xbox Series X/S</a></p>
    <div class="droptext" data-targetname="drop-down11">
      <p>Чистка проекта Xbox Series X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOneSeriesXS Clean</p>
      <p>Создание виртуальной машины для Xbox Series X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
      <p>Создание YYC для Xbox Series X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#">Переключатель</a></p>
    <div class="droptext" data-targetname="drop-down9">
      <p>Уборка <span class="notranslate">Switch</span> проект:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Switch Clean</p>
      <p>Создание виртуальной машины для <span class="notranslate">Switch</span> на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Switch Package</p>
      <p>Создание виртуальной машины для YYC на ПК:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Switch Package</p>
    </div>
    <p> </p>
    <h1>Время выполнения Игоря</h1>
    <p>Здесь перечислены опции, которые могут быть использованы при работе с программой Igor:</p>
    <table>
      <tbody>
        <tr>
          <th style="">Вариант</th>
          <th style="">Описание</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Установите пользовательскую папку, используемую для получения информации о лицензии, чтобы <span data-keyref="GameMaker Name">GameMaker</span> знал, какие модули могут быть установлены</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">Установите прямой путь к файлу лицензии, может использоваться как альтернатива установке пользовательской папки (<span class="inline">/uf</span>).</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/ru=[runtime_url]</span></td>
          <td style="">Установите URL для получения информации о времени выполнения (по умолчанию используется стабильный выпуск).</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">Установите локальную папку установки времени выполнения для списка установленных времен выполнения или установки новых времен выполнения</td>
        </tr>
      </tbody>
    </table>
    <p>Здесь перечислены команды, которые можно использовать в среде выполнения Igor:</p>
    <h4>Синтаксис:</h4>
    <p class="code">Igor.exe [command]</p>
    <table>
      <colgroup>
        <col style="width: 237px;" />
        <col style="width: 537px;" />
      </colgroup>
      <tbody>
        <tr>
          <th style="">Команда</th>
          <th style="">Описание</th>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime List</span></td>
          <td style="">Перечисляет версии, доступные в фиде (номер версии, дата/время сборки).</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime ListInstalled [directory]</span></td>
          <td style="">Перечисляет исполнительные программы, доступные в текущей папке (<span class="inline">directory</span>= полный путь к папке).
            <br>
            <br>
            Вы можете указать каталог для поиска, но если он не указан, то по умолчанию будет использоваться текущий каталог.
            <br>
            <br>
            Также проверяется, есть ли внутри каталога файл <span class="inline">receipt.json</span> и папка <span class="inline">manifest</span> (чтобы убедиться, что это действительно среда выполнения). </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Info [version]</span></td>
          <td style="">Выводит информацию о последнем времени выполнения на заданном канале; также требуется файл лицензии для отображения информации о модулях, доступных для пользователя
            <br>
            <br>
            <span class="inline">version</span> может быть либо строкой, используемой для поиска по названиям фидов (например: <span class="inline">&quot;739&quot;</span> покажет информацию для всех сборок, содержащих 739 в номере версии), либо <span class="inline">all</span>, чтобы показать информацию для всех фидов.
            <br>
            <br>
            Будет выведен список модулей с именами файлов <span class="inline">.zip</span> для каждого модуля. </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Install [version]</span></td>
          <td style="">Устанавливает последнюю версию runtime из указанного фида, используя указанный <span class="inline">version</span> в качестве фильтра поиска; если он не указан, по умолчанию устанавливается последняя версия. Он получит все модули, которые есть у пользователя на его лицензии.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Verify [folder=.]</span></td>
          <td style="">Рассчитывает контрольные суммы для всех установленных файлов и сравнивает их с контрольными суммами, записанными в манифесте <span class="inline">folder</span>. Вы можете указать папку для проверки, однако если она не указана, то по умолчанию будет использоваться текущий каталог.
            <br>
            <br>
            При этом будут отмечены все файлы, контрольные суммы которых не совпадают, отсутствующие файлы и файлы, которых не должно быть.
            <br>
            <br>
            Обратите внимание, что сами файлы манифеста не проверяются, и пользователь может изменить файлы манифеста, чтобы они соответствовали установленным. </td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <h1>Игорь Тестинг</h1>
    <p>Вот варианты, которые можно использовать для тестирования ваших сборок с помощью Igor:</p>
    <table>
      <tbody>
        <tr>
          <th style="">Вариант</th>
          <th style="">Описание</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Установите пользовательскую папку, используемую для получения информации о лицензии, чтобы <span data-keyref="GameMaker Name">GameMaker</span> знал, какие модули могут быть установлены</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">Установите прямой путь к файлу лицензии, может использоваться как альтернатива установке пользовательской папки (<span class="inline">/uf</span>).</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/df=[device_file]</span></td>
          <td style="">Установите прямой путь к файлу <span class="inline">devices.json</span>, может использоваться как альтернатива установке пользовательской папки (<span class="inline">/uf</span>).</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/timeout=[number_of_seconds_to_wait]</span></td>
          <td style="">Таймаут, используемый для теста в секундах, по умолчанию 120 секунд; тест будет остановлен по истечении этого таймаута и будет помечен как неудачный</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/waittime=[number_of_seconds_to_wait]</span></td>
          <td style="">Количество секунд ожидания в главном цикле перед объявлением теста пройденным, по умолчанию 30 секунд</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name]</span></td>
          <td style="">Используется для поиска имени устройства в файле <span class="inline">devices.json</span> пользовательской папки.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/target=[list_of_targets]</span></td>
          <td style="">Список целей, разделенный запятыми, в формате <span class="inline">PLATFORM|DEVICE</span>, например: <span class="inline">/target=&quot;Windows|Local,HTML|Firefox&quot;</span>
            <br>
            <br>
            Если вы укажете <strong>all</strong>, тесты будут пытаться запустить для каждого устройства в файле <span class="inline">devices.json</span>. </td>
        </tr>
      </tbody>
    </table>
    <p>Существует одна команда, которую вы можете использовать для запуска тестов с помощью Igor:</p>
    <p class="code">Igor.exe Tests RunTests [test_directory/test_filename]</p>
    <p>Вы должны указать либо каталог тестирования, либо имя файла тестирования.</p>
    <ul class="colour">
      <li>Если это каталог, Игорь будет искать файл с именем <span class="inline">tests.json</span> в каталоге
        <ul>
          <li>Если файл <strong>не найден</strong>, Игорь будет рекурсивно искать файлы <span class="inline">.yyz</span> и <span class="inline">.yyp</span> в каталоге
            <ul>
              <li>Каждый найденный проект будет собран и запущен на Windows.</li>
              <li>Он будет ждать, пока бегунок не дойдет до главного цикла
                <ul>
                  <li>Тест пройден, если проект все еще запущен по истечении времени ожидания.</li>
                  <li>Тест не пройден, если проект не скомпилировался в течение тайм-аута или завершился до истечения времени ожидания.</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>Если <strong>найден</strong> файл <span class="inline">tests.json</span>, Игорь запустит тесты, описанные в этом файле (см. пример ниже).</li>
        </ul>
      </li>
      <li>В качестве альтернативы вы можете указать прямой путь к файлу <span class="inline">tests.json</span> вместо каталога</li>
    </ul>
    <p> </p>
    <h1>Файл Tests.json</h1>
    <h2>Формат</h2>
    <p>Файл <span class="inline">tests.json</span> должен иметь следующий формат:</p>
    <ul class="colour">
      <li>Файл JSON должен содержать массив объектов</li>
      <li>Каждый объект должен описывать один тест
        <ul>
          <li>Объект test должен содержать следующие ключи:
            <ul>
              <li><span class="inline">name</span>: Имя, используемое для сообщения о том, прошел тест или нет.</li>
              <li><span class="inline">path</span>: Путь к файлу или папке <span class="inline">.yyp</span>, <span class="inline">.yyz</span>, <span class="inline">.gml</span>, <span class="inline">.js</span> для теста.</li>
              <li><span class="inline">command</span>: Команда Igor для теста (<span class="inline">Run</span>, <span class="inline">CreatePackage</span> и т.д., как описано выше)</li>
            </ul>
          </li>
          <li>Объект теста может также содержать эти ключи:
            <ul>
              <li><span class="inline">platform</span>: Передается непосредственно в Igor для выполнения теста</li>
              <li><span class="inline">device</span>: Имя устройства из файла <span class="inline">devices.json</span> </li>
              <li><span class="inline">target</span>: Цель в формате &quot;<span class="inline">PLATFORM|TARGET&quot;</span>, например: &quot;<span class="inline">Windows|Local&quot;</span></li>
              <li><span class="inline">timeout</span>: Таймаут для всего теста, включая компиляцию и выполнение; если он превышен, тест будет остановлен и помечен как неудачный.</li>
              <li><span class="inline">waittime</span>: Длительность ожидания после входа в основной цикл для принятия решения о том, прошел ли тест.</li>
              <li><span class="inline">owner</span>: адрес электронной почты пользователя, которому будет отправлено письмо в случае неудачи теста.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
    <h2>Пример</h2>
    <p>Вот пример файла <span class="inline">tests.json</span>:</p>
    <p class="code">[
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Game Idea Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/scratch/GameIdea.yyz&quot;,
      <br/>
      &quot;platform&quot; : &quot;Windows&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;timeout&quot; : &quot;500&quot;,
      <br/>
      &quot;waittime&quot; : &quot;30&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Platformer Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Platformer Game/PlatformerGame.yyp&quot;,
      <br/>
      &quot;target&quot; : &quot;Windows|Local,HTML5|selenium:firefox,PS4|Default&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Puzzle Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Puzzle Game/PuzzleGame.yyp&quot;,
      <br/>
      &quot;platform&quot; : &quot;HTML5&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;device&quot; : &quot;selenium:chrome&quot;
      <br/>
      }
      <br/>
      ]</p>
    <p> </p>
    <p> </p>
    <div class="footer">
      <div class="buttons">
        <div class="clear">
          <div style="float:left">Назад: <a data-xref="{title}" href="Runner_Details/Runner_Details.htm">Бегун и компилятор</a></div>
          <div style="float:right">Следующее: <a data-xref="{title}" href="Runner_Details/Compiler_Batch_Files.htm">Пакетные файлы / сценарии компилятора</a></div>
        </div>
      </div>
      <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Все права защищены</span></h5>
    </div>
    <!-- KEYWORDS
Building via Command Line
CLI
Command Line Interface
CI
Continuous Integration
--><!-- TAGS
building_via_command_line
--></body>
</html>