<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="topic-comment" content="" />
  <title>is_instanceof_example</title>
  <link rel="stylesheet" type="text/css" href="../css/default.css" />
</head>
<body>
  <p class="code">function item() constructor {}<br />
    <br />
    function potion() : item() constructor {}<br />
    <br />
    function enemy() constructor {}<br />
    <br />
    var _potion = new potion();<br />
    <br />
    show_debug_message(is_instanceof(_potion, potion)); // true (1)<br />
    show_debug_message(is_instanceof(_potion, item)); // true (1)<br />
    show_debug_message(is_instanceof(_potion, enemy)); // false (0)
  </p>
  <p>The above code shows three constructors:Â <span class="inline2">item</span>, <span class="inline2">potion</span> which is a child of <span class="inline2">item</span>, and <span class="inline2">enemy</span>, which is a separate constructor.</p>
  <p>It creates a struct from the <span class="inline2">potion</span> constructor. Using <span class="inline2">is_instanceof()</span>, we can check that the new struct:</p>
  <ul class="colour">
    <li>is a <span class="inline2">potion</span></li>
    <li>is an <span class="inline2">item</span></li>
    <li>is not an <span class="inline2">enemy</span></li>
  </ul>
  <p>This way you can check whether a struct &quot;is&quot; something, as <strong>a potion is an item</strong>, so it returns <span class="inline2">true</span> for both constructors. However if wouldn&#39;t be true the other way around: <strong>an item is not a potion</strong>.</p>
</body>
</html>