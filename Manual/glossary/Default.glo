<?xml version="1.0" encoding="UTF-8"?>        

<glossgroup id="Default">          
<title>Glossary Definitions</title>        
<glossentry id="Default_absolute">
<glossterm>абсолютный</glossterm>
<glossdef>Абсолютное значение - это такое значение, при котором знак значения игнорируется, по сути, все значения преобразуются в положительные единицы или ноль. Так, например, абсолютное значение для -10 будет равно 10.</glossdef></glossentry>
<glossentry id="Default_algorithm">
<glossterm>алгоритм</glossterm>
<glossdef>Алгоритм - это набор инструкций или правил, предназначенных для решения определенной задачи. Проблема может быть простой, например, сложение двух чисел, или сложной, такой как преобразование видеофайла из одного формата в другой или сжатие звука в файл меньшего размера...</glossdef></glossentry>
<glossentry id="Default_anti-aliasing">
<glossterm>сглаживание</glossterm>
<glossdef>Это техника, используемая для сглаживания неровных линий или текстур путем смешивания цвета края с цветом пикселей вокруг него. Результат должен быть более приятным и реалистичным, в зависимости от интенсивности эффекта.</glossdef></glossentry>
<glossentry id="Default_API">
<glossterm>API</glossterm>
<glossdef>Аббревиатура "API" означает интерфейс прикладного программирования и относится к наборам правил, процедур и протоколов, используемых для создания программных приложений. API помогают в общении со сторонними программами или сервисами, которые могут быть использованы для создания различного программного обеспечения. Такие компании, как Facebook и Twitter, активно используют API, чтобы облегчить разработчикам доступ к своим сервисам, а в GameMaker Studio 2 вы увидите сокращение API, когда будете говорить о расширениях - например, Google Play Services API или Amazon Game On API.</glossdef></glossentry>
<glossentry id="Default_application_surface">
<glossterm>поверхность нанесения</glossterm>
<glossdef>Поверхность приложения - это специальная встроенная поверхность, на которую GameMaker Studio 2 будет рисовать все в событиях Draw Events игры (поверхность - это, по сути, область памяти, зарезервированная для графики). Эта поверхность затем перерисовывается в буфер дисплея в конце каждого кадра игры, отображая его содержимое игроку.</glossdef></glossentry>
<glossentry id="Default_architectures">
<glossterm>архитектуры</glossterm>
<glossdef>Архитектура процессорного чипа (CPU) - это описание его основных компонентов и основных операций. Каждое семейство процессоров имеет свою собственную архитектуру, например ARM или x64.</glossdef></glossentry>
<glossentry id="Default_ARGB">
<glossterm>ARGB</glossterm>
<glossdef>Это сокращение от Alpha, Red, Green, Blue и используется для обозначения компонентов цвета, указанных в виде шестнадцатеричного значения, например: #FF53E270, где каждый набор из двух цифр представляет один компонент. Разбивка приведенного выше примера ARGB дает нам следующие значения компонентов: Альфа(FF), красный(53), зеленый(E2) и синий(70).</glossdef></glossentry>
<glossentry id="Default_argument">
<glossterm>аргумент</glossterm>
<glossdef>Аргумент (также известный как параметр) - это значение, которое передается в функцию. Например, функция языка GameMaker Language 'sqr(num)' - это функция, которая выдает квадрат числа, указанного в качестве аргумента, например: 'a = sqr(4);' Здесь аргументом является 4, а функция возвращает 16, которые хранятся в переменной 'a'.</glossdef></glossentry>
<glossentry id="Default_asset_key">
<glossterm>ключ актива</glossterm>
<glossdef>Позиция на временной шкале в доп. листе, куда был помещен актив. Ключ актива может длиться несколько кадров.</glossdef></glossentry>
<glossentry id="Default_Asset_Track">
<glossterm>отслеживание активов</glossterm>
<glossdef>Дорожка на панели дорожек последовательностей, которая содержит один актив - спрайт, звук, экземпляр или последовательность.</glossdef></glossentry>
<glossentry id="Default_assignment">
<glossterm>задание</glossterm>
<glossdef>Присвоение - это просто термин, используемый, когда мы устанавливаем (присваиваем) значение переменной.</glossdef></glossentry>
<glossentry id="Default_backend">
<glossterm>бэкэнд</glossterm>
<glossdef>Бэкэнд - это часть программы, которая выполняется в фоновом режиме и непрозрачна для пользователя, обычно без необходимости какого-либо взаимодействия с пользователем. Например, серверная часть при сетевом программировании через Интернет или обработка данных, которая происходит за кулисами ролевой игры. По сути, это противоположность фронтенду.</glossdef></glossentry>
<glossentry id="Default_bezier_interpolation">
<glossterm>интерполяция безье</glossterm>
<glossdef>Интерполяция Безье предполагает оценку нового значения путем соединения двух соседних известных значений с помощью математически сгенерированной сплайн-кривой, которую можно редактировать с помощью "ручек", прикрепленных к каждой точке. Затем можно получить интерполированное значение, проверив любую точку вдоль линии.</glossdef></glossentry>
<glossentry id="Default_bit">
<glossterm>бит</glossterm>
<glossdef>Одно значение данных, которое может быть либо 1, либо 0 (истина или ложь). Биты объединяются в блоки по 8 для создания байта.</glossdef></glossentry>
<glossentry id="Default_bit_depth">
<glossterm>битовая глубина</glossterm>
<glossdef>Битовая глубина - это количество битов в каждом образце аудиофайла. Меньшая битовая глубина обеспечивает более низкое качество звука, но значительно меньший размер файла. Низкая битовая глубина обычно используется для небольших звуковых эффектов и патформ, где память может быть проблемой (например, HTML5).</glossdef></glossentry>
<glossentry id="Default_bit_rate">
<glossterm>скорость передачи данных</glossterm>
<glossdef>Скорость передачи данных измеряется в килобитах в секунду (кбит/с или k) и представляет собой количество кодированных битов в секунду или количество битов, передаваемых или принимаемых в секунду. Чем выше битрейт и частота дискретизации, тем выше качество звука, но тем больше требуется вычислительной мощности и пропускной способности. Более низкие битовые скорости позволяют создать файл меньшего размера и использовать меньше вычислительной мощности и полосы пропускания, но при этом снижается качество звука. Для музыки хорошего качества обычно предпочтителен битрейт 64-128 кбит/с (рекомендуется 96 кбит/с).</glossdef></glossentry>
<glossentry id="Default_bitmap">
<glossterm>растровое изображение</glossterm>
<glossdef>Растровое изображение - это термин, используемый для описания любого статического изображения, состоящего из цветных пикселей, которые хранятся в виде битов (в отличие от векторных изображений, которые хранятся с помощью математических алгоритмов). PNG, JPG и BMP являются примерами растровых изображений, в то время как SWF является примером векторного изображения.</glossdef></glossentry>
<glossentry id="Default_boolean">
<glossterm>булево</glossterm>
<glossdef>Булево - это тип переменной, которая в зависимости от своего значения может возвращать true или false и использоваться в условиях и выражениях. К булевой переменной можно применять константы "false" или "true", которые эквивалентны реальным значениям 0 и 1.</glossdef></glossentry>
<glossentry id="Default_bounding_box">
<glossterm>ограничительная рамка</glossterm>
<glossdef>Для спрайтов bounding-box - это название, данное краям области, в которой изначально будут обнаружены столкновения, и оно не обязательно должно быть того же размера, что и спрайт, к которому оно применяется. Для последовательностей ограничивающая область - это внешний край общего пространства, которое один или несколько объектов занимают на холсте.</glossdef></glossentry>
<glossentry id="Default_build_tools">
<glossterm>инструменты для сборки</glossterm>
<glossdef>Инструменты сборки - это внешние приложения, которые требуются GameMaker Studio 2 для создания исполняемых пакетов для различных целевых платформ.</glossdef></glossentry>
<glossentry id="Default_byte">
<glossterm>байт</glossterm>
<glossdef>Байт - это единица данных длиной в восемь двоичных разрядов, и каждый из разрядов, составляющих байт, называется битом, т.е. байт - это 8 битов, а бит может быть 1 или 0.</glossdef></glossentry>
<glossentry id="Default_Cache">
<glossterm>Кэш</glossterm>
<glossdef>Кэш - это коллекция файлов, которые генерируются GameMaker один раз, а затем сохраняются и используются повторно в течение нескольких запусков проекта. Обратите внимание, что иногда этот кэш может стать "несвежим", то есть его необходимо очистить, чтобы заставить GameMaker перестроить его с нуля, гарантируя, что никакие несвежие файлы не испортят окончательный вариант игры.</glossdef></glossentry>
<glossentry id="Default_callback">
<glossterm>обратный звонок</glossterm>
<glossdef>Обратный вызов - это просто функция, которая запускается и затем вызывает другую функцию (или блок кода), когда она завершает выполнение того, что ей было поручено. Например, функция sprite_add() вызовет обратный вызов в асинхронном событии Image Loaded, когда спрайт будет загружен.</glossdef></glossentry>
<glossentry id="Default_catmull-rom_interpolation">
<glossterm>интерполяция катмул-ром</glossterm>
<glossdef>Это тип нелинейной интерполяции, основанный на математических сплайнах. Он используется для оценки нового значения путем соединения двух соседних известных значений с помощью "гладких" кривых (сплайнов), и новое значение может быть получено из любой точки вдоль линии.</glossdef></glossentry>
<glossentry id="Default_Compiling">
<glossterm>Компиляция</glossterm>
<glossdef>Компиляция - это когда GameMaker берет ваш код и собирает его таким образом, чтобы создать исполняемый пакет, который будет работать на устройстве как игра.</glossdef></glossentry>
<glossentry id="Default_compression">
<glossterm>сжатие</glossterm>
<glossdef>Сжатие - это использование математических алгоритмов для уменьшения размера файла. В частности, это используется для аудио- и графических файлов, где такие форматы, как JPG (изображение) и MP3 (аудио), являются сжатыми форматами. Сжатие обычно приводит к уменьшению размера файла, но с некоторой потерей данных, которая может быть заметна или не заметна в зависимости от типа и силы сжатия. Несжатыми форматами являются BMP (изображение) или WAV (аудио), которые имеют больший размер файла, но без потери данных.</glossdef></glossentry>
<glossentry id="Default_conditional">
<glossterm>условный</glossterm>
<glossdef>Условные выражения, условные операторы и условные выражения - это особенности общего языка программирования, они помогают коду сделать выбор, в котором результатом будет либо истина, либо ложь. Они могут выполнять различные действия в зависимости от потребностей программиста, а несколько условий могут быть объединены в одно условие, если конечное значение условия либо истинно, либо ложно. Примерами условных операторов являются 'if' и 'while'.</glossdef></glossentry>
<glossentry id="Default_constants">
<glossterm>постоянная</glossterm>
<glossdef>Константа - это термин, используемый для описания именованного значения, которое не изменяется в течение всего времени выполнения программы. В GameMaker Studio 2 есть несколько встроенных констант - например, os_windows, - но вы также можете создавать собственные константные значения для использования в своих проектах (так называемые макросы) и расширениях.</glossdef></glossentry>
<glossentry id="Default_CPU_overhead">
<glossterm>Нагрузка на процессор</glossterm>
<glossdef>Нагрузка на процессор измеряет объем работы, который может выполнить центральный процессор компьютера, и процент этой мощности, используемый отдельными вычислительными задачами.</glossdef></glossentry>
<glossentry id="Default_deadzone">
<glossterm>мертвая зона</glossterm>
<glossdef>Мертвая зона - это расстояние, на которое нужно переместить аналоговый стик, прежде чем игра распознает его перемещение. При низкой мертвой зоне любое незначительное движение аналогового стика приведет к перемещению игрока, прицеливанию или чему-либо еще. Высокое значение мертвой зоны означает, что аналоговому стику нужно сделать гораздо большее движение, прежде чем игра обнаружит его и переместит управляемый объект.</glossdef></glossentry>
<glossentry id="Default_back-buffer">
<glossterm>буфер дисплея</glossterm>
<glossdef>Буфер дисплея - это "холст", на котором все окончательно отрисовывается. Некоторые события направлены непосредственно на него (например, событие Pre Draw), в то время как другие сначала рисуют на поверхности приложения, а затем рисуют в буфере дисплея.</glossdef></glossentry>
<glossentry id="Default_Dope_Sheet">
<glossterm>Наркотический лист</glossterm>
<glossdef>Dope Sheet - это визуальное представление временной шкалы последовательности, где вы можете добавлять, удалять и редактировать различные ключи активов и параметры, которые влияют на поведение различных дорожек в последовательности с течением времени.</glossdef></glossentry>
<glossentry id="Default_encoding">
<glossterm>кодирование</glossterm>
<glossdef>Кодирование преобразует данные в другой формат с помощью общедоступной схемы, чтобы ее можно было легко изменить на противоположную. Это не то же самое, что шифрование, поскольку для его декодирования не требуется ключ. Кодирование обычно используется либо для изменения формата данных для более удобного использования другой системой (например, для отправки данных на сервер), либо для того, чтобы сделать данные нечитаемыми для человеческого глаза.</glossdef></glossentry>
<glossentry id="Default_EULA">
<glossterm>EULA</glossterm>
<glossdef>Лицензионное соглашение с конечным пользователем (EULA) - это юридический документ, в котором изложена лицензия на продукт, который вы получаете.</glossdef></glossentry>
<glossentry id="Default_exception">
<glossterm>исключение</glossterm>
<glossdef>Особое, неожиданное и аномальное состояние, возникающее во время выполнения программы, известно как исключение. Его также можно назвать ошибкой или условием, которое изменяет путь программы или микропроцессора на другой путь. Примером исключения может быть случай, когда программа пытается получить доступ к переменной, но переменная не существует. Исключения должны быть обработаны и устранены в коде программы, чтобы избежать фатальной ошибки, этот процесс называется отладкой.</glossdef></glossentry>
<glossentry id="Default_executable_package">
<glossterm>исполняемый пакет</glossterm>
<glossdef>Пакет файлов, которые используются для выполнения программы. В GameMaker Studio это может быть один файл - например, программа установки для windows - или несколько файлов - например, выход HTML5.</glossdef></glossentry>
<glossentry id="Default_expression">
<glossterm>выражение</glossterm>
<glossdef>Выражение - это комбинация одной или нескольких констант, переменных, операторов и/или функций, которые интерпретируются в соответствии с определенными правилами старшинства и ассоциации, чтобы вернуть другое значение. Простым выражением может быть (5 5), которое возвращает 10.</glossdef></glossentry>
<glossentry id="Default_falsy">
<glossterm>falsy</glossterm>
<glossdef>Значение, которое считается "ложным" при использовании в качестве булевой функции, например, в условии if().</glossdef></glossentry>
<glossentry id="Default_floating_point">
<glossterm>плавающая запятая</glossterm>
<glossdef>Числа с плавающей точкой - это числа, содержащие десятичные точки. Например, числа 5,5, 0,001 и -2 345,6789 являются числами с плавающей запятой. Числа без десятичных знаков называются целыми числами (например, 2, 56, 1400).</glossdef></glossentry>
<glossentry id="Default_font">
<glossterm>шрифт</glossterm>
<glossdef>Шрифт - это набор графических глифов, используемых для представления текста на каком-либо языке. Шрифты могут иметь различный вес, размер и стиль и используются для отображения любого письменного содержимого в проекте.</glossdef></glossentry>
<glossentry id="Default_framework">
<glossterm>структура</glossterm>
<glossdef>Фреймворк - это базовая основа кода, которая может быть изменена и/или дополнена пользователем. Фреймворк может включать различные программные библиотеки, API, компиляторы и многое другое. Проще говоря, фреймворк обеспечивает благоприятную среду для определенного типа и уровня программирования проекта. В GameMaker Studio 2 можно, например, создавать собственные проекты фреймворка (с помощью Local Asset Packages), содержащие скрипты и объекты для общего управления, управления статусами, сетевого взаимодействия или чего-либо еще, что вы обычно используете в своих проектах, а затем импортировать их в новые проекты в самом начале, чтобы дать вам базовую основу для продолжения работы без необходимости каждый раз перепрограммировать эти системы.</glossdef></glossentry>
<glossentry id="Default_frontend">
<glossterm>фронтенд</glossterm>
<glossdef>Фронтенд - это часть программы, которая находится "перед лицом", то есть та часть, с которой взаимодействует конечный пользователь. Например, в GameMaker Studio 2 интерфейс, в котором вы программируете, добавляете активы и т.д., является фронтендом программы, поскольку именно здесь вы взаимодействуете с программой, вводите значения, файлы и другие вещи. По сути, это противоположность бэкенду.</glossdef></glossentry>
<glossentry id="Default_GameMaker:_Studio 1.4">
<glossterm>GameMaker: Студия 1.4</glossterm>
<glossdef>Предыдущая версия программного обеспечения GameMaker (часто называемая Legacy GameMaker), которая больше не доступна и не поддерживается.</glossdef></glossentry>
<glossentry id="Default_garbage_collector">
<glossterm>сборщик мусора</glossterm>
<glossdef>Сборщик мусора - это автоматизированный инструмент, который является частью кода игры и используется для удаления определенных вещей (например, массивов и структур) из памяти, когда на них больше нет ссылок в вашем коде, без необходимости их явного удаления.</glossdef></glossentry>
<glossentry id="Default_gizmos">
<glossterm>штуковины</glossterm>
<glossdef>Гизмо - это непосредственно манипулируемые, самодостаточные, визуальные экранные идиомы - по сути, все, что является визуальным и может взаимодействовать с пользователем или управлять им для создания эффекта или конкретного результата.</glossdef></glossentry>
<glossentry id="Default_GUI">
<glossterm>GUI</glossterm>
<glossdef>Сокращение от "графический интерфейс пользователя", который представляет собой пользовательский интерфейс, включающий графические элементы, такие как окна, иконки и кнопки. В GameMaker у вас есть определенный набор событий объекта (Draw GUI Events), которые могут рисовать на этот слой, специально предназначенный для таких вещей, как счет, жизни, инвентарь и т.д..</glossdef></glossentry>
<glossentry id="Default_hard-code">
<glossterm>с жестким кодом</glossterm>
<glossdef>В компьютерном программировании термин "жестко закодированный" используется для описания кода, который считается фиксированным и не может быть изменен. Жестко закодированные функции встроены в аппаратное или программное обеспечение таким образом, что их нельзя изменить в дальнейшем. Например, если вы создаете игру и "жестко закодировали" здоровье игрока на 10, то вы будете использовать значение 10 во всем коде игры, а не переменную.</glossdef></glossentry>
<glossentry id="Default_hashing">
<glossterm>хэширование</glossterm>
<glossdef>Хеширование - это метод создания строки или значения, относящегося к одному источнику - обычно файлу - и ТОЛЬКО к этому источнику. Например, в GameMaker вы можете создать хэш для файла сохранения, затем, перед тем как обратиться к нему позже, создать другой хэш для него и проверить исходный хэш и новый хэш, чтобы определить, не был ли файл подделан.</glossdef></glossentry>
<glossentry id="Default_HVS">
<glossterm>HSV</glossterm>
<glossdef>Это означает "оттенок", "насыщенность" и "значение" и представляет собой способ выражения цвета, обычно использующий значения от 0 до 255. Оттенок - это значение оттенка цвета, насыщенность - количество используемого цвета, а значение - яркость цвета.</glossdef></glossentry>
<glossentry id="Default_HUD">
<glossterm>HUD</glossterm>
<glossdef>В играх HUD означает Heads-Up Display. Это метод, с помощью которого информация визуально передается игроку как часть пользовательского интерфейса игры, поэтому такие вещи, как полоска здоровья, значки состояния, счет и т.д... являются частью HUD, и обычно элементы HUD не требуют взаимодействия с пользователем.</glossdef></glossentry>
<glossentry id="Default_IDE">
<glossterm>IDE</glossterm>
<glossdef>IDE, или интегрированная среда разработки, - это программное приложение, предоставляющее программистам комплексные средства для разработки программного обеспечения. В данном случае IDE считается весь фронтенд GameMaker Studio 2, который включает разделы для создания графики, добавления звуков и кода для создания игр.</glossdef></glossentry>
<glossentry id="Default_iteration">
<glossterm>итерация</glossterm>
<glossdef>Итерация - это однократный проход через набор операций в коде вашего проекта. Одной из форм итерации в компьютерном программировании являются циклы. Цикл повторяет определенный участок кода до тех пор, пока не будет выполнено условие и можно будет продолжить выполнение. Каждый раз, когда компьютер выполняет цикл, это называется итерацией. Проще говоря, итерация - это процесс повторения определенного фрагмента кода снова и снова для выполнения определенного действия.</glossdef></glossentry>
<glossentry id="Default_JSON">
<glossterm>JSON</glossterm>
<glossdef>JSON расшифровывается как JavaScript Object Notatio и представляет собой легкий формат для хранения данных. JSON часто используется при отправке данных с сервера на веб-страницу и считается "самоописывающимся", его легко понять и следовать ему при просмотре.</glossdef></glossentry>
<glossentry id="Default_keyframe">
<glossterm>ключевой кадр</glossterm>
<glossdef>Ключевой кадр (также называемый ключом параметра) - это точка на временной шкале в допэкране, где определяется изменение значения параметра.</glossdef></glossentry>
<glossentry id="Default_keyword">
<glossterm>ключевое слово</glossterm>
<glossdef>Ключевые слова - это специальные слова, которые зарезервированы языком программирования или программой, поскольку они имеют особое значение. Эти ключевые слова зарезервированы для выполнения определенных задач, и они могут быть как командами, так и параметрами. Каждый язык программирования имеет набор зарезервированных ключевых слов (также известных как зарезервированные имена), которые не могут быть использованы в качестве имен переменных, и язык GameMaker не является исключением, где такие слова, как return, while, if и break являются зарезервированными ключевыми словами, используемыми в языке программирования.</glossdef></glossentry>
<glossentry id="Default_linear_interpolation">
<glossterm>линейная интерполяция</glossterm>
<glossdef>Линейная интерполяция предполагает оценку нового значения путем соединения двух соседних известных значений прямой линией. Затем можно получить интерполированное значение, проверив любую точку вдоль линии. В графике линейная интерполяция относится к основному методу сглаживания краев пикселей.</glossdef></glossentry>
<glossentry id="Default_literal">
<glossterm>дословно</glossterm>
<glossdef>Явное значение, записанное в коде, например, когда вы пишете "A TEXT STRING", вы используете литерал строки, в отличие от возврата строки через переменную или функцию. Аналогично, [0, 1, 2] - это литерал массива.</glossdef></glossentry>
<glossentry id="Default_machine_code">
<glossterm>машинный код</glossterm>
<glossdef>Машинный код - это код, который непосредственно выполняется процессором без необходимости интерпретации интерпретатором. Он является самым низким уровнем кода и содержит инструкции, которые выполняет процессор. Он специфичен для архитектуры процессора. Как следствие, он оптимизирован. Он также может быть сгенерирован из исходного кода на языке программирования более высокого уровня компилятором.В GameMaker компилятор YoYo может быть использован для создания исполняемого файла, содержащего оптимизированный машинный код для различных платформ.</glossdef></glossentry>
<glossentry id="Default_method">
<glossterm>метод</glossterm>
<glossdef>В GameMaker метод - это название, данное пользовательской функции, которая была привязана к экземпляру, так что переменная экземпляра является именем функции и тем, что вы используете для ее вызова.</glossdef></glossentry>
<glossentry id="Default_operand">
<glossterm>операнд</glossterm>
<glossdef>Операнд - это термин, используемый для обозначения значений, которыми можно манипулировать с помощью различных операторов. В выражении A B C операндами являются A, B и C.</glossdef></glossentry>
<glossentry id="Default_operator">
<glossterm>оператор</glossterm>
<glossdef>Оператор - это термин, используемый для обозначения того, что может манипулировать различными операндами. В выражении A B - C, и - являются операторами. Примерами различных операторов являются (сложение), - (вычитание), = (равно), != (не равно) и >= (больше или равно), но существует и множество других.</glossdef></glossentry>
<glossentry id="Default_parameter_key">
<glossterm>ключ параметра</glossterm>
<glossdef>Ключ параметра (также называемый ключевым кадром) - это точка на временной шкале в допэкране, в которой определяется изменение значения параметра.</glossdef></glossentry>
<glossentry id="Default_parameter_tracks">
<glossterm>дорожки параметров</glossterm>
<glossdef>Дорожка, которая была назначена дорожке актива на панели дорожек и которая изменяет один параметр дорожки актива, с которой она связана, например, позицию или индекс изображения.</glossdef></glossentry>
<glossentry id="Default_physics">
<glossterm>физика</glossterm>
<glossdef>В GameMaker, когда мы говорим об объекте, экземпляре или комнате, использующих "физику", мы имеем в виду, что они используют встроенные функции моделирования физики, основанные на библиотеке физики Box2D.</glossdef></glossentry>
<glossentry id="Default_playhead">
<glossterm>playhead</glossterm>
<glossdef>Текущая позиция "воспроизведения" на временной шкале в доп. листе Sequences или в представлении кадров редактора Sprite. В последовательностях (и спрайтах) эта позиция будет перемещаться при предварительном просмотре анимации, и вы можете поместить ее на определенные кадры, чтобы увидеть и отредактировать клавиши и ключевые кадры в этой позиции.</glossdef></glossentry>
<glossentry id="Default_port_number">
<glossterm>номер порта</glossterm>
<glossdef>Номер порта - это способ идентификации конкретного процесса, на который должно быть перенаправлено сообщение Интернета или другой сети, когда оно поступает на сервер.</glossdef></glossentry>
<glossentry id="Default_PURE">
<glossterm>чистый</glossterm>
<glossdef>Чистая функция не влияет на игру, ничего не создает и не изменяет. Она только возвращает значение. При одинаковом наборе аргументов она всегда возвращает одно и то же значение.</glossdef></glossentry>
<glossentry id="Default_Remote_Workers">
<glossterm>Удаленные работники</glossterm>
<glossdef>Remote Worker - это специальная программа, которую GameMaker Studio 2 будет использовать на определенных платформах для создания исполняемых файлов ваших игр без фактического запуска IDE GameMaker Studio 2 на этой платформе.</glossdef></glossentry>
<glossentry id="Default_render">
<glossterm>визуализированный</glossterm>
<glossdef>Когда в GameMaker Studio 2 что-то рендерится, это обычно означает, что оно было просто "нарисовано в буфер дисплея" или "нарисовано на поверхности".  Рендеринг также может означать процесс превращения векторного источника (например, шрифта) в растровое изображение.</glossdef></glossentry>
<glossentry id="Default_RSS">
<glossterm>RSS</glossterm>
<glossdef>Сокращение от "Rich Site Summary", это стандартизированная система распространения контента от онлайн-издателя к пользователям Интернета.</glossdef></glossentry>
<glossentry id="Default_Runtime">
<glossterm>Время выполнения</glossterm>
<glossdef>Время выполнения в GameMaker Studio 2 - это набор активов компилятора, который необходим программе для создания конечного исполняемого пакета для заданной целевой платформы. Они устанавливаются отдельно от IDE и могут быть изменены и обновлены в любое время.</glossdef></glossentry>
<glossentry id="Default_sample_rate">
<glossterm>частота дискретизации</glossterm>
<glossdef>Частота дискретизации - это количество образцов звука, передаваемых в секунду, измеряемое в Гц или кГц (один кГц равен 1000 Гц). Чем выше частота дискретизации, тем больше звук будет приближен к оригинальной аналоговой форме волны, но тем больше будет размер файла. Как правило, звуковые эффекты имеют более низкую частоту дискретизации, чем музыка.</glossdef></glossentry>
<glossentry id="Default_SCM">
<glossterm>SCM</glossterm>
<glossdef>SCM расшифровывается как Source Control Management, это программа (или набор программ), отвечающая за поддержание версий исходного кода проекта. SCM позволяет хранить историю изменений кода, а также просматривать и отменять любые изменения, внесенные в исходный код.</glossdef></glossentry>
<glossentry id="Default_SDK">
<glossterm>SDK</glossterm>
<glossdef>SDK расшифровывается как "комплект для разработки программного обеспечения". Обычно это набор программного обеспечения и/или пакетов, используемых для разработки приложений для конкретного устройства или операционной системы.</glossdef></glossentry>
<glossentry id="Default_server">
<glossterm>сервер</glossterm>
<glossdef>В вычислительной технике сервер - это компьютерная программа или устройство, которое обеспечивает функциональность для других программ или устройств, называемых "клиентами".</glossdef></glossentry>
<glossentry id="Default_shader">
<glossterm>шейдеры</glossterm>
<glossdef>Шейдер - это набор небольших программ, которые выполняются непосредственно на GPU для создания графики и графических эффектов. Они выполняются очень быстро и освобождают центральный процессор для выполнения других задач.</glossdef></glossentry>
<glossentry id="Default_smooth_interpolation">
<glossterm>плавная интерполяция</glossterm>
<glossdef>Плавная интерполяция предполагает оценку нового значения путем соединения двух соседних известных значений математически сгенерированной сплайн-кривой. Затем можно получить интерполированное значение, проверив любую точку вдоль линии.</glossdef></glossentry>
<glossentry id="Default_source_code">
<glossterm>исходный код</glossterm>
<glossdef>Исходный код - это фундаментальный компонент компьютерной программы, необходимый для ее выполнения.</glossdef></glossentry>
<glossentry id="Default_spline">
<glossterm>шлицевой</glossterm>
<glossdef>Сплайн - это гладкая кривая, используемая для соединения точек. Математически она определяется как достаточно гладкая полиномиальная функция, которая определяется по частям и обладает высокой степенью гладкости в местах соединения частей полинома.</glossdef></glossentry>
<glossentry id="Default_sprites">
<glossterm>спрайты</glossterm>
<glossdef>Спрайт - это растровая графика, предназначенная для того, чтобы быть частью большой сцены. Это может быть как статичное изображение, так и анимированная графика.</glossdef></glossentry>
<glossentry id="Default_statement">
<glossterm>заявление</glossterm>
<glossdef>В программировании утверждение - это одна строка кода, написанная на языке программирования, которая выражает действие, которое должно быть выполнено. У утверждения могут быть свои внутренние компоненты, включая выражения, операторы и функции. Примером утверждения является A = B 5. Программа GameMaker Studio 2 - это не что иное, как последовательность одного или нескольких утверждений, которые вместе выполняют определенную задачу (например, перемещение игрока).</glossdef></glossentry>
<glossentry id="Default_swatches">
<glossterm>образцы</glossterm>
<glossdef>Образец - это просто маленький квадратный образец цвета или материала, используемый для иллюстрации того, как он будет выглядеть.</glossdef></glossentry>
<glossentry id="Default_syntax">
<glossterm>синтаксис</glossterm>
<glossdef>Подобно человеческим языкам, языки программирования имеют свой собственный набор правил передачи высказываний, и этот набор правил известен как синтаксис. Несмотря на то, что ряд языков программирования имеют много общих черт, функций и возможностей, они, как правило, различаются по синтаксису. Без правильного использования синтаксиса невозможно написать исполняемую программу, а неправильный синтаксис приведет к ошибкам при компиляции.</glossdef></glossentry>
<glossentry id="Default_texel">
<glossterm>texel</glossterm>
<glossdef>Тексель (или элемент текстуры) является фундаментальной единицей пространства текстуры, так же как пиксель является фундаментальным элементом пространства изображения. Текстуры представлены массивами текселей, так же как изображения представлены массивами пикселей. При текстурировании 3D-поверхности (процесс, известный как текстурирование) рендерер сопоставляет текстуры с соответствующими пикселями в выходном изображении.</glossdef></glossentry>
<glossentry id="Default_texture_atlas">
<glossterm>атлас текстур</glossterm>
<glossdef>Другое название страницы текстуры, которая представляет собой просто набор изображений, необходимых одному или нескольким спрайтам в вашей игре, организованных оптимальным образом, чтобы использовать как можно меньше текстурной памяти.</glossdef></glossentry>
<glossentry id="Default_texture_page">
<glossterm>страница текстуры</glossterm>
<glossdef>Текстурная страница (также называемая атласом текстур) - это коллекция изображений (спрайтов, наборов тайлов, шрифтовых символов и т.д.), сгруппированных оптимальным образом, чтобы они занимали наименьшее количество текстурной памяти при запуске игры.</glossdef></glossentry>
<glossentry id="Default_tile_map">
<glossterm>карта плитки</glossterm>
<glossdef>Карта тайлов - это название, данное коллекции тайлов, взятых из набора тайлов и используемых для создания уровней в игре.</glossdef></glossentry>
<glossentry id="Default_tile-sets">
<glossterm>комплекты плитки</glossterm>
<glossdef>Набор плиток - это коллекция квадратных или прямоугольных графических объектов, расположенных на сетке в виде единого изображения. Каждый элемент сетки может быть размещен в комнате несколько раз, чтобы создать большую сцену, называемую "картой плитки".</glossdef></glossentry>
<glossentry id="Default_timeline">
<glossterm>временные шкалы</glossterm>
<glossdef>Временная шкала в GameMaker Studio 2 - это линейная коллекция событий, которые будут выполняться в последовательном порядке. Каждому событию можно присвоить код или действия для выполнения задачи, и при запуске временной шкалы эти задачи будут выполняться по мере достижения каждого события временной шкалы.</glossdef></glossentry>
<glossentry id="Default_Track_Panel">
<glossterm>Панель для отслеживания</glossterm>
<glossdef>Область редактора последовательности, которая показывает все различные дорожки в последовательности - дорожки активов, дорожки параметров, группы дорожек и группы масок клипов.</glossdef></glossentry>
<glossentry id="Default_truth_table">
<glossterm>таблица истинности</glossterm>
<glossdef>Таблица истинности - это математическая таблица, используемая в логике - в частности, в связи с булевой алгеброй и булевыми функциями - которая устанавливает функциональные значения логических выражений для каждого из их функциональных аргументов, то есть для каждой комбинации значений, принимаемых их логическими переменными.</glossdef></glossentry>
<glossentry id="Default_truthy">
<glossterm>правдивый</glossterm>
<glossdef>Значение, которое считается "истинным" при использовании в качестве булевой функции, например, в условии if().</glossdef></glossentry>
<glossentry id="Default_typo">
<glossterm>опечатка</glossterm>
<glossdef>Типографская ошибка.</glossdef></glossentry>
<glossentry id="Default_URL">
<glossterm>URL</glossterm>
<glossdef>Сокращение от "Универсальный локатор ресурсов", в основном это адрес чего-либо в Интернете.</glossdef></glossentry>
<glossentry id="Default_v-sync">
<glossterm>v-sync</glossterm>
<glossdef>V-sync или вертикальная синхронизация используется для синхронизации скорости обновления игры с частотой обновления монитора. Это может уменьшить разрывы экрана - когда на экране отображаются фрагменты нескольких кадров за один раз - но также может вызвать проблемы с производительностью или проблемы на мониторах с высокой частотой обновления.</glossdef></glossentry>
<glossentry id="Default_variable">
<glossterm>переменная</glossterm>
<glossdef>Переменная - это именованное значение в программе, которое может быть изменено, сохранено и отображено, когда это необходимо. Например, если у нас есть целочисленная переменная с именем XYZ и она хранит значение 10, то мы можем выполнить такие действия, как A = XYZ 10, которые установят значение переменной A равным 20, поскольку XYZ равно 10, а мы добавляем к нему 10. Вы также можете изменять значения переменных с помощью операторов, например, если сделать XYZ = XYZ 100, то значение переменной XYZ станет равным 110. Переменные также можно использовать для хранения идентификаторов и ссылок на различные активы.</glossdef></glossentry>
<glossentry id="Default_vector">
<glossterm>вектор</glossterm>
<glossdef>Вектор - это математическая конструкция, которая имеет размер, называемый величиной, и направление. В GameMaker вектор обычно используется для того, чтобы показать расстояние и направление перемещения объекта. Вектор также может использоваться для определения изображений, и некоторые форматы изображений, например SWF, используют векторную математику для определения изображений, которые они содержат.</glossdef></glossentry>
<glossentry id="Default_Version_Number">
<glossterm>Номер версии</glossterm>
<glossdef>Номер версии - это уникальный набор цифр, присвоенный конкретному выпуску программы, игры или актива, обычно в формате MAJOR.MINOR.MAINTENANCE, например: v2.3.56. Как правило, по мере выпуска обновлений и совершенно новых изданий игры или актива номер версии увеличивается.</glossdef></glossentry>
<glossentry id="Default_vertex">
<glossterm>вершина</glossterm>
<glossdef>Вершина - это название, данное одной точке многоугольника, которая содержит различные характеристики, определяющие ее положение, цвет и текстуру. В компьютерной графике это обычно означает угол треугольника, который используется для создания примитива, а комбинация таких примитивов - это то, что создает графику на экране.</glossdef></glossentry>
<glossentry id="Default_virtual_machine">
<glossterm>Виртуальная машина (VM)</glossterm>
<glossdef>В GameMaker виртуальная машина (VM) - это метод компиляции, который использует общий бегунок для каждой платформы, а затем использует его для интерпретации кода вашей игры.</glossdef></glossentry>
<glossentry id="Default_VRAM">
<glossterm>VRAM</glossterm>
<glossdef>VRAM - это объем памяти, доступный для видео, то есть пространство памяти, в котором могут храниться текстуры и изображения.</glossdef></glossentry>
<glossentry id="Default_weak_reference">
<glossterm>слабая ссылка</glossterm>
<glossdef>Слабая ссылка - это ссылка, которая не защищает ссылаемый объект от сбора сборщиком мусора, и поэтому может быть использована для проверки того, жива ли структура (ссылка) или нет где-то в игре.</glossdef></glossentry>
<glossentry id="Default_YoYo_Compiler">
<glossterm>YoYo Compiler (YYC)</glossterm>
<glossdef>Это специальный компилятор для создания исполняемых пакетов, которые используют родной код вместо интерпретируемого кода и бегунка (именно это используется при компиляции GameMaker VM). Скомпилированный код быстрее выполняется, но на компиляцию исполняемого файла уходит больше времени.</glossdef></glossentry>
<glossentry id="Default_multicast">
<glossterm>многоадресная рассылка</glossterm>
<glossdef>Многоадресная рассылка - это сетевая коммуникация, в которой вместо одного получателя при одной передаче адресуется несколько получателей.</glossdef></glossentry></glossgroup>